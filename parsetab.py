
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND BIT_AND BIT_OR BOOL BOOL COLON COMMA DEF DIVIDE EMP_LIST EMP_SET EMP_TUPLE EQEQ EQUAL FLOAT FLOWERCLOSE FLOWEROPEN FOR GREATER GREATEREQ HASH ID IF IN INT LEN LESSER LESSEREQ LEVEL1 LEVEL2 LEVEL3 MINUS MOD MULTIPLY NAME NEWLINE NOTEQ OR PARANCLOSE PARANOPEN PLUS PRINT RANGE STR_CONST WHILEexpression : ID EQUAL expression\n                    | ID EQUAL EMP_LIST\n                    | ID EQUAL EMP_TUPLE\n                    | ID EQUAL EMP_SET\n                    | ID EQUAL STR_CONST\n                    | ID EQUAL ID\n                    expression : ID PLUS EQUAL term\n                    | factor PLUS factor\n                    | expression PLUS term\n                    |  ID PLUS factor \n                    | factor PLUS ID\n                    | ID PLUS ID\n                    | expression PLUS ID\n                    | ID PLUS expression\n                    expression : PRINT PARANOPEN STR_CONST PARANCLOSE\n                    | PRINT PARANOPEN ID PARANCLOSE\n                    | PRINT PARANOPEN term PARANCLOSEexpression : expression MINUS term\n                    | ID MINUS EQUAL term\n                    | MINUS term\n                    | term MINUS expression\n                    | term MINUS term\n                    | ID MINUS ID\n                    | term MINUS ID\n                    | ID MINUS termexpression : termterm : term MULTIPLY factor\n            | ID MULTIPLY ID\n            | ID MULTIPLY factor\n            | factor MULTIPLY ID\n            | ID MULTIPLY term\n            | term MULTIPLY ID\n            | factor MULTIPLY factor\n    term : term DIVIDE factorterm : factorfactor : INT\n            | FLOATfactor : PARANOPEN expression PARANCLOSEexpression : whileloop\n                    | forloop\n                    | forloop2\n                    | whileloop2whileloop2 : LEVEL1 WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON \n                    | LEVEL1 WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON\n                    | LEVEL1 WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON\n                    | LEVEL1 WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON\n                    | LEVEL1 WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON\n                    | LEVEL1 WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON\n                    | LEVEL1 WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON\n                    | LEVEL1 WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON\n                    | LEVEL1 WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON\n                    | LEVEL1 WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON\n                    | LEVEL1 WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON\n                    | LEVEL1 WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON\n                    | LEVEL1 WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON\n                    | LEVEL1 WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON\n                    | LEVEL1 WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON\n                    | LEVEL1 WHILE BOOL COLON\n                    | LEVEL1 WHILE STR_CONST COLON\n                    | LEVEL1 WHILE factor COLON\n                    | LEVEL1 WHILE ID COLONwhileloop :  WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON \n                    | WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON\n                    | WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON\n                    | WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON\n                    | WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON\n                    | WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON\n                    | WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON\n                    | WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON\n                    | WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON\n                    | WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON\n                    | WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON\n                    | WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON\n                    | WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON\n                    | WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON\n                    | WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON\n                    | WHILE BOOL COLON\n                    | WHILE STR_CONST COLON\n                    | WHILE factor COLON\n                    | WHILE ID COLONforloop2 : LEVEL1 FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON \n                    | LEVEL1 FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON\n                    | LEVEL1 FOR ID IN STR_CONST COLON\n                    | LEVEL1 FOR ID IN ID COLON\n                    | LEVEL1 FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON\n                 forloop : FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON \n                    | FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON\n                    | FOR ID IN STR_CONST COLON\n                    | FOR ID IN ID COLON\n                    | FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON\n                 expression : LEVEL2 ID EQUAL expression\n                  | LEVEL2 ID EQUAL ID\n                  | LEVEL2 ID EQUAL STR_CONSTexpression : LEVEL1 ID EQUAL expression\n                  | LEVEL1 ID EQUAL ID\n                  | LEVEL1 ID EQUAL STR_CONST\n                  | LEVEL1 ID EQUAL factorexpression : LEVEL1 ID PLUS EQUAL term\n                    | LEVEL1 expression PLUS term\n                    | LEVEL1 ID PLUS factor \n                    | LEVEL1 factor PLUS ID\n                    | LEVEL1 ID PLUS ID\n                    | LEVEL1 expression PLUS ID\n                    | LEVEL1 ID PLUS expression\n                    | LEVEL1 factor PLUS factorexpression : LEVEL2 PRINT PARANOPEN STR_CONST PARANCLOSE\n                    | LEVEL2 PRINT PARANOPEN ID PARANCLOSE\n                    | LEVEL2 PRINT PARANOPEN term PARANCLOSEexpression : LEVEL1 PRINT PARANOPEN STR_CONST PARANCLOSE\n                    | LEVEL1 PRINT PARANOPEN ID PARANCLOSE\n                    | LEVEL1 PRINT PARANOPEN term PARANCLOSEexpression : expression : HASH expression\n                    | HASH ID\n                    | HASH STR_CONST'
    
_lr_action_items = {'ID':([0,6,7,12,13,14,17,18,19,20,21,22,23,24,25,26,28,29,30,41,42,46,62,66,85,86,87,88,89,90,91,93,103,120,130,136,137,138,139,140,156,157,158,159,160,177,181,251,254,],[2,2,34,35,37,44,47,51,53,34,55,61,65,68,73,75,78,80,82,92,94,98,34,34,109,113,115,119,124,126,128,131,141,34,152,161,164,167,170,173,184,187,190,193,196,34,34,272,274,]),'PRINT':([0,6,12,13,14,21,22,25,46,85,87,88,93,136,156,],[5,5,36,40,5,5,5,5,5,5,5,5,5,5,5,]),'MINUS':([0,1,2,3,4,6,8,9,10,11,13,14,15,16,21,22,25,31,32,33,37,38,39,43,44,45,46,52,53,54,55,56,57,58,59,60,61,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,84,85,87,88,93,98,99,100,101,102,104,105,106,107,108,109,110,111,115,116,117,118,119,121,122,123,124,125,126,131,132,133,134,135,136,145,146,147,148,149,150,151,156,161,162,163,176,179,180,183,184,185,186,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,252,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,273,279,280,],[7,20,23,25,-35,7,-39,-40,-41,-42,7,7,-36,-37,7,7,7,20,-20,-35,23,20,-35,20,23,-115,7,-9,-13,-18,23,20,-2,-3,-4,-5,23,-10,20,-23,-25,-28,-29,-31,25,20,23,-27,-32,-34,-8,-11,-33,-30,-38,7,7,7,7,23,-80,-79,-78,-77,-7,-19,-15,-16,-17,23,20,-93,23,20,-5,-35,23,-10,20,-9,-13,-8,-11,23,-61,-60,-59,-58,7,-106,-107,-108,-7,-15,-16,-17,7,23,-35,-5,-89,-88,-84,-83,23,-35,-5,-64,-62,-63,-67,-65,-66,-70,-68,-69,-73,-71,-72,-76,-74,-75,-90,-85,-45,-43,-44,-48,-46,-47,-51,-49,-50,-54,-52,-53,-57,-55,-56,-86,-81,-87,-82,]),'LEVEL2':([0,6,13,14,21,22,25,46,85,87,88,93,136,156,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'LEVEL1':([0,6,13,14,21,22,25,46,85,87,88,93,136,156,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'PLUS':([0,1,2,3,4,6,8,9,10,11,13,14,15,16,21,22,25,31,32,33,37,38,39,43,44,45,46,52,53,54,55,56,57,58,59,60,61,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,84,85,87,88,93,98,99,100,101,102,104,105,106,107,108,109,110,111,115,116,117,118,119,121,122,123,124,125,126,131,132,133,134,135,136,145,146,147,148,149,150,151,156,161,162,163,176,179,180,183,184,185,186,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,252,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,273,279,280,],[-112,19,22,-26,28,-112,-39,-40,-41,-42,-112,-112,-36,-37,-112,-112,-112,19,-20,-35,88,89,90,19,22,-115,-112,-9,-13,-18,22,19,-2,-3,-4,-5,22,28,19,-23,-25,-28,-29,-31,-22,19,22,-27,-32,-34,-8,-11,-33,-30,-38,-112,-112,-112,-112,22,-80,-79,-78,-77,-7,-19,-15,-16,-17,22,19,-93,22,19,-5,28,22,28,19,-9,-13,-8,-11,22,-61,-60,-59,-58,-112,-106,-107,-108,-7,-15,-16,-17,-112,22,28,-5,-89,-88,-84,-83,22,28,-5,-64,-62,-63,-67,-65,-66,-70,-68,-69,-73,-71,-72,-76,-74,-75,-90,-85,-45,-43,-44,-48,-46,-47,-51,-49,-50,-54,-52,-53,-57,-55,-56,-86,-81,-87,-82,]),'$end':([0,1,3,4,8,9,10,11,14,15,16,21,22,25,32,33,43,44,45,52,53,54,55,56,57,58,59,60,61,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,84,85,87,88,99,100,101,102,104,105,106,107,108,109,110,111,115,116,117,118,119,121,122,123,124,125,126,132,133,134,135,145,146,147,148,149,150,151,176,179,180,183,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,252,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,273,279,280,],[-112,0,-26,-35,-39,-40,-41,-42,-112,-36,-37,-112,-112,-112,-20,-35,-113,-114,-115,-9,-13,-18,-6,-1,-2,-3,-4,-5,-12,-10,-14,-23,-25,-28,-29,-31,-22,-21,-24,-27,-32,-34,-8,-11,-33,-30,-38,-112,-112,-112,-80,-79,-78,-77,-7,-19,-15,-16,-17,-92,-91,-93,-95,-94,-96,-35,-102,-35,-104,-99,-103,-105,-101,-61,-60,-59,-58,-106,-107,-108,-98,-109,-110,-111,-89,-88,-84,-83,-64,-62,-63,-67,-65,-66,-70,-68,-69,-73,-71,-72,-76,-74,-75,-90,-85,-45,-43,-44,-48,-46,-47,-51,-49,-50,-54,-52,-53,-57,-55,-56,-86,-81,-87,-82,]),'HASH':([0,6,13,14,21,22,25,46,85,87,88,93,136,156,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'INT':([0,6,7,13,14,17,19,20,21,22,23,24,25,26,27,28,29,30,42,46,62,66,85,86,87,88,89,90,91,93,120,136,137,138,139,140,156,157,158,159,160,177,181,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'FLOAT':([0,6,7,13,14,17,19,20,21,22,23,24,25,26,27,28,29,30,42,46,62,66,85,86,87,88,89,90,91,93,120,136,137,138,139,140,156,157,158,159,160,177,181,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'PARANOPEN':([0,5,6,7,13,14,17,19,20,21,22,23,24,25,26,27,28,29,30,36,40,42,46,62,66,85,86,87,88,89,90,91,93,103,120,130,136,137,138,139,140,142,153,156,157,158,159,160,177,181,215,218,],[6,30,6,6,6,6,46,6,6,6,6,6,6,6,6,6,6,6,6,86,91,93,6,6,6,6,6,6,6,6,6,6,6,143,6,154,6,6,6,6,6,177,181,6,6,6,6,6,6,6,251,254,]),'WHILE':([0,6,13,14,21,22,25,46,85,87,88,93,136,156,],[17,17,42,17,17,17,17,17,17,17,17,17,17,17,]),'FOR':([0,6,13,14,21,22,25,46,85,87,88,93,136,156,],[18,18,41,18,18,18,18,18,18,18,18,18,18,18,]),'EQUAL':([2,22,23,35,37,44,55,61,73,88,98,109,115,119,131,161,184,],[21,62,66,85,87,21,21,21,21,120,136,21,21,21,156,21,21,]),'MULTIPLY':([2,3,4,15,16,32,33,34,37,39,44,52,53,54,55,61,63,65,67,68,69,70,71,73,74,75,76,79,80,82,83,84,98,104,105,109,113,114,115,118,119,121,123,124,128,129,131,148,161,162,184,185,214,217,],[24,26,29,-36,-37,26,29,24,24,29,24,26,24,26,24,24,29,24,26,24,29,26,26,24,-27,-32,-34,-33,-30,24,26,-38,24,26,26,24,24,26,24,29,24,29,26,24,24,26,24,26,24,29,24,29,26,26,]),'PARANCLOSE':([3,4,6,8,9,10,11,14,15,16,21,22,25,31,32,33,43,44,45,46,52,53,54,55,56,57,58,59,60,61,63,64,65,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,93,99,100,101,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,122,123,124,125,126,127,128,129,132,133,134,135,136,145,146,147,148,149,150,151,156,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,178,179,180,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,214,217,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,252,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,279,280,],[-26,-35,-112,-39,-40,-41,-42,-112,-36,-37,-112,-112,-112,84,-20,-35,-113,-114,-115,-112,-9,-13,-18,-6,-1,-2,-3,-4,-5,-12,-10,-14,-23,-25,-28,-29,-31,-22,-21,-24,-27,-32,-34,-8,-11,-33,-30,106,107,108,-38,-112,-112,-112,-112,-80,-79,-78,-77,-7,-19,-15,-16,-17,-92,-91,-93,145,146,147,-95,-94,-96,-35,-102,-35,-104,-99,-103,-105,-101,149,150,151,-61,-60,-59,-58,-112,-106,-107,-108,-98,-109,-110,-111,-112,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,-89,216,-88,-84,219,-83,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,250,253,-64,-62,-63,-67,-65,-66,-70,-68,-69,-73,-71,-72,-76,-74,-75,-90,-85,-45,-43,-44,-48,-46,-47,-51,-49,-50,-54,-52,-53,-57,-55,-56,-86,275,-81,276,277,278,-87,-82,]),'DIVIDE':([3,4,15,16,32,33,39,52,54,63,67,68,69,70,71,74,75,76,79,80,83,84,104,105,114,118,121,123,129,148,162,185,214,217,],[27,-35,-36,-37,27,-35,-35,27,27,-35,27,-28,-29,27,27,-27,-32,-34,-33,-30,27,-38,27,27,27,-35,-35,27,27,27,-35,-35,27,27,]),'STR_CONST':([14,17,21,30,42,85,86,87,91,103,130,136,137,138,139,140,143,154,156,157,158,159,160,],[45,49,60,81,96,111,112,117,127,144,155,163,166,169,172,175,178,182,186,189,192,195,198,]),'COLON':([15,16,47,48,49,50,84,94,95,96,97,141,144,152,155,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,216,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,250,253,277,278,],[-36,-37,99,100,101,102,-38,132,133,134,135,176,179,180,183,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,252,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,273,279,280,]),'BOOL':([17,42,],[50,97,]),'EMP_LIST':([21,87,136,156,],[57,57,57,57,]),'EMP_TUPLE':([21,87,136,156,],[58,58,58,58,]),'EMP_SET':([21,87,136,156,],[59,59,59,59,]),'IN':([51,92,],[103,130,]),'GREATER':([98,131,],[137,157,]),'GREATEREQ':([98,131,],[138,158,]),'LESSER':([98,131,],[139,159,]),'LESSEREQ':([98,131,],[140,160,]),'RANGE':([103,130,],[142,153,]),'LEN':([177,181,],[215,218,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,6,13,14,21,22,25,46,85,87,88,93,136,156,],[1,31,38,43,56,64,72,31,110,116,122,31,56,56,]),'term':([0,6,7,13,14,19,20,21,22,23,24,25,30,46,62,66,85,86,87,88,89,91,93,120,136,156,177,181,],[3,3,32,3,3,52,54,3,3,67,70,71,83,3,104,105,3,114,3,3,123,129,3,148,3,3,214,217,]),'factor':([0,6,7,13,14,17,19,20,21,22,23,24,25,26,27,28,29,30,42,46,62,66,85,86,87,88,89,90,91,93,120,136,137,138,139,140,156,157,158,159,160,177,181,],[4,4,33,39,4,48,33,33,4,63,33,69,4,74,76,77,79,33,95,4,33,33,4,33,118,121,33,125,33,4,33,162,165,168,171,174,185,188,191,194,197,33,33,]),'whileloop':([0,6,13,14,21,22,25,46,85,87,88,93,136,156,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'forloop':([0,6,13,14,21,22,25,46,85,87,88,93,136,156,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'forloop2':([0,6,13,14,21,22,25,46,85,87,88,93,136,156,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'whileloop2':([0,6,13,14,21,22,25,46,85,87,88,93,136,156,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> ID EQUAL expression','expression',3,'p_assign','yacc.py',21),
  ('expression -> ID EQUAL EMP_LIST','expression',3,'p_assign','yacc.py',22),
  ('expression -> ID EQUAL EMP_TUPLE','expression',3,'p_assign','yacc.py',23),
  ('expression -> ID EQUAL EMP_SET','expression',3,'p_assign','yacc.py',24),
  ('expression -> ID EQUAL STR_CONST','expression',3,'p_assign','yacc.py',25),
  ('expression -> ID EQUAL ID','expression',3,'p_assign','yacc.py',26),
  ('expression -> ID PLUS EQUAL term','expression',4,'p_expression_plus','yacc.py',41),
  ('expression -> factor PLUS factor','expression',3,'p_expression_plus','yacc.py',42),
  ('expression -> expression PLUS term','expression',3,'p_expression_plus','yacc.py',43),
  ('expression -> ID PLUS factor','expression',3,'p_expression_plus','yacc.py',44),
  ('expression -> factor PLUS ID','expression',3,'p_expression_plus','yacc.py',45),
  ('expression -> ID PLUS ID','expression',3,'p_expression_plus','yacc.py',46),
  ('expression -> expression PLUS ID','expression',3,'p_expression_plus','yacc.py',47),
  ('expression -> ID PLUS expression','expression',3,'p_expression_plus','yacc.py',48),
  ('expression -> PRINT PARANOPEN STR_CONST PARANCLOSE','expression',4,'p_print_statement','yacc.py',60),
  ('expression -> PRINT PARANOPEN ID PARANCLOSE','expression',4,'p_print_statement','yacc.py',61),
  ('expression -> PRINT PARANOPEN term PARANCLOSE','expression',4,'p_print_statement','yacc.py',62),
  ('expression -> expression MINUS term','expression',3,'p_expression_minus','yacc.py',67),
  ('expression -> ID MINUS EQUAL term','expression',4,'p_expression_minus','yacc.py',68),
  ('expression -> MINUS term','expression',2,'p_expression_minus','yacc.py',69),
  ('expression -> term MINUS expression','expression',3,'p_expression_minus','yacc.py',70),
  ('expression -> term MINUS term','expression',3,'p_expression_minus','yacc.py',71),
  ('expression -> ID MINUS ID','expression',3,'p_expression_minus','yacc.py',72),
  ('expression -> term MINUS ID','expression',3,'p_expression_minus','yacc.py',73),
  ('expression -> ID MINUS term','expression',3,'p_expression_minus','yacc.py',74),
  ('expression -> term','expression',1,'p_expression_term','yacc.py',82),
  ('term -> term MULTIPLY factor','term',3,'p_term_times','yacc.py',86),
  ('term -> ID MULTIPLY ID','term',3,'p_term_times','yacc.py',87),
  ('term -> ID MULTIPLY factor','term',3,'p_term_times','yacc.py',88),
  ('term -> factor MULTIPLY ID','term',3,'p_term_times','yacc.py',89),
  ('term -> ID MULTIPLY term','term',3,'p_term_times','yacc.py',90),
  ('term -> term MULTIPLY ID','term',3,'p_term_times','yacc.py',91),
  ('term -> factor MULTIPLY factor','term',3,'p_term_times','yacc.py',92),
  ('term -> term DIVIDE factor','term',3,'p_term_div','yacc.py',105),
  ('term -> factor','term',1,'p_term_factor','yacc.py',109),
  ('factor -> INT','factor',1,'p_factor_num','yacc.py',113),
  ('factor -> FLOAT','factor',1,'p_factor_num','yacc.py',114),
  ('factor -> PARANOPEN expression PARANCLOSE','factor',3,'p_factor_expr','yacc.py',118),
  ('expression -> whileloop','expression',1,'p_loops','yacc.py',122),
  ('expression -> forloop','expression',1,'p_loops','yacc.py',123),
  ('expression -> forloop2','expression',1,'p_loops','yacc.py',124),
  ('expression -> whileloop2','expression',1,'p_loops','yacc.py',125),
  ('whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON','whileloop2',8,'p_while2','yacc.py',127),
  ('whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON','whileloop2',8,'p_while2','yacc.py',128),
  ('whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON','whileloop2',8,'p_while2','yacc.py',129),
  ('whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON','whileloop2',8,'p_while2','yacc.py',130),
  ('whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON','whileloop2',8,'p_while2','yacc.py',131),
  ('whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON','whileloop2',8,'p_while2','yacc.py',132),
  ('whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON','whileloop2',8,'p_while2','yacc.py',133),
  ('whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON','whileloop2',8,'p_while2','yacc.py',134),
  ('whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON','whileloop2',8,'p_while2','yacc.py',135),
  ('whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON','whileloop2',8,'p_while2','yacc.py',136),
  ('whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON','whileloop2',8,'p_while2','yacc.py',137),
  ('whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON','whileloop2',8,'p_while2','yacc.py',138),
  ('whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON','whileloop2',8,'p_while2','yacc.py',139),
  ('whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON','whileloop2',8,'p_while2','yacc.py',140),
  ('whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON','whileloop2',8,'p_while2','yacc.py',141),
  ('whileloop2 -> LEVEL1 WHILE BOOL COLON','whileloop2',4,'p_while2','yacc.py',142),
  ('whileloop2 -> LEVEL1 WHILE STR_CONST COLON','whileloop2',4,'p_while2','yacc.py',143),
  ('whileloop2 -> LEVEL1 WHILE factor COLON','whileloop2',4,'p_while2','yacc.py',144),
  ('whileloop2 -> LEVEL1 WHILE ID COLON','whileloop2',4,'p_while2','yacc.py',145),
  ('whileloop -> WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON','whileloop',7,'p_while','yacc.py',151),
  ('whileloop -> WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON','whileloop',7,'p_while','yacc.py',152),
  ('whileloop -> WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON','whileloop',7,'p_while','yacc.py',153),
  ('whileloop -> WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON','whileloop',7,'p_while','yacc.py',154),
  ('whileloop -> WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON','whileloop',7,'p_while','yacc.py',155),
  ('whileloop -> WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON','whileloop',7,'p_while','yacc.py',156),
  ('whileloop -> WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON','whileloop',7,'p_while','yacc.py',157),
  ('whileloop -> WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON','whileloop',7,'p_while','yacc.py',158),
  ('whileloop -> WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON','whileloop',7,'p_while','yacc.py',159),
  ('whileloop -> WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON','whileloop',7,'p_while','yacc.py',160),
  ('whileloop -> WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON','whileloop',7,'p_while','yacc.py',161),
  ('whileloop -> WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON','whileloop',7,'p_while','yacc.py',162),
  ('whileloop -> WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON','whileloop',7,'p_while','yacc.py',163),
  ('whileloop -> WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON','whileloop',7,'p_while','yacc.py',164),
  ('whileloop -> WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON','whileloop',7,'p_while','yacc.py',165),
  ('whileloop -> WHILE BOOL COLON','whileloop',3,'p_while','yacc.py',166),
  ('whileloop -> WHILE STR_CONST COLON','whileloop',3,'p_while','yacc.py',167),
  ('whileloop -> WHILE factor COLON','whileloop',3,'p_while','yacc.py',168),
  ('whileloop -> WHILE ID COLON','whileloop',3,'p_while','yacc.py',169),
  ('forloop2 -> LEVEL1 FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON','forloop2',9,'p_for2','yacc.py',185),
  ('forloop2 -> LEVEL1 FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON','forloop2',12,'p_for2','yacc.py',186),
  ('forloop2 -> LEVEL1 FOR ID IN STR_CONST COLON','forloop2',6,'p_for2','yacc.py',187),
  ('forloop2 -> LEVEL1 FOR ID IN ID COLON','forloop2',6,'p_for2','yacc.py',188),
  ('forloop2 -> LEVEL1 FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON','forloop2',8,'p_for2','yacc.py',189),
  ('forloop -> FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON','forloop',8,'p_for','yacc.py',196),
  ('forloop -> FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON','forloop',11,'p_for','yacc.py',197),
  ('forloop -> FOR ID IN STR_CONST COLON','forloop',5,'p_for','yacc.py',198),
  ('forloop -> FOR ID IN ID COLON','forloop',5,'p_for','yacc.py',199),
  ('forloop -> FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON','forloop',7,'p_for','yacc.py',200),
  ('expression -> LEVEL2 ID EQUAL expression','expression',4,'p_indent_assign2','yacc.py',212),
  ('expression -> LEVEL2 ID EQUAL ID','expression',4,'p_indent_assign2','yacc.py',213),
  ('expression -> LEVEL2 ID EQUAL STR_CONST','expression',4,'p_indent_assign2','yacc.py',214),
  ('expression -> LEVEL1 ID EQUAL expression','expression',4,'p_indent_assign','yacc.py',228),
  ('expression -> LEVEL1 ID EQUAL ID','expression',4,'p_indent_assign','yacc.py',229),
  ('expression -> LEVEL1 ID EQUAL STR_CONST','expression',4,'p_indent_assign','yacc.py',230),
  ('expression -> LEVEL1 ID EQUAL factor','expression',4,'p_indent_assign','yacc.py',231),
  ('expression -> LEVEL1 ID PLUS EQUAL term','expression',5,'p_indent_expression_plus','yacc.py',245),
  ('expression -> LEVEL1 expression PLUS term','expression',4,'p_indent_expression_plus','yacc.py',246),
  ('expression -> LEVEL1 ID PLUS factor','expression',4,'p_indent_expression_plus','yacc.py',247),
  ('expression -> LEVEL1 factor PLUS ID','expression',4,'p_indent_expression_plus','yacc.py',248),
  ('expression -> LEVEL1 ID PLUS ID','expression',4,'p_indent_expression_plus','yacc.py',249),
  ('expression -> LEVEL1 expression PLUS ID','expression',4,'p_indent_expression_plus','yacc.py',250),
  ('expression -> LEVEL1 ID PLUS expression','expression',4,'p_indent_expression_plus','yacc.py',251),
  ('expression -> LEVEL1 factor PLUS factor','expression',4,'p_indent_expression_plus','yacc.py',252),
  ('expression -> LEVEL2 PRINT PARANOPEN STR_CONST PARANCLOSE','expression',5,'p_indent2_print_statement','yacc.py',262),
  ('expression -> LEVEL2 PRINT PARANOPEN ID PARANCLOSE','expression',5,'p_indent2_print_statement','yacc.py',263),
  ('expression -> LEVEL2 PRINT PARANOPEN term PARANCLOSE','expression',5,'p_indent2_print_statement','yacc.py',264),
  ('expression -> LEVEL1 PRINT PARANOPEN STR_CONST PARANCLOSE','expression',5,'p_indent_print_statement','yacc.py',270),
  ('expression -> LEVEL1 PRINT PARANOPEN ID PARANCLOSE','expression',5,'p_indent_print_statement','yacc.py',271),
  ('expression -> LEVEL1 PRINT PARANOPEN term PARANCLOSE','expression',5,'p_indent_print_statement','yacc.py',272),
  ('expression -> <empty>','expression',0,'p_blank','yacc.py',279),
  ('expression -> HASH expression','expression',2,'p_comment','yacc.py',282),
  ('expression -> HASH ID','expression',2,'p_comment','yacc.py',283),
  ('expression -> HASH STR_CONST','expression',2,'p_comment','yacc.py',284),
]
