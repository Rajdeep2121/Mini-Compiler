Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    BIT_AND
    BIT_OR
    COMMA
    DEF
    EMP_LIST
    EMP_SET
    EMP_TUPLE
    EQEQ
    FLOWERCLOSE
    FLOWEROPEN
    IF
    LEVEL2
    LEVEL3
    MOD
    NAME
    NEWLINE
    NOTEQ
    OR

Grammar

Rule 0     S' -> expression
Rule 1     expression -> ID EQUAL expression
Rule 2     expression -> ID EQUAL STR_CONST
Rule 3     expression -> expression PLUS term
Rule 4     expression -> PRINT PARANOPEN STR_CONST PARANCLOSE
Rule 5     expression -> PRINT PARANOPEN ID PARANCLOSE
Rule 6     expression -> PRINT PARANOPEN term PARANCLOSE
Rule 7     expression -> expression MINUS term
Rule 8     expression -> MINUS term
Rule 9     expression -> term
Rule 10    term -> term MULTIPLY factor
Rule 11    term -> term DIVIDE factor
Rule 12    term -> factor
Rule 13    factor -> INT
Rule 14    factor -> FLOAT
Rule 15    factor -> PARANOPEN expression PARANCLOSE
Rule 16    expression -> whileloop
Rule 17    expression -> forloop
Rule 18    whileloop -> WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
Rule 19    whileloop -> WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
Rule 20    whileloop -> WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
Rule 21    whileloop -> WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
Rule 22    whileloop -> WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
Rule 23    whileloop -> WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
Rule 24    whileloop -> WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
Rule 25    whileloop -> WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
Rule 26    whileloop -> WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
Rule 27    whileloop -> WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
Rule 28    whileloop -> WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
Rule 29    whileloop -> WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
Rule 30    whileloop -> WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
Rule 31    whileloop -> WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
Rule 32    whileloop -> WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
Rule 33    whileloop -> WHILE BOOL COLON
Rule 34    whileloop -> WHILE STR_CONST COLON
Rule 35    whileloop -> WHILE factor COLON
Rule 36    whileloop -> WHILE ID COLON
Rule 37    forloop -> FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
Rule 38    forloop -> FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
Rule 39    forloop -> FOR ID IN STR_CONST COLON
Rule 40    forloop -> FOR ID IN ID COLON
Rule 41    forloop -> FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
Rule 42    expression -> LEVEL1 ID EQUAL INT
Rule 43    expression -> LEVEL1 PRINT PARANOPEN STR_CONST PARANCLOSE
Rule 44    expression -> LEVEL1 PRINT PARANOPEN ID PARANCLOSE
Rule 45    expression -> LEVEL1 PRINT PARANOPEN term PARANCLOSE
Rule 46    expression -> <empty>
Rule 47    expression -> HASH expression
Rule 48    expression -> HASH ID
Rule 49    expression -> HASH STR_CONST

Terminals, with rules where they appear

AND                  : 
BIT_AND              : 
BIT_OR               : 
BOOL                 : 33
COLON                : 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41
COMMA                : 
DEF                  : 
DIVIDE               : 11
EMP_LIST             : 
EMP_SET              : 
EMP_TUPLE            : 
EQEQ                 : 
EQUAL                : 1 2 18 19 20 42
FLOAT                : 14
FLOWERCLOSE          : 
FLOWEROPEN           : 
FOR                  : 37 38 39 40 41
GREATER              : 21 22 23
GREATEREQ            : 24 25 26
HASH                 : 47 48 49
ID                   : 1 2 5 18 19 20 20 21 22 23 23 24 25 26 26 27 28 29 29 30 31 32 32 36 37 38 38 39 40 40 41 42 44 48
IF                   : 
IN                   : 37 38 39 40 41
INT                  : 13 42
LEN                  : 38
LESSER               : 27 28 29
LESSEREQ             : 30 31 32
LEVEL1               : 42 43 44 45
LEVEL2               : 
LEVEL3               : 
MINUS                : 7 8
MOD                  : 
MULTIPLY             : 10
NAME                 : 
NEWLINE              : 
NOTEQ                : 
OR                   : 
PARANCLOSE           : 4 5 6 15 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 37 38 38 41 43 44 45
PARANOPEN            : 4 5 6 15 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 37 38 38 41 43 44 45
PLUS                 : 3
PRINT                : 4 5 6 43 44 45
RANGE                : 37 38
STR_CONST            : 2 4 19 22 25 28 31 34 39 41 43 49
WHILE                : 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36
error                : 

Nonterminals, with rules where they appear

expression           : 1 3 7 15 47 0
factor               : 10 11 12 18 21 24 27 30 35
forloop              : 17
term                 : 3 6 7 8 9 10 11 37 45
whileloop            : 16

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . ID EQUAL expression
    (2) expression -> . ID EQUAL STR_CONST
    (3) expression -> . expression PLUS term
    (4) expression -> . PRINT PARANOPEN STR_CONST PARANCLOSE
    (5) expression -> . PRINT PARANOPEN ID PARANCLOSE
    (6) expression -> . PRINT PARANOPEN term PARANCLOSE
    (7) expression -> . expression MINUS term
    (8) expression -> . MINUS term
    (9) expression -> . term
    (16) expression -> . whileloop
    (17) expression -> . forloop
    (42) expression -> . LEVEL1 ID EQUAL INT
    (43) expression -> . LEVEL1 PRINT PARANOPEN STR_CONST PARANCLOSE
    (44) expression -> . LEVEL1 PRINT PARANOPEN ID PARANCLOSE
    (45) expression -> . LEVEL1 PRINT PARANOPEN term PARANCLOSE
    (46) expression -> .
    (47) expression -> . HASH expression
    (48) expression -> . HASH ID
    (49) expression -> . HASH STR_CONST
    (10) term -> . term MULTIPLY factor
    (11) term -> . term DIVIDE factor
    (12) term -> . factor
    (18) whileloop -> . WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (19) whileloop -> . WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (20) whileloop -> . WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (21) whileloop -> . WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (22) whileloop -> . WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (23) whileloop -> . WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (24) whileloop -> . WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (25) whileloop -> . WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (26) whileloop -> . WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (27) whileloop -> . WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (28) whileloop -> . WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (29) whileloop -> . WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (30) whileloop -> . WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (31) whileloop -> . WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (32) whileloop -> . WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (33) whileloop -> . WHILE BOOL COLON
    (34) whileloop -> . WHILE STR_CONST COLON
    (35) whileloop -> . WHILE factor COLON
    (36) whileloop -> . WHILE ID COLON
    (37) forloop -> . FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (38) forloop -> . FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (39) forloop -> . FOR ID IN STR_CONST COLON
    (40) forloop -> . FOR ID IN ID COLON
    (41) forloop -> . FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (13) factor -> . INT
    (14) factor -> . FLOAT
    (15) factor -> . PARANOPEN expression PARANCLOSE

  ! shift/reduce conflict for MINUS resolved as shift
    ID              shift and go to state 2
    PRINT           shift and go to state 4
    MINUS           shift and go to state 6
    LEVEL1          shift and go to state 9
    PLUS            reduce using rule 46 (expression -> .)
    $end            reduce using rule 46 (expression -> .)
    HASH            shift and go to state 11
    WHILE           shift and go to state 13
    FOR             shift and go to state 14
    INT             shift and go to state 10
    FLOAT           shift and go to state 15
    PARANOPEN       shift and go to state 5

  ! MINUS           [ reduce using rule 46 (expression -> .) ]

    expression                     shift and go to state 1
    term                           shift and go to state 3
    whileloop                      shift and go to state 7
    forloop                        shift and go to state 8
    factor                         shift and go to state 12

state 1

    (0) S' -> expression .
    (3) expression -> expression . PLUS term
    (7) expression -> expression . MINUS term

    PLUS            shift and go to state 16
    MINUS           shift and go to state 17


state 2

    (1) expression -> ID . EQUAL expression
    (2) expression -> ID . EQUAL STR_CONST

    EQUAL           shift and go to state 18


state 3

    (9) expression -> term .
    (10) term -> term . MULTIPLY factor
    (11) term -> term . DIVIDE factor

    PLUS            reduce using rule 9 (expression -> term .)
    MINUS           reduce using rule 9 (expression -> term .)
    $end            reduce using rule 9 (expression -> term .)
    PARANCLOSE      reduce using rule 9 (expression -> term .)
    MULTIPLY        shift and go to state 19
    DIVIDE          shift and go to state 20


state 4

    (4) expression -> PRINT . PARANOPEN STR_CONST PARANCLOSE
    (5) expression -> PRINT . PARANOPEN ID PARANCLOSE
    (6) expression -> PRINT . PARANOPEN term PARANCLOSE

    PARANOPEN       shift and go to state 21


state 5

    (15) factor -> PARANOPEN . expression PARANCLOSE
    (1) expression -> . ID EQUAL expression
    (2) expression -> . ID EQUAL STR_CONST
    (3) expression -> . expression PLUS term
    (4) expression -> . PRINT PARANOPEN STR_CONST PARANCLOSE
    (5) expression -> . PRINT PARANOPEN ID PARANCLOSE
    (6) expression -> . PRINT PARANOPEN term PARANCLOSE
    (7) expression -> . expression MINUS term
    (8) expression -> . MINUS term
    (9) expression -> . term
    (16) expression -> . whileloop
    (17) expression -> . forloop
    (42) expression -> . LEVEL1 ID EQUAL INT
    (43) expression -> . LEVEL1 PRINT PARANOPEN STR_CONST PARANCLOSE
    (44) expression -> . LEVEL1 PRINT PARANOPEN ID PARANCLOSE
    (45) expression -> . LEVEL1 PRINT PARANOPEN term PARANCLOSE
    (46) expression -> .
    (47) expression -> . HASH expression
    (48) expression -> . HASH ID
    (49) expression -> . HASH STR_CONST
    (10) term -> . term MULTIPLY factor
    (11) term -> . term DIVIDE factor
    (12) term -> . factor
    (18) whileloop -> . WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (19) whileloop -> . WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (20) whileloop -> . WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (21) whileloop -> . WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (22) whileloop -> . WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (23) whileloop -> . WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (24) whileloop -> . WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (25) whileloop -> . WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (26) whileloop -> . WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (27) whileloop -> . WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (28) whileloop -> . WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (29) whileloop -> . WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (30) whileloop -> . WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (31) whileloop -> . WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (32) whileloop -> . WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (33) whileloop -> . WHILE BOOL COLON
    (34) whileloop -> . WHILE STR_CONST COLON
    (35) whileloop -> . WHILE factor COLON
    (36) whileloop -> . WHILE ID COLON
    (37) forloop -> . FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (38) forloop -> . FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (39) forloop -> . FOR ID IN STR_CONST COLON
    (40) forloop -> . FOR ID IN ID COLON
    (41) forloop -> . FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (13) factor -> . INT
    (14) factor -> . FLOAT
    (15) factor -> . PARANOPEN expression PARANCLOSE

  ! shift/reduce conflict for MINUS resolved as shift
    ID              shift and go to state 2
    PRINT           shift and go to state 4
    MINUS           shift and go to state 6
    LEVEL1          shift and go to state 9
    PARANCLOSE      reduce using rule 46 (expression -> .)
    PLUS            reduce using rule 46 (expression -> .)
    HASH            shift and go to state 11
    WHILE           shift and go to state 13
    FOR             shift and go to state 14
    INT             shift and go to state 10
    FLOAT           shift and go to state 15
    PARANOPEN       shift and go to state 5

  ! MINUS           [ reduce using rule 46 (expression -> .) ]

    expression                     shift and go to state 22
    term                           shift and go to state 3
    whileloop                      shift and go to state 7
    forloop                        shift and go to state 8
    factor                         shift and go to state 12

state 6

    (8) expression -> MINUS . term
    (10) term -> . term MULTIPLY factor
    (11) term -> . term DIVIDE factor
    (12) term -> . factor
    (13) factor -> . INT
    (14) factor -> . FLOAT
    (15) factor -> . PARANOPEN expression PARANCLOSE

    INT             shift and go to state 10
    FLOAT           shift and go to state 15
    PARANOPEN       shift and go to state 5

    term                           shift and go to state 23
    factor                         shift and go to state 12

state 7

    (16) expression -> whileloop .

    PLUS            reduce using rule 16 (expression -> whileloop .)
    MINUS           reduce using rule 16 (expression -> whileloop .)
    $end            reduce using rule 16 (expression -> whileloop .)
    PARANCLOSE      reduce using rule 16 (expression -> whileloop .)


state 8

    (17) expression -> forloop .

    PLUS            reduce using rule 17 (expression -> forloop .)
    MINUS           reduce using rule 17 (expression -> forloop .)
    $end            reduce using rule 17 (expression -> forloop .)
    PARANCLOSE      reduce using rule 17 (expression -> forloop .)


state 9

    (42) expression -> LEVEL1 . ID EQUAL INT
    (43) expression -> LEVEL1 . PRINT PARANOPEN STR_CONST PARANCLOSE
    (44) expression -> LEVEL1 . PRINT PARANOPEN ID PARANCLOSE
    (45) expression -> LEVEL1 . PRINT PARANOPEN term PARANCLOSE

    ID              shift and go to state 24
    PRINT           shift and go to state 25


state 10

    (13) factor -> INT .

    MULTIPLY        reduce using rule 13 (factor -> INT .)
    DIVIDE          reduce using rule 13 (factor -> INT .)
    PLUS            reduce using rule 13 (factor -> INT .)
    MINUS           reduce using rule 13 (factor -> INT .)
    $end            reduce using rule 13 (factor -> INT .)
    PARANCLOSE      reduce using rule 13 (factor -> INT .)
    COLON           reduce using rule 13 (factor -> INT .)


state 11

    (47) expression -> HASH . expression
    (48) expression -> HASH . ID
    (49) expression -> HASH . STR_CONST
    (1) expression -> . ID EQUAL expression
    (2) expression -> . ID EQUAL STR_CONST
    (3) expression -> . expression PLUS term
    (4) expression -> . PRINT PARANOPEN STR_CONST PARANCLOSE
    (5) expression -> . PRINT PARANOPEN ID PARANCLOSE
    (6) expression -> . PRINT PARANOPEN term PARANCLOSE
    (7) expression -> . expression MINUS term
    (8) expression -> . MINUS term
    (9) expression -> . term
    (16) expression -> . whileloop
    (17) expression -> . forloop
    (42) expression -> . LEVEL1 ID EQUAL INT
    (43) expression -> . LEVEL1 PRINT PARANOPEN STR_CONST PARANCLOSE
    (44) expression -> . LEVEL1 PRINT PARANOPEN ID PARANCLOSE
    (45) expression -> . LEVEL1 PRINT PARANOPEN term PARANCLOSE
    (46) expression -> .
    (47) expression -> . HASH expression
    (48) expression -> . HASH ID
    (49) expression -> . HASH STR_CONST
    (10) term -> . term MULTIPLY factor
    (11) term -> . term DIVIDE factor
    (12) term -> . factor
    (18) whileloop -> . WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (19) whileloop -> . WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (20) whileloop -> . WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (21) whileloop -> . WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (22) whileloop -> . WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (23) whileloop -> . WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (24) whileloop -> . WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (25) whileloop -> . WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (26) whileloop -> . WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (27) whileloop -> . WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (28) whileloop -> . WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (29) whileloop -> . WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (30) whileloop -> . WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (31) whileloop -> . WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (32) whileloop -> . WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (33) whileloop -> . WHILE BOOL COLON
    (34) whileloop -> . WHILE STR_CONST COLON
    (35) whileloop -> . WHILE factor COLON
    (36) whileloop -> . WHILE ID COLON
    (37) forloop -> . FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (38) forloop -> . FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (39) forloop -> . FOR ID IN STR_CONST COLON
    (40) forloop -> . FOR ID IN ID COLON
    (41) forloop -> . FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (13) factor -> . INT
    (14) factor -> . FLOAT
    (15) factor -> . PARANOPEN expression PARANCLOSE

  ! shift/reduce conflict for MINUS resolved as shift
    ID              shift and go to state 27
    STR_CONST       shift and go to state 28
    PRINT           shift and go to state 4
    MINUS           shift and go to state 6
    LEVEL1          shift and go to state 9
    PLUS            reduce using rule 46 (expression -> .)
    $end            reduce using rule 46 (expression -> .)
    PARANCLOSE      reduce using rule 46 (expression -> .)
    HASH            shift and go to state 11
    WHILE           shift and go to state 13
    FOR             shift and go to state 14
    INT             shift and go to state 10
    FLOAT           shift and go to state 15
    PARANOPEN       shift and go to state 5

  ! MINUS           [ reduce using rule 46 (expression -> .) ]

    expression                     shift and go to state 26
    term                           shift and go to state 3
    whileloop                      shift and go to state 7
    forloop                        shift and go to state 8
    factor                         shift and go to state 12

state 12

    (12) term -> factor .

    MULTIPLY        reduce using rule 12 (term -> factor .)
    DIVIDE          reduce using rule 12 (term -> factor .)
    PLUS            reduce using rule 12 (term -> factor .)
    MINUS           reduce using rule 12 (term -> factor .)
    $end            reduce using rule 12 (term -> factor .)
    PARANCLOSE      reduce using rule 12 (term -> factor .)


state 13

    (18) whileloop -> WHILE . PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (19) whileloop -> WHILE . PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (20) whileloop -> WHILE . PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (21) whileloop -> WHILE . PARANOPEN ID GREATER factor PARANCLOSE COLON
    (22) whileloop -> WHILE . PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (23) whileloop -> WHILE . PARANOPEN ID GREATER ID PARANCLOSE COLON
    (24) whileloop -> WHILE . PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (25) whileloop -> WHILE . PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (26) whileloop -> WHILE . PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (27) whileloop -> WHILE . PARANOPEN ID LESSER factor PARANCLOSE COLON
    (28) whileloop -> WHILE . PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (29) whileloop -> WHILE . PARANOPEN ID LESSER ID PARANCLOSE COLON
    (30) whileloop -> WHILE . PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (31) whileloop -> WHILE . PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (32) whileloop -> WHILE . PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (33) whileloop -> WHILE . BOOL COLON
    (34) whileloop -> WHILE . STR_CONST COLON
    (35) whileloop -> WHILE . factor COLON
    (36) whileloop -> WHILE . ID COLON
    (13) factor -> . INT
    (14) factor -> . FLOAT
    (15) factor -> . PARANOPEN expression PARANCLOSE

    PARANOPEN       shift and go to state 29
    BOOL            shift and go to state 33
    STR_CONST       shift and go to state 32
    ID              shift and go to state 30
    INT             shift and go to state 10
    FLOAT           shift and go to state 15

    factor                         shift and go to state 31

state 14

    (37) forloop -> FOR . ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (38) forloop -> FOR . ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (39) forloop -> FOR . ID IN STR_CONST COLON
    (40) forloop -> FOR . ID IN ID COLON
    (41) forloop -> FOR . ID IN PARANOPEN STR_CONST PARANCLOSE COLON

    ID              shift and go to state 34


state 15

    (14) factor -> FLOAT .

    MULTIPLY        reduce using rule 14 (factor -> FLOAT .)
    DIVIDE          reduce using rule 14 (factor -> FLOAT .)
    PLUS            reduce using rule 14 (factor -> FLOAT .)
    MINUS           reduce using rule 14 (factor -> FLOAT .)
    $end            reduce using rule 14 (factor -> FLOAT .)
    PARANCLOSE      reduce using rule 14 (factor -> FLOAT .)
    COLON           reduce using rule 14 (factor -> FLOAT .)


state 16

    (3) expression -> expression PLUS . term
    (10) term -> . term MULTIPLY factor
    (11) term -> . term DIVIDE factor
    (12) term -> . factor
    (13) factor -> . INT
    (14) factor -> . FLOAT
    (15) factor -> . PARANOPEN expression PARANCLOSE

    INT             shift and go to state 10
    FLOAT           shift and go to state 15
    PARANOPEN       shift and go to state 5

    term                           shift and go to state 35
    factor                         shift and go to state 12

state 17

    (7) expression -> expression MINUS . term
    (10) term -> . term MULTIPLY factor
    (11) term -> . term DIVIDE factor
    (12) term -> . factor
    (13) factor -> . INT
    (14) factor -> . FLOAT
    (15) factor -> . PARANOPEN expression PARANCLOSE

    INT             shift and go to state 10
    FLOAT           shift and go to state 15
    PARANOPEN       shift and go to state 5

    term                           shift and go to state 36
    factor                         shift and go to state 12

state 18

    (1) expression -> ID EQUAL . expression
    (2) expression -> ID EQUAL . STR_CONST
    (1) expression -> . ID EQUAL expression
    (2) expression -> . ID EQUAL STR_CONST
    (3) expression -> . expression PLUS term
    (4) expression -> . PRINT PARANOPEN STR_CONST PARANCLOSE
    (5) expression -> . PRINT PARANOPEN ID PARANCLOSE
    (6) expression -> . PRINT PARANOPEN term PARANCLOSE
    (7) expression -> . expression MINUS term
    (8) expression -> . MINUS term
    (9) expression -> . term
    (16) expression -> . whileloop
    (17) expression -> . forloop
    (42) expression -> . LEVEL1 ID EQUAL INT
    (43) expression -> . LEVEL1 PRINT PARANOPEN STR_CONST PARANCLOSE
    (44) expression -> . LEVEL1 PRINT PARANOPEN ID PARANCLOSE
    (45) expression -> . LEVEL1 PRINT PARANOPEN term PARANCLOSE
    (46) expression -> .
    (47) expression -> . HASH expression
    (48) expression -> . HASH ID
    (49) expression -> . HASH STR_CONST
    (10) term -> . term MULTIPLY factor
    (11) term -> . term DIVIDE factor
    (12) term -> . factor
    (18) whileloop -> . WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (19) whileloop -> . WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (20) whileloop -> . WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (21) whileloop -> . WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (22) whileloop -> . WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (23) whileloop -> . WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (24) whileloop -> . WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (25) whileloop -> . WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (26) whileloop -> . WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (27) whileloop -> . WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (28) whileloop -> . WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (29) whileloop -> . WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (30) whileloop -> . WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (31) whileloop -> . WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (32) whileloop -> . WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (33) whileloop -> . WHILE BOOL COLON
    (34) whileloop -> . WHILE STR_CONST COLON
    (35) whileloop -> . WHILE factor COLON
    (36) whileloop -> . WHILE ID COLON
    (37) forloop -> . FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (38) forloop -> . FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (39) forloop -> . FOR ID IN STR_CONST COLON
    (40) forloop -> . FOR ID IN ID COLON
    (41) forloop -> . FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (13) factor -> . INT
    (14) factor -> . FLOAT
    (15) factor -> . PARANOPEN expression PARANCLOSE

  ! shift/reduce conflict for MINUS resolved as shift
    STR_CONST       shift and go to state 38
    ID              shift and go to state 2
    PRINT           shift and go to state 4
    MINUS           shift and go to state 6
    LEVEL1          shift and go to state 9
    PLUS            reduce using rule 46 (expression -> .)
    $end            reduce using rule 46 (expression -> .)
    PARANCLOSE      reduce using rule 46 (expression -> .)
    HASH            shift and go to state 11
    WHILE           shift and go to state 13
    FOR             shift and go to state 14
    INT             shift and go to state 10
    FLOAT           shift and go to state 15
    PARANOPEN       shift and go to state 5

  ! MINUS           [ reduce using rule 46 (expression -> .) ]

    expression                     shift and go to state 37
    term                           shift and go to state 3
    whileloop                      shift and go to state 7
    forloop                        shift and go to state 8
    factor                         shift and go to state 12

state 19

    (10) term -> term MULTIPLY . factor
    (13) factor -> . INT
    (14) factor -> . FLOAT
    (15) factor -> . PARANOPEN expression PARANCLOSE

    INT             shift and go to state 10
    FLOAT           shift and go to state 15
    PARANOPEN       shift and go to state 5

    factor                         shift and go to state 39

state 20

    (11) term -> term DIVIDE . factor
    (13) factor -> . INT
    (14) factor -> . FLOAT
    (15) factor -> . PARANOPEN expression PARANCLOSE

    INT             shift and go to state 10
    FLOAT           shift and go to state 15
    PARANOPEN       shift and go to state 5

    factor                         shift and go to state 40

state 21

    (4) expression -> PRINT PARANOPEN . STR_CONST PARANCLOSE
    (5) expression -> PRINT PARANOPEN . ID PARANCLOSE
    (6) expression -> PRINT PARANOPEN . term PARANCLOSE
    (10) term -> . term MULTIPLY factor
    (11) term -> . term DIVIDE factor
    (12) term -> . factor
    (13) factor -> . INT
    (14) factor -> . FLOAT
    (15) factor -> . PARANOPEN expression PARANCLOSE

    STR_CONST       shift and go to state 41
    ID              shift and go to state 42
    INT             shift and go to state 10
    FLOAT           shift and go to state 15
    PARANOPEN       shift and go to state 5

    term                           shift and go to state 43
    factor                         shift and go to state 12

state 22

    (15) factor -> PARANOPEN expression . PARANCLOSE
    (3) expression -> expression . PLUS term
    (7) expression -> expression . MINUS term

    PARANCLOSE      shift and go to state 44
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17


state 23

    (8) expression -> MINUS term .
    (10) term -> term . MULTIPLY factor
    (11) term -> term . DIVIDE factor

    PLUS            reduce using rule 8 (expression -> MINUS term .)
    MINUS           reduce using rule 8 (expression -> MINUS term .)
    $end            reduce using rule 8 (expression -> MINUS term .)
    PARANCLOSE      reduce using rule 8 (expression -> MINUS term .)
    MULTIPLY        shift and go to state 19
    DIVIDE          shift and go to state 20


state 24

    (42) expression -> LEVEL1 ID . EQUAL INT

    EQUAL           shift and go to state 45


state 25

    (43) expression -> LEVEL1 PRINT . PARANOPEN STR_CONST PARANCLOSE
    (44) expression -> LEVEL1 PRINT . PARANOPEN ID PARANCLOSE
    (45) expression -> LEVEL1 PRINT . PARANOPEN term PARANCLOSE

    PARANOPEN       shift and go to state 46


state 26

    (47) expression -> HASH expression .
    (3) expression -> expression . PLUS term
    (7) expression -> expression . MINUS term

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    $end            reduce using rule 47 (expression -> HASH expression .)
    PARANCLOSE      reduce using rule 47 (expression -> HASH expression .)
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17

  ! PLUS            [ reduce using rule 47 (expression -> HASH expression .) ]
  ! MINUS           [ reduce using rule 47 (expression -> HASH expression .) ]


state 27

    (48) expression -> HASH ID .
    (1) expression -> ID . EQUAL expression
    (2) expression -> ID . EQUAL STR_CONST

    PLUS            reduce using rule 48 (expression -> HASH ID .)
    MINUS           reduce using rule 48 (expression -> HASH ID .)
    $end            reduce using rule 48 (expression -> HASH ID .)
    PARANCLOSE      reduce using rule 48 (expression -> HASH ID .)
    EQUAL           shift and go to state 18


state 28

    (49) expression -> HASH STR_CONST .

    PLUS            reduce using rule 49 (expression -> HASH STR_CONST .)
    MINUS           reduce using rule 49 (expression -> HASH STR_CONST .)
    $end            reduce using rule 49 (expression -> HASH STR_CONST .)
    PARANCLOSE      reduce using rule 49 (expression -> HASH STR_CONST .)


state 29

    (18) whileloop -> WHILE PARANOPEN . ID EQUAL factor PARANCLOSE COLON
    (19) whileloop -> WHILE PARANOPEN . ID EQUAL STR_CONST PARANCLOSE COLON
    (20) whileloop -> WHILE PARANOPEN . ID EQUAL ID PARANCLOSE COLON
    (21) whileloop -> WHILE PARANOPEN . ID GREATER factor PARANCLOSE COLON
    (22) whileloop -> WHILE PARANOPEN . ID GREATER STR_CONST PARANCLOSE COLON
    (23) whileloop -> WHILE PARANOPEN . ID GREATER ID PARANCLOSE COLON
    (24) whileloop -> WHILE PARANOPEN . ID GREATEREQ factor PARANCLOSE COLON
    (25) whileloop -> WHILE PARANOPEN . ID GREATEREQ STR_CONST PARANCLOSE COLON
    (26) whileloop -> WHILE PARANOPEN . ID GREATEREQ ID PARANCLOSE COLON
    (27) whileloop -> WHILE PARANOPEN . ID LESSER factor PARANCLOSE COLON
    (28) whileloop -> WHILE PARANOPEN . ID LESSER STR_CONST PARANCLOSE COLON
    (29) whileloop -> WHILE PARANOPEN . ID LESSER ID PARANCLOSE COLON
    (30) whileloop -> WHILE PARANOPEN . ID LESSEREQ factor PARANCLOSE COLON
    (31) whileloop -> WHILE PARANOPEN . ID LESSEREQ STR_CONST PARANCLOSE COLON
    (32) whileloop -> WHILE PARANOPEN . ID LESSEREQ ID PARANCLOSE COLON
    (15) factor -> PARANOPEN . expression PARANCLOSE
    (1) expression -> . ID EQUAL expression
    (2) expression -> . ID EQUAL STR_CONST
    (3) expression -> . expression PLUS term
    (4) expression -> . PRINT PARANOPEN STR_CONST PARANCLOSE
    (5) expression -> . PRINT PARANOPEN ID PARANCLOSE
    (6) expression -> . PRINT PARANOPEN term PARANCLOSE
    (7) expression -> . expression MINUS term
    (8) expression -> . MINUS term
    (9) expression -> . term
    (16) expression -> . whileloop
    (17) expression -> . forloop
    (42) expression -> . LEVEL1 ID EQUAL INT
    (43) expression -> . LEVEL1 PRINT PARANOPEN STR_CONST PARANCLOSE
    (44) expression -> . LEVEL1 PRINT PARANOPEN ID PARANCLOSE
    (45) expression -> . LEVEL1 PRINT PARANOPEN term PARANCLOSE
    (46) expression -> .
    (47) expression -> . HASH expression
    (48) expression -> . HASH ID
    (49) expression -> . HASH STR_CONST
    (10) term -> . term MULTIPLY factor
    (11) term -> . term DIVIDE factor
    (12) term -> . factor
    (18) whileloop -> . WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (19) whileloop -> . WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (20) whileloop -> . WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (21) whileloop -> . WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (22) whileloop -> . WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (23) whileloop -> . WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (24) whileloop -> . WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (25) whileloop -> . WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (26) whileloop -> . WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (27) whileloop -> . WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (28) whileloop -> . WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (29) whileloop -> . WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (30) whileloop -> . WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (31) whileloop -> . WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (32) whileloop -> . WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (33) whileloop -> . WHILE BOOL COLON
    (34) whileloop -> . WHILE STR_CONST COLON
    (35) whileloop -> . WHILE factor COLON
    (36) whileloop -> . WHILE ID COLON
    (37) forloop -> . FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (38) forloop -> . FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (39) forloop -> . FOR ID IN STR_CONST COLON
    (40) forloop -> . FOR ID IN ID COLON
    (41) forloop -> . FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (13) factor -> . INT
    (14) factor -> . FLOAT
    (15) factor -> . PARANOPEN expression PARANCLOSE

  ! shift/reduce conflict for MINUS resolved as shift
    ID              shift and go to state 47
    PRINT           shift and go to state 4
    MINUS           shift and go to state 6
    LEVEL1          shift and go to state 9
    PARANCLOSE      reduce using rule 46 (expression -> .)
    PLUS            reduce using rule 46 (expression -> .)
    HASH            shift and go to state 11
    WHILE           shift and go to state 13
    FOR             shift and go to state 14
    INT             shift and go to state 10
    FLOAT           shift and go to state 15
    PARANOPEN       shift and go to state 5

  ! MINUS           [ reduce using rule 46 (expression -> .) ]

    factor                         shift and go to state 12
    expression                     shift and go to state 22
    term                           shift and go to state 3
    whileloop                      shift and go to state 7
    forloop                        shift and go to state 8

state 30

    (36) whileloop -> WHILE ID . COLON

    COLON           shift and go to state 48


state 31

    (35) whileloop -> WHILE factor . COLON

    COLON           shift and go to state 49


state 32

    (34) whileloop -> WHILE STR_CONST . COLON

    COLON           shift and go to state 50


state 33

    (33) whileloop -> WHILE BOOL . COLON

    COLON           shift and go to state 51


state 34

    (37) forloop -> FOR ID . IN RANGE PARANOPEN term PARANCLOSE COLON
    (38) forloop -> FOR ID . IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (39) forloop -> FOR ID . IN STR_CONST COLON
    (40) forloop -> FOR ID . IN ID COLON
    (41) forloop -> FOR ID . IN PARANOPEN STR_CONST PARANCLOSE COLON

    IN              shift and go to state 52


state 35

    (3) expression -> expression PLUS term .
    (10) term -> term . MULTIPLY factor
    (11) term -> term . DIVIDE factor

    PLUS            reduce using rule 3 (expression -> expression PLUS term .)
    MINUS           reduce using rule 3 (expression -> expression PLUS term .)
    $end            reduce using rule 3 (expression -> expression PLUS term .)
    PARANCLOSE      reduce using rule 3 (expression -> expression PLUS term .)
    MULTIPLY        shift and go to state 19
    DIVIDE          shift and go to state 20


state 36

    (7) expression -> expression MINUS term .
    (10) term -> term . MULTIPLY factor
    (11) term -> term . DIVIDE factor

    PLUS            reduce using rule 7 (expression -> expression MINUS term .)
    MINUS           reduce using rule 7 (expression -> expression MINUS term .)
    $end            reduce using rule 7 (expression -> expression MINUS term .)
    PARANCLOSE      reduce using rule 7 (expression -> expression MINUS term .)
    MULTIPLY        shift and go to state 19
    DIVIDE          shift and go to state 20


state 37

    (1) expression -> ID EQUAL expression .
    (3) expression -> expression . PLUS term
    (7) expression -> expression . MINUS term

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    $end            reduce using rule 1 (expression -> ID EQUAL expression .)
    PARANCLOSE      reduce using rule 1 (expression -> ID EQUAL expression .)
    PLUS            shift and go to state 16
    MINUS           shift and go to state 17

  ! PLUS            [ reduce using rule 1 (expression -> ID EQUAL expression .) ]
  ! MINUS           [ reduce using rule 1 (expression -> ID EQUAL expression .) ]


state 38

    (2) expression -> ID EQUAL STR_CONST .

    PLUS            reduce using rule 2 (expression -> ID EQUAL STR_CONST .)
    MINUS           reduce using rule 2 (expression -> ID EQUAL STR_CONST .)
    $end            reduce using rule 2 (expression -> ID EQUAL STR_CONST .)
    PARANCLOSE      reduce using rule 2 (expression -> ID EQUAL STR_CONST .)


state 39

    (10) term -> term MULTIPLY factor .

    MULTIPLY        reduce using rule 10 (term -> term MULTIPLY factor .)
    DIVIDE          reduce using rule 10 (term -> term MULTIPLY factor .)
    PLUS            reduce using rule 10 (term -> term MULTIPLY factor .)
    MINUS           reduce using rule 10 (term -> term MULTIPLY factor .)
    $end            reduce using rule 10 (term -> term MULTIPLY factor .)
    PARANCLOSE      reduce using rule 10 (term -> term MULTIPLY factor .)


state 40

    (11) term -> term DIVIDE factor .

    MULTIPLY        reduce using rule 11 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 11 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 11 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 11 (term -> term DIVIDE factor .)
    $end            reduce using rule 11 (term -> term DIVIDE factor .)
    PARANCLOSE      reduce using rule 11 (term -> term DIVIDE factor .)


state 41

    (4) expression -> PRINT PARANOPEN STR_CONST . PARANCLOSE

    PARANCLOSE      shift and go to state 53


state 42

    (5) expression -> PRINT PARANOPEN ID . PARANCLOSE

    PARANCLOSE      shift and go to state 54


state 43

    (6) expression -> PRINT PARANOPEN term . PARANCLOSE
    (10) term -> term . MULTIPLY factor
    (11) term -> term . DIVIDE factor

    PARANCLOSE      shift and go to state 55
    MULTIPLY        shift and go to state 19
    DIVIDE          shift and go to state 20


state 44

    (15) factor -> PARANOPEN expression PARANCLOSE .

    MULTIPLY        reduce using rule 15 (factor -> PARANOPEN expression PARANCLOSE .)
    DIVIDE          reduce using rule 15 (factor -> PARANOPEN expression PARANCLOSE .)
    PLUS            reduce using rule 15 (factor -> PARANOPEN expression PARANCLOSE .)
    MINUS           reduce using rule 15 (factor -> PARANOPEN expression PARANCLOSE .)
    $end            reduce using rule 15 (factor -> PARANOPEN expression PARANCLOSE .)
    PARANCLOSE      reduce using rule 15 (factor -> PARANOPEN expression PARANCLOSE .)
    COLON           reduce using rule 15 (factor -> PARANOPEN expression PARANCLOSE .)


state 45

    (42) expression -> LEVEL1 ID EQUAL . INT

    INT             shift and go to state 56


state 46

    (43) expression -> LEVEL1 PRINT PARANOPEN . STR_CONST PARANCLOSE
    (44) expression -> LEVEL1 PRINT PARANOPEN . ID PARANCLOSE
    (45) expression -> LEVEL1 PRINT PARANOPEN . term PARANCLOSE
    (10) term -> . term MULTIPLY factor
    (11) term -> . term DIVIDE factor
    (12) term -> . factor
    (13) factor -> . INT
    (14) factor -> . FLOAT
    (15) factor -> . PARANOPEN expression PARANCLOSE

    STR_CONST       shift and go to state 57
    ID              shift and go to state 58
    INT             shift and go to state 10
    FLOAT           shift and go to state 15
    PARANOPEN       shift and go to state 5

    term                           shift and go to state 59
    factor                         shift and go to state 12

state 47

    (18) whileloop -> WHILE PARANOPEN ID . EQUAL factor PARANCLOSE COLON
    (19) whileloop -> WHILE PARANOPEN ID . EQUAL STR_CONST PARANCLOSE COLON
    (20) whileloop -> WHILE PARANOPEN ID . EQUAL ID PARANCLOSE COLON
    (21) whileloop -> WHILE PARANOPEN ID . GREATER factor PARANCLOSE COLON
    (22) whileloop -> WHILE PARANOPEN ID . GREATER STR_CONST PARANCLOSE COLON
    (23) whileloop -> WHILE PARANOPEN ID . GREATER ID PARANCLOSE COLON
    (24) whileloop -> WHILE PARANOPEN ID . GREATEREQ factor PARANCLOSE COLON
    (25) whileloop -> WHILE PARANOPEN ID . GREATEREQ STR_CONST PARANCLOSE COLON
    (26) whileloop -> WHILE PARANOPEN ID . GREATEREQ ID PARANCLOSE COLON
    (27) whileloop -> WHILE PARANOPEN ID . LESSER factor PARANCLOSE COLON
    (28) whileloop -> WHILE PARANOPEN ID . LESSER STR_CONST PARANCLOSE COLON
    (29) whileloop -> WHILE PARANOPEN ID . LESSER ID PARANCLOSE COLON
    (30) whileloop -> WHILE PARANOPEN ID . LESSEREQ factor PARANCLOSE COLON
    (31) whileloop -> WHILE PARANOPEN ID . LESSEREQ STR_CONST PARANCLOSE COLON
    (32) whileloop -> WHILE PARANOPEN ID . LESSEREQ ID PARANCLOSE COLON
    (1) expression -> ID . EQUAL expression
    (2) expression -> ID . EQUAL STR_CONST

    EQUAL           shift and go to state 60
    GREATER         shift and go to state 61
    GREATEREQ       shift and go to state 62
    LESSER          shift and go to state 63
    LESSEREQ        shift and go to state 64


state 48

    (36) whileloop -> WHILE ID COLON .

    PLUS            reduce using rule 36 (whileloop -> WHILE ID COLON .)
    MINUS           reduce using rule 36 (whileloop -> WHILE ID COLON .)
    $end            reduce using rule 36 (whileloop -> WHILE ID COLON .)
    PARANCLOSE      reduce using rule 36 (whileloop -> WHILE ID COLON .)


state 49

    (35) whileloop -> WHILE factor COLON .

    PLUS            reduce using rule 35 (whileloop -> WHILE factor COLON .)
    MINUS           reduce using rule 35 (whileloop -> WHILE factor COLON .)
    $end            reduce using rule 35 (whileloop -> WHILE factor COLON .)
    PARANCLOSE      reduce using rule 35 (whileloop -> WHILE factor COLON .)


state 50

    (34) whileloop -> WHILE STR_CONST COLON .

    PLUS            reduce using rule 34 (whileloop -> WHILE STR_CONST COLON .)
    MINUS           reduce using rule 34 (whileloop -> WHILE STR_CONST COLON .)
    $end            reduce using rule 34 (whileloop -> WHILE STR_CONST COLON .)
    PARANCLOSE      reduce using rule 34 (whileloop -> WHILE STR_CONST COLON .)


state 51

    (33) whileloop -> WHILE BOOL COLON .

    PLUS            reduce using rule 33 (whileloop -> WHILE BOOL COLON .)
    MINUS           reduce using rule 33 (whileloop -> WHILE BOOL COLON .)
    $end            reduce using rule 33 (whileloop -> WHILE BOOL COLON .)
    PARANCLOSE      reduce using rule 33 (whileloop -> WHILE BOOL COLON .)


state 52

    (37) forloop -> FOR ID IN . RANGE PARANOPEN term PARANCLOSE COLON
    (38) forloop -> FOR ID IN . RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (39) forloop -> FOR ID IN . STR_CONST COLON
    (40) forloop -> FOR ID IN . ID COLON
    (41) forloop -> FOR ID IN . PARANOPEN STR_CONST PARANCLOSE COLON

    RANGE           shift and go to state 66
    STR_CONST       shift and go to state 68
    ID              shift and go to state 65
    PARANOPEN       shift and go to state 67


state 53

    (4) expression -> PRINT PARANOPEN STR_CONST PARANCLOSE .

    PLUS            reduce using rule 4 (expression -> PRINT PARANOPEN STR_CONST PARANCLOSE .)
    MINUS           reduce using rule 4 (expression -> PRINT PARANOPEN STR_CONST PARANCLOSE .)
    $end            reduce using rule 4 (expression -> PRINT PARANOPEN STR_CONST PARANCLOSE .)
    PARANCLOSE      reduce using rule 4 (expression -> PRINT PARANOPEN STR_CONST PARANCLOSE .)


state 54

    (5) expression -> PRINT PARANOPEN ID PARANCLOSE .

    PLUS            reduce using rule 5 (expression -> PRINT PARANOPEN ID PARANCLOSE .)
    MINUS           reduce using rule 5 (expression -> PRINT PARANOPEN ID PARANCLOSE .)
    $end            reduce using rule 5 (expression -> PRINT PARANOPEN ID PARANCLOSE .)
    PARANCLOSE      reduce using rule 5 (expression -> PRINT PARANOPEN ID PARANCLOSE .)


state 55

    (6) expression -> PRINT PARANOPEN term PARANCLOSE .

    PLUS            reduce using rule 6 (expression -> PRINT PARANOPEN term PARANCLOSE .)
    MINUS           reduce using rule 6 (expression -> PRINT PARANOPEN term PARANCLOSE .)
    $end            reduce using rule 6 (expression -> PRINT PARANOPEN term PARANCLOSE .)
    PARANCLOSE      reduce using rule 6 (expression -> PRINT PARANOPEN term PARANCLOSE .)


state 56

    (42) expression -> LEVEL1 ID EQUAL INT .

    PLUS            reduce using rule 42 (expression -> LEVEL1 ID EQUAL INT .)
    MINUS           reduce using rule 42 (expression -> LEVEL1 ID EQUAL INT .)
    $end            reduce using rule 42 (expression -> LEVEL1 ID EQUAL INT .)
    PARANCLOSE      reduce using rule 42 (expression -> LEVEL1 ID EQUAL INT .)


state 57

    (43) expression -> LEVEL1 PRINT PARANOPEN STR_CONST . PARANCLOSE

    PARANCLOSE      shift and go to state 69


state 58

    (44) expression -> LEVEL1 PRINT PARANOPEN ID . PARANCLOSE

    PARANCLOSE      shift and go to state 70


state 59

    (45) expression -> LEVEL1 PRINT PARANOPEN term . PARANCLOSE
    (10) term -> term . MULTIPLY factor
    (11) term -> term . DIVIDE factor

    PARANCLOSE      shift and go to state 71
    MULTIPLY        shift and go to state 19
    DIVIDE          shift and go to state 20


state 60

    (18) whileloop -> WHILE PARANOPEN ID EQUAL . factor PARANCLOSE COLON
    (19) whileloop -> WHILE PARANOPEN ID EQUAL . STR_CONST PARANCLOSE COLON
    (20) whileloop -> WHILE PARANOPEN ID EQUAL . ID PARANCLOSE COLON
    (1) expression -> ID EQUAL . expression
    (2) expression -> ID EQUAL . STR_CONST
    (13) factor -> . INT
    (14) factor -> . FLOAT
    (15) factor -> . PARANOPEN expression PARANCLOSE
    (1) expression -> . ID EQUAL expression
    (2) expression -> . ID EQUAL STR_CONST
    (3) expression -> . expression PLUS term
    (4) expression -> . PRINT PARANOPEN STR_CONST PARANCLOSE
    (5) expression -> . PRINT PARANOPEN ID PARANCLOSE
    (6) expression -> . PRINT PARANOPEN term PARANCLOSE
    (7) expression -> . expression MINUS term
    (8) expression -> . MINUS term
    (9) expression -> . term
    (16) expression -> . whileloop
    (17) expression -> . forloop
    (42) expression -> . LEVEL1 ID EQUAL INT
    (43) expression -> . LEVEL1 PRINT PARANOPEN STR_CONST PARANCLOSE
    (44) expression -> . LEVEL1 PRINT PARANOPEN ID PARANCLOSE
    (45) expression -> . LEVEL1 PRINT PARANOPEN term PARANCLOSE
    (46) expression -> .
    (47) expression -> . HASH expression
    (48) expression -> . HASH ID
    (49) expression -> . HASH STR_CONST
    (10) term -> . term MULTIPLY factor
    (11) term -> . term DIVIDE factor
    (12) term -> . factor
    (18) whileloop -> . WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (19) whileloop -> . WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (20) whileloop -> . WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (21) whileloop -> . WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (22) whileloop -> . WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (23) whileloop -> . WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (24) whileloop -> . WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (25) whileloop -> . WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (26) whileloop -> . WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (27) whileloop -> . WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (28) whileloop -> . WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (29) whileloop -> . WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (30) whileloop -> . WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (31) whileloop -> . WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (32) whileloop -> . WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (33) whileloop -> . WHILE BOOL COLON
    (34) whileloop -> . WHILE STR_CONST COLON
    (35) whileloop -> . WHILE factor COLON
    (36) whileloop -> . WHILE ID COLON
    (37) forloop -> . FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (38) forloop -> . FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (39) forloop -> . FOR ID IN STR_CONST COLON
    (40) forloop -> . FOR ID IN ID COLON
    (41) forloop -> . FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON

  ! shift/reduce conflict for MINUS resolved as shift
    STR_CONST       shift and go to state 74
    ID              shift and go to state 72
    INT             shift and go to state 10
    FLOAT           shift and go to state 15
    PARANOPEN       shift and go to state 5
    PRINT           shift and go to state 4
    MINUS           shift and go to state 6
    LEVEL1          shift and go to state 9
    PLUS            reduce using rule 46 (expression -> .)
    PARANCLOSE      reduce using rule 46 (expression -> .)
    HASH            shift and go to state 11
    WHILE           shift and go to state 13
    FOR             shift and go to state 14

  ! MINUS           [ reduce using rule 46 (expression -> .) ]

    factor                         shift and go to state 73
    expression                     shift and go to state 37
    term                           shift and go to state 3
    whileloop                      shift and go to state 7
    forloop                        shift and go to state 8

state 61

    (21) whileloop -> WHILE PARANOPEN ID GREATER . factor PARANCLOSE COLON
    (22) whileloop -> WHILE PARANOPEN ID GREATER . STR_CONST PARANCLOSE COLON
    (23) whileloop -> WHILE PARANOPEN ID GREATER . ID PARANCLOSE COLON
    (13) factor -> . INT
    (14) factor -> . FLOAT
    (15) factor -> . PARANOPEN expression PARANCLOSE

    STR_CONST       shift and go to state 77
    ID              shift and go to state 75
    INT             shift and go to state 10
    FLOAT           shift and go to state 15
    PARANOPEN       shift and go to state 5

    factor                         shift and go to state 76

state 62

    (24) whileloop -> WHILE PARANOPEN ID GREATEREQ . factor PARANCLOSE COLON
    (25) whileloop -> WHILE PARANOPEN ID GREATEREQ . STR_CONST PARANCLOSE COLON
    (26) whileloop -> WHILE PARANOPEN ID GREATEREQ . ID PARANCLOSE COLON
    (13) factor -> . INT
    (14) factor -> . FLOAT
    (15) factor -> . PARANOPEN expression PARANCLOSE

    STR_CONST       shift and go to state 80
    ID              shift and go to state 78
    INT             shift and go to state 10
    FLOAT           shift and go to state 15
    PARANOPEN       shift and go to state 5

    factor                         shift and go to state 79

state 63

    (27) whileloop -> WHILE PARANOPEN ID LESSER . factor PARANCLOSE COLON
    (28) whileloop -> WHILE PARANOPEN ID LESSER . STR_CONST PARANCLOSE COLON
    (29) whileloop -> WHILE PARANOPEN ID LESSER . ID PARANCLOSE COLON
    (13) factor -> . INT
    (14) factor -> . FLOAT
    (15) factor -> . PARANOPEN expression PARANCLOSE

    STR_CONST       shift and go to state 83
    ID              shift and go to state 81
    INT             shift and go to state 10
    FLOAT           shift and go to state 15
    PARANOPEN       shift and go to state 5

    factor                         shift and go to state 82

state 64

    (30) whileloop -> WHILE PARANOPEN ID LESSEREQ . factor PARANCLOSE COLON
    (31) whileloop -> WHILE PARANOPEN ID LESSEREQ . STR_CONST PARANCLOSE COLON
    (32) whileloop -> WHILE PARANOPEN ID LESSEREQ . ID PARANCLOSE COLON
    (13) factor -> . INT
    (14) factor -> . FLOAT
    (15) factor -> . PARANOPEN expression PARANCLOSE

    STR_CONST       shift and go to state 86
    ID              shift and go to state 84
    INT             shift and go to state 10
    FLOAT           shift and go to state 15
    PARANOPEN       shift and go to state 5

    factor                         shift and go to state 85

state 65

    (40) forloop -> FOR ID IN ID . COLON

    COLON           shift and go to state 87


state 66

    (37) forloop -> FOR ID IN RANGE . PARANOPEN term PARANCLOSE COLON
    (38) forloop -> FOR ID IN RANGE . PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON

    PARANOPEN       shift and go to state 88


state 67

    (41) forloop -> FOR ID IN PARANOPEN . STR_CONST PARANCLOSE COLON

    STR_CONST       shift and go to state 89


state 68

    (39) forloop -> FOR ID IN STR_CONST . COLON

    COLON           shift and go to state 90


state 69

    (43) expression -> LEVEL1 PRINT PARANOPEN STR_CONST PARANCLOSE .

    PLUS            reduce using rule 43 (expression -> LEVEL1 PRINT PARANOPEN STR_CONST PARANCLOSE .)
    MINUS           reduce using rule 43 (expression -> LEVEL1 PRINT PARANOPEN STR_CONST PARANCLOSE .)
    $end            reduce using rule 43 (expression -> LEVEL1 PRINT PARANOPEN STR_CONST PARANCLOSE .)
    PARANCLOSE      reduce using rule 43 (expression -> LEVEL1 PRINT PARANOPEN STR_CONST PARANCLOSE .)


state 70

    (44) expression -> LEVEL1 PRINT PARANOPEN ID PARANCLOSE .

    PLUS            reduce using rule 44 (expression -> LEVEL1 PRINT PARANOPEN ID PARANCLOSE .)
    MINUS           reduce using rule 44 (expression -> LEVEL1 PRINT PARANOPEN ID PARANCLOSE .)
    $end            reduce using rule 44 (expression -> LEVEL1 PRINT PARANOPEN ID PARANCLOSE .)
    PARANCLOSE      reduce using rule 44 (expression -> LEVEL1 PRINT PARANOPEN ID PARANCLOSE .)


state 71

    (45) expression -> LEVEL1 PRINT PARANOPEN term PARANCLOSE .

    PLUS            reduce using rule 45 (expression -> LEVEL1 PRINT PARANOPEN term PARANCLOSE .)
    MINUS           reduce using rule 45 (expression -> LEVEL1 PRINT PARANOPEN term PARANCLOSE .)
    $end            reduce using rule 45 (expression -> LEVEL1 PRINT PARANOPEN term PARANCLOSE .)
    PARANCLOSE      reduce using rule 45 (expression -> LEVEL1 PRINT PARANOPEN term PARANCLOSE .)


state 72

    (20) whileloop -> WHILE PARANOPEN ID EQUAL ID . PARANCLOSE COLON
    (1) expression -> ID . EQUAL expression
    (2) expression -> ID . EQUAL STR_CONST

    PARANCLOSE      shift and go to state 91
    EQUAL           shift and go to state 18


state 73

    (18) whileloop -> WHILE PARANOPEN ID EQUAL factor . PARANCLOSE COLON
    (12) term -> factor .

  ! shift/reduce conflict for PARANCLOSE resolved as shift
    PARANCLOSE      shift and go to state 92
    MULTIPLY        reduce using rule 12 (term -> factor .)
    DIVIDE          reduce using rule 12 (term -> factor .)
    PLUS            reduce using rule 12 (term -> factor .)
    MINUS           reduce using rule 12 (term -> factor .)

  ! PARANCLOSE      [ reduce using rule 12 (term -> factor .) ]


state 74

    (19) whileloop -> WHILE PARANOPEN ID EQUAL STR_CONST . PARANCLOSE COLON
    (2) expression -> ID EQUAL STR_CONST .

  ! shift/reduce conflict for PARANCLOSE resolved as shift
    PARANCLOSE      shift and go to state 93
    PLUS            reduce using rule 2 (expression -> ID EQUAL STR_CONST .)
    MINUS           reduce using rule 2 (expression -> ID EQUAL STR_CONST .)

  ! PARANCLOSE      [ reduce using rule 2 (expression -> ID EQUAL STR_CONST .) ]


state 75

    (23) whileloop -> WHILE PARANOPEN ID GREATER ID . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 94


state 76

    (21) whileloop -> WHILE PARANOPEN ID GREATER factor . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 95


state 77

    (22) whileloop -> WHILE PARANOPEN ID GREATER STR_CONST . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 96


state 78

    (26) whileloop -> WHILE PARANOPEN ID GREATEREQ ID . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 97


state 79

    (24) whileloop -> WHILE PARANOPEN ID GREATEREQ factor . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 98


state 80

    (25) whileloop -> WHILE PARANOPEN ID GREATEREQ STR_CONST . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 99


state 81

    (29) whileloop -> WHILE PARANOPEN ID LESSER ID . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 100


state 82

    (27) whileloop -> WHILE PARANOPEN ID LESSER factor . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 101


state 83

    (28) whileloop -> WHILE PARANOPEN ID LESSER STR_CONST . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 102


state 84

    (32) whileloop -> WHILE PARANOPEN ID LESSEREQ ID . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 103


state 85

    (30) whileloop -> WHILE PARANOPEN ID LESSEREQ factor . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 104


state 86

    (31) whileloop -> WHILE PARANOPEN ID LESSEREQ STR_CONST . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 105


state 87

    (40) forloop -> FOR ID IN ID COLON .

    PLUS            reduce using rule 40 (forloop -> FOR ID IN ID COLON .)
    MINUS           reduce using rule 40 (forloop -> FOR ID IN ID COLON .)
    $end            reduce using rule 40 (forloop -> FOR ID IN ID COLON .)
    PARANCLOSE      reduce using rule 40 (forloop -> FOR ID IN ID COLON .)


state 88

    (37) forloop -> FOR ID IN RANGE PARANOPEN . term PARANCLOSE COLON
    (38) forloop -> FOR ID IN RANGE PARANOPEN . LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (10) term -> . term MULTIPLY factor
    (11) term -> . term DIVIDE factor
    (12) term -> . factor
    (13) factor -> . INT
    (14) factor -> . FLOAT
    (15) factor -> . PARANOPEN expression PARANCLOSE

    LEN             shift and go to state 107
    INT             shift and go to state 10
    FLOAT           shift and go to state 15
    PARANOPEN       shift and go to state 5

    term                           shift and go to state 106
    factor                         shift and go to state 12

state 89

    (41) forloop -> FOR ID IN PARANOPEN STR_CONST . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 108


state 90

    (39) forloop -> FOR ID IN STR_CONST COLON .

    PLUS            reduce using rule 39 (forloop -> FOR ID IN STR_CONST COLON .)
    MINUS           reduce using rule 39 (forloop -> FOR ID IN STR_CONST COLON .)
    $end            reduce using rule 39 (forloop -> FOR ID IN STR_CONST COLON .)
    PARANCLOSE      reduce using rule 39 (forloop -> FOR ID IN STR_CONST COLON .)


state 91

    (20) whileloop -> WHILE PARANOPEN ID EQUAL ID PARANCLOSE . COLON

    COLON           shift and go to state 109


state 92

    (18) whileloop -> WHILE PARANOPEN ID EQUAL factor PARANCLOSE . COLON

    COLON           shift and go to state 110


state 93

    (19) whileloop -> WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE . COLON

    COLON           shift and go to state 111


state 94

    (23) whileloop -> WHILE PARANOPEN ID GREATER ID PARANCLOSE . COLON

    COLON           shift and go to state 112


state 95

    (21) whileloop -> WHILE PARANOPEN ID GREATER factor PARANCLOSE . COLON

    COLON           shift and go to state 113


state 96

    (22) whileloop -> WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE . COLON

    COLON           shift and go to state 114


state 97

    (26) whileloop -> WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE . COLON

    COLON           shift and go to state 115


state 98

    (24) whileloop -> WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE . COLON

    COLON           shift and go to state 116


state 99

    (25) whileloop -> WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE . COLON

    COLON           shift and go to state 117


state 100

    (29) whileloop -> WHILE PARANOPEN ID LESSER ID PARANCLOSE . COLON

    COLON           shift and go to state 118


state 101

    (27) whileloop -> WHILE PARANOPEN ID LESSER factor PARANCLOSE . COLON

    COLON           shift and go to state 119


state 102

    (28) whileloop -> WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE . COLON

    COLON           shift and go to state 120


state 103

    (32) whileloop -> WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE . COLON

    COLON           shift and go to state 121


state 104

    (30) whileloop -> WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE . COLON

    COLON           shift and go to state 122


state 105

    (31) whileloop -> WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE . COLON

    COLON           shift and go to state 123


state 106

    (37) forloop -> FOR ID IN RANGE PARANOPEN term . PARANCLOSE COLON
    (10) term -> term . MULTIPLY factor
    (11) term -> term . DIVIDE factor

    PARANCLOSE      shift and go to state 124
    MULTIPLY        shift and go to state 19
    DIVIDE          shift and go to state 20


state 107

    (38) forloop -> FOR ID IN RANGE PARANOPEN LEN . PARANOPEN ID PARANCLOSE PARANCLOSE COLON

    PARANOPEN       shift and go to state 125


state 108

    (41) forloop -> FOR ID IN PARANOPEN STR_CONST PARANCLOSE . COLON

    COLON           shift and go to state 126


state 109

    (20) whileloop -> WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON .

    PLUS            reduce using rule 20 (whileloop -> WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON .)
    MINUS           reduce using rule 20 (whileloop -> WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON .)
    $end            reduce using rule 20 (whileloop -> WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 20 (whileloop -> WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON .)


state 110

    (18) whileloop -> WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON .

    PLUS            reduce using rule 18 (whileloop -> WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON .)
    MINUS           reduce using rule 18 (whileloop -> WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON .)
    $end            reduce using rule 18 (whileloop -> WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 18 (whileloop -> WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON .)


state 111

    (19) whileloop -> WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON .

    PLUS            reduce using rule 19 (whileloop -> WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON .)
    MINUS           reduce using rule 19 (whileloop -> WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON .)
    $end            reduce using rule 19 (whileloop -> WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 19 (whileloop -> WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON .)


state 112

    (23) whileloop -> WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON .

    PLUS            reduce using rule 23 (whileloop -> WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON .)
    MINUS           reduce using rule 23 (whileloop -> WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON .)
    $end            reduce using rule 23 (whileloop -> WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 23 (whileloop -> WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON .)


state 113

    (21) whileloop -> WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON .

    PLUS            reduce using rule 21 (whileloop -> WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON .)
    MINUS           reduce using rule 21 (whileloop -> WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON .)
    $end            reduce using rule 21 (whileloop -> WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 21 (whileloop -> WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON .)


state 114

    (22) whileloop -> WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON .

    PLUS            reduce using rule 22 (whileloop -> WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON .)
    MINUS           reduce using rule 22 (whileloop -> WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON .)
    $end            reduce using rule 22 (whileloop -> WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 22 (whileloop -> WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON .)


state 115

    (26) whileloop -> WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON .

    PLUS            reduce using rule 26 (whileloop -> WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON .)
    MINUS           reduce using rule 26 (whileloop -> WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON .)
    $end            reduce using rule 26 (whileloop -> WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 26 (whileloop -> WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON .)


state 116

    (24) whileloop -> WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON .

    PLUS            reduce using rule 24 (whileloop -> WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON .)
    MINUS           reduce using rule 24 (whileloop -> WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON .)
    $end            reduce using rule 24 (whileloop -> WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 24 (whileloop -> WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON .)


state 117

    (25) whileloop -> WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON .

    PLUS            reduce using rule 25 (whileloop -> WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON .)
    MINUS           reduce using rule 25 (whileloop -> WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON .)
    $end            reduce using rule 25 (whileloop -> WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 25 (whileloop -> WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON .)


state 118

    (29) whileloop -> WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON .

    PLUS            reduce using rule 29 (whileloop -> WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON .)
    MINUS           reduce using rule 29 (whileloop -> WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON .)
    $end            reduce using rule 29 (whileloop -> WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 29 (whileloop -> WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON .)


state 119

    (27) whileloop -> WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON .

    PLUS            reduce using rule 27 (whileloop -> WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON .)
    MINUS           reduce using rule 27 (whileloop -> WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON .)
    $end            reduce using rule 27 (whileloop -> WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 27 (whileloop -> WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON .)


state 120

    (28) whileloop -> WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON .

    PLUS            reduce using rule 28 (whileloop -> WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON .)
    MINUS           reduce using rule 28 (whileloop -> WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON .)
    $end            reduce using rule 28 (whileloop -> WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 28 (whileloop -> WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON .)


state 121

    (32) whileloop -> WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON .

    PLUS            reduce using rule 32 (whileloop -> WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON .)
    MINUS           reduce using rule 32 (whileloop -> WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON .)
    $end            reduce using rule 32 (whileloop -> WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 32 (whileloop -> WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON .)


state 122

    (30) whileloop -> WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON .

    PLUS            reduce using rule 30 (whileloop -> WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON .)
    MINUS           reduce using rule 30 (whileloop -> WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON .)
    $end            reduce using rule 30 (whileloop -> WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 30 (whileloop -> WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON .)


state 123

    (31) whileloop -> WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON .

    PLUS            reduce using rule 31 (whileloop -> WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON .)
    MINUS           reduce using rule 31 (whileloop -> WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON .)
    $end            reduce using rule 31 (whileloop -> WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 31 (whileloop -> WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON .)


state 124

    (37) forloop -> FOR ID IN RANGE PARANOPEN term PARANCLOSE . COLON

    COLON           shift and go to state 127


state 125

    (38) forloop -> FOR ID IN RANGE PARANOPEN LEN PARANOPEN . ID PARANCLOSE PARANCLOSE COLON

    ID              shift and go to state 128


state 126

    (41) forloop -> FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON .

    PLUS            reduce using rule 41 (forloop -> FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON .)
    MINUS           reduce using rule 41 (forloop -> FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON .)
    $end            reduce using rule 41 (forloop -> FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 41 (forloop -> FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON .)


state 127

    (37) forloop -> FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON .

    PLUS            reduce using rule 37 (forloop -> FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON .)
    MINUS           reduce using rule 37 (forloop -> FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON .)
    $end            reduce using rule 37 (forloop -> FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 37 (forloop -> FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON .)


state 128

    (38) forloop -> FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID . PARANCLOSE PARANCLOSE COLON

    PARANCLOSE      shift and go to state 129


state 129

    (38) forloop -> FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 130


state 130

    (38) forloop -> FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE . COLON

    COLON           shift and go to state 131


state 131

    (38) forloop -> FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON .

    PLUS            reduce using rule 38 (forloop -> FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON .)
    MINUS           reduce using rule 38 (forloop -> FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON .)
    $end            reduce using rule 38 (forloop -> FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 38 (forloop -> FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MINUS in state 0 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 5 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 11 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 18 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 26 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 26 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 29 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 37 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 37 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 60 resolved as shift
WARNING: shift/reduce conflict for PARANCLOSE in state 73 resolved as shift
WARNING: shift/reduce conflict for PARANCLOSE in state 74 resolved as shift
