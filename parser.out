Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    BIT_AND
    BIT_OR
    COMMA
    DEF
    EQEQ
    FLOWERCLOSE
    FLOWEROPEN
    IF
    LEVEL3
    MOD
    NAME
    NEWLINE
    NOTEQ
    OR

Grammar

Rule 0     S' -> expression
Rule 1     expression -> ID EQUAL expression
Rule 2     expression -> ID EQUAL EMP_LIST
Rule 3     expression -> ID EQUAL EMP_TUPLE
Rule 4     expression -> ID EQUAL EMP_SET
Rule 5     expression -> ID EQUAL STR_CONST
Rule 6     expression -> ID EQUAL ID
Rule 7     expression -> ID PLUS EQUAL term
Rule 8     expression -> expression PLUS term
Rule 9     expression -> ID PLUS factor
Rule 10    expression -> PRINT PARANOPEN STR_CONST PARANCLOSE
Rule 11    expression -> PRINT PARANOPEN ID PARANCLOSE
Rule 12    expression -> PRINT PARANOPEN term PARANCLOSE
Rule 13    expression -> expression MINUS term
Rule 14    expression -> ID MINUS EQUAL term
Rule 15    expression -> MINUS term
Rule 16    expression -> term
Rule 17    term -> term MULTIPLY factor
Rule 18    term -> term DIVIDE factor
Rule 19    term -> factor
Rule 20    factor -> INT
Rule 21    factor -> FLOAT
Rule 22    factor -> PARANOPEN expression PARANCLOSE
Rule 23    expression -> whileloop
Rule 24    expression -> forloop
Rule 25    expression -> forloop2
Rule 26    expression -> whileloop2
Rule 27    whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
Rule 28    whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
Rule 29    whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
Rule 30    whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
Rule 31    whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
Rule 32    whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
Rule 33    whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
Rule 34    whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
Rule 35    whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
Rule 36    whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
Rule 37    whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
Rule 38    whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
Rule 39    whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
Rule 40    whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
Rule 41    whileloop2 -> WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
Rule 42    whileloop2 -> LEVEL1 WHILE BOOL COLON
Rule 43    whileloop2 -> LEVEL1 WHILE STR_CONST COLON
Rule 44    whileloop2 -> LEVEL1 WHILE factor COLON
Rule 45    whileloop2 -> LEVEL1 WHILE ID COLON
Rule 46    whileloop -> WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
Rule 47    whileloop -> WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
Rule 48    whileloop -> WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
Rule 49    whileloop -> WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
Rule 50    whileloop -> WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
Rule 51    whileloop -> WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
Rule 52    whileloop -> WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
Rule 53    whileloop -> WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
Rule 54    whileloop -> WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
Rule 55    whileloop -> WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
Rule 56    whileloop -> WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
Rule 57    whileloop -> WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
Rule 58    whileloop -> WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
Rule 59    whileloop -> WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
Rule 60    whileloop -> WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
Rule 61    whileloop -> WHILE BOOL COLON
Rule 62    whileloop -> WHILE STR_CONST COLON
Rule 63    whileloop -> WHILE factor COLON
Rule 64    whileloop -> WHILE ID COLON
Rule 65    forloop2 -> LEVEL1 FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
Rule 66    forloop2 -> LEVEL1 FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
Rule 67    forloop2 -> LEVEL1 FOR ID IN STR_CONST COLON
Rule 68    forloop2 -> LEVEL1 FOR ID IN ID COLON
Rule 69    forloop2 -> LEVEL1 FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
Rule 70    forloop -> FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
Rule 71    forloop -> FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
Rule 72    forloop -> FOR ID IN STR_CONST COLON
Rule 73    forloop -> FOR ID IN ID COLON
Rule 74    forloop -> FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
Rule 75    expression -> LEVEL2 ID EQUAL expression
Rule 76    expression -> LEVEL2 ID EQUAL ID
Rule 77    expression -> LEVEL2 ID EQUAL STR_CONST
Rule 78    expression -> LEVEL1 ID EQUAL expression
Rule 79    expression -> LEVEL1 ID EQUAL ID
Rule 80    expression -> LEVEL1 ID EQUAL STR_CONST
Rule 81    expression -> LEVEL2 PRINT PARANOPEN STR_CONST PARANCLOSE
Rule 82    expression -> LEVEL2 PRINT PARANOPEN ID PARANCLOSE
Rule 83    expression -> LEVEL2 PRINT PARANOPEN term PARANCLOSE
Rule 84    expression -> LEVEL1 PRINT PARANOPEN STR_CONST PARANCLOSE
Rule 85    expression -> LEVEL1 PRINT PARANOPEN ID PARANCLOSE
Rule 86    expression -> LEVEL1 PRINT PARANOPEN term PARANCLOSE
Rule 87    expression -> <empty>
Rule 88    expression -> HASH expression
Rule 89    expression -> HASH ID
Rule 90    expression -> HASH STR_CONST

Terminals, with rules where they appear

AND                  : 
BIT_AND              : 
BIT_OR               : 
BOOL                 : 42 61
COLON                : 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74
COMMA                : 
DEF                  : 
DIVIDE               : 18
EMP_LIST             : 2
EMP_SET              : 4
EMP_TUPLE            : 3
EQEQ                 : 
EQUAL                : 1 2 3 4 5 6 7 14 27 28 29 46 47 48 75 76 77 78 79 80
FLOAT                : 21
FLOWERCLOSE          : 
FLOWEROPEN           : 
FOR                  : 65 66 67 68 69 70 71 72 73 74
GREATER              : 30 31 32 49 50 51
GREATEREQ            : 33 34 35 52 53 54
HASH                 : 88 89 90
ID                   : 1 2 3 4 5 6 6 7 9 11 14 27 28 29 29 30 31 32 32 33 34 35 35 36 37 38 38 39 40 41 41 45 46 47 48 48 49 50 51 51 52 53 54 54 55 56 57 57 58 59 60 60 64 65 66 66 67 68 68 69 70 71 71 72 73 73 74 75 76 76 77 78 79 79 80 82 85 89
IF                   : 
IN                   : 65 66 67 68 69 70 71 72 73 74
INT                  : 20
LEN                  : 66 71
LESSER               : 36 37 38 55 56 57
LESSEREQ             : 39 40 41 58 59 60
LEVEL1               : 27 28 29 30 31 32 33 34 35 36 37 38 39 40 42 43 44 45 65 66 67 68 69 78 79 80 84 85 86
LEVEL2               : 75 76 77 81 82 83
LEVEL3               : 
MINUS                : 13 14 15
MOD                  : 
MULTIPLY             : 17
NAME                 : 
NEWLINE              : 
NOTEQ                : 
OR                   : 
PARANCLOSE           : 10 11 12 22 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 65 66 66 69 70 71 71 74 81 82 83 84 85 86
PARANOPEN            : 10 11 12 22 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 65 66 66 69 70 71 71 74 81 82 83 84 85 86
PLUS                 : 7 8 9
PRINT                : 10 11 12 81 82 83 84 85 86
RANGE                : 65 66 70 71
STR_CONST            : 5 10 28 31 34 37 40 43 47 50 53 56 59 62 67 69 72 74 77 80 81 84 90
WHILE                : 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64
error                : 

Nonterminals, with rules where they appear

expression           : 1 8 13 22 75 78 88 0
factor               : 9 17 18 19 27 30 33 36 39 44 46 49 52 55 58 63
forloop              : 24
forloop2             : 25
term                 : 7 8 12 13 14 15 16 17 18 65 70 83 86
whileloop            : 23
whileloop2           : 26

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . ID EQUAL expression
    (2) expression -> . ID EQUAL EMP_LIST
    (3) expression -> . ID EQUAL EMP_TUPLE
    (4) expression -> . ID EQUAL EMP_SET
    (5) expression -> . ID EQUAL STR_CONST
    (6) expression -> . ID EQUAL ID
    (7) expression -> . ID PLUS EQUAL term
    (8) expression -> . expression PLUS term
    (9) expression -> . ID PLUS factor
    (10) expression -> . PRINT PARANOPEN STR_CONST PARANCLOSE
    (11) expression -> . PRINT PARANOPEN ID PARANCLOSE
    (12) expression -> . PRINT PARANOPEN term PARANCLOSE
    (13) expression -> . expression MINUS term
    (14) expression -> . ID MINUS EQUAL term
    (15) expression -> . MINUS term
    (16) expression -> . term
    (23) expression -> . whileloop
    (24) expression -> . forloop
    (25) expression -> . forloop2
    (26) expression -> . whileloop2
    (75) expression -> . LEVEL2 ID EQUAL expression
    (76) expression -> . LEVEL2 ID EQUAL ID
    (77) expression -> . LEVEL2 ID EQUAL STR_CONST
    (78) expression -> . LEVEL1 ID EQUAL expression
    (79) expression -> . LEVEL1 ID EQUAL ID
    (80) expression -> . LEVEL1 ID EQUAL STR_CONST
    (81) expression -> . LEVEL2 PRINT PARANOPEN STR_CONST PARANCLOSE
    (82) expression -> . LEVEL2 PRINT PARANOPEN ID PARANCLOSE
    (83) expression -> . LEVEL2 PRINT PARANOPEN term PARANCLOSE
    (84) expression -> . LEVEL1 PRINT PARANOPEN STR_CONST PARANCLOSE
    (85) expression -> . LEVEL1 PRINT PARANOPEN ID PARANCLOSE
    (86) expression -> . LEVEL1 PRINT PARANOPEN term PARANCLOSE
    (87) expression -> .
    (88) expression -> . HASH expression
    (89) expression -> . HASH ID
    (90) expression -> . HASH STR_CONST
    (17) term -> . term MULTIPLY factor
    (18) term -> . term DIVIDE factor
    (19) term -> . factor
    (46) whileloop -> . WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (47) whileloop -> . WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (48) whileloop -> . WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (49) whileloop -> . WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (50) whileloop -> . WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (51) whileloop -> . WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (52) whileloop -> . WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (53) whileloop -> . WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (54) whileloop -> . WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (55) whileloop -> . WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (56) whileloop -> . WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (57) whileloop -> . WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (58) whileloop -> . WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (59) whileloop -> . WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (60) whileloop -> . WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (61) whileloop -> . WHILE BOOL COLON
    (62) whileloop -> . WHILE STR_CONST COLON
    (63) whileloop -> . WHILE factor COLON
    (64) whileloop -> . WHILE ID COLON
    (70) forloop -> . FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (71) forloop -> . FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (72) forloop -> . FOR ID IN STR_CONST COLON
    (73) forloop -> . FOR ID IN ID COLON
    (74) forloop -> . FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (65) forloop2 -> . LEVEL1 FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (66) forloop2 -> . LEVEL1 FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (67) forloop2 -> . LEVEL1 FOR ID IN STR_CONST COLON
    (68) forloop2 -> . LEVEL1 FOR ID IN ID COLON
    (69) forloop2 -> . LEVEL1 FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (27) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (28) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (29) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (30) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (31) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (32) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (33) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (34) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (35) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (36) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (37) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (38) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (39) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (40) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (41) whileloop2 -> . WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (42) whileloop2 -> . LEVEL1 WHILE BOOL COLON
    (43) whileloop2 -> . LEVEL1 WHILE STR_CONST COLON
    (44) whileloop2 -> . LEVEL1 WHILE factor COLON
    (45) whileloop2 -> . LEVEL1 WHILE ID COLON
    (20) factor -> . INT
    (21) factor -> . FLOAT
    (22) factor -> . PARANOPEN expression PARANCLOSE

  ! shift/reduce conflict for MINUS resolved as shift
    ID              shift and go to state 2
    PRINT           shift and go to state 5
    MINUS           shift and go to state 7
    LEVEL2          shift and go to state 12
    LEVEL1          shift and go to state 13
    PLUS            reduce using rule 87 (expression -> .)
    $end            reduce using rule 87 (expression -> .)
    HASH            shift and go to state 14
    WHILE           shift and go to state 15
    FOR             shift and go to state 16
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    PARANOPEN       shift and go to state 6

  ! MINUS           [ reduce using rule 87 (expression -> .) ]

    expression                     shift and go to state 1
    term                           shift and go to state 3
    factor                         shift and go to state 4
    whileloop                      shift and go to state 8
    forloop                        shift and go to state 9
    forloop2                       shift and go to state 10
    whileloop2                     shift and go to state 11

state 1

    (0) S' -> expression .
    (8) expression -> expression . PLUS term
    (13) expression -> expression . MINUS term

    PLUS            shift and go to state 19
    MINUS           shift and go to state 20


state 2

    (1) expression -> ID . EQUAL expression
    (2) expression -> ID . EQUAL EMP_LIST
    (3) expression -> ID . EQUAL EMP_TUPLE
    (4) expression -> ID . EQUAL EMP_SET
    (5) expression -> ID . EQUAL STR_CONST
    (6) expression -> ID . EQUAL ID
    (7) expression -> ID . PLUS EQUAL term
    (9) expression -> ID . PLUS factor
    (14) expression -> ID . MINUS EQUAL term

    EQUAL           shift and go to state 21
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23


state 3

    (16) expression -> term .
    (17) term -> term . MULTIPLY factor
    (18) term -> term . DIVIDE factor

    PLUS            reduce using rule 16 (expression -> term .)
    MINUS           reduce using rule 16 (expression -> term .)
    $end            reduce using rule 16 (expression -> term .)
    PARANCLOSE      reduce using rule 16 (expression -> term .)
    MULTIPLY        shift and go to state 24
    DIVIDE          shift and go to state 25


state 4

    (19) term -> factor .

    MULTIPLY        reduce using rule 19 (term -> factor .)
    DIVIDE          reduce using rule 19 (term -> factor .)
    PLUS            reduce using rule 19 (term -> factor .)
    MINUS           reduce using rule 19 (term -> factor .)
    $end            reduce using rule 19 (term -> factor .)
    PARANCLOSE      reduce using rule 19 (term -> factor .)


state 5

    (10) expression -> PRINT . PARANOPEN STR_CONST PARANCLOSE
    (11) expression -> PRINT . PARANOPEN ID PARANCLOSE
    (12) expression -> PRINT . PARANOPEN term PARANCLOSE

    PARANOPEN       shift and go to state 26


state 6

    (22) factor -> PARANOPEN . expression PARANCLOSE
    (1) expression -> . ID EQUAL expression
    (2) expression -> . ID EQUAL EMP_LIST
    (3) expression -> . ID EQUAL EMP_TUPLE
    (4) expression -> . ID EQUAL EMP_SET
    (5) expression -> . ID EQUAL STR_CONST
    (6) expression -> . ID EQUAL ID
    (7) expression -> . ID PLUS EQUAL term
    (8) expression -> . expression PLUS term
    (9) expression -> . ID PLUS factor
    (10) expression -> . PRINT PARANOPEN STR_CONST PARANCLOSE
    (11) expression -> . PRINT PARANOPEN ID PARANCLOSE
    (12) expression -> . PRINT PARANOPEN term PARANCLOSE
    (13) expression -> . expression MINUS term
    (14) expression -> . ID MINUS EQUAL term
    (15) expression -> . MINUS term
    (16) expression -> . term
    (23) expression -> . whileloop
    (24) expression -> . forloop
    (25) expression -> . forloop2
    (26) expression -> . whileloop2
    (75) expression -> . LEVEL2 ID EQUAL expression
    (76) expression -> . LEVEL2 ID EQUAL ID
    (77) expression -> . LEVEL2 ID EQUAL STR_CONST
    (78) expression -> . LEVEL1 ID EQUAL expression
    (79) expression -> . LEVEL1 ID EQUAL ID
    (80) expression -> . LEVEL1 ID EQUAL STR_CONST
    (81) expression -> . LEVEL2 PRINT PARANOPEN STR_CONST PARANCLOSE
    (82) expression -> . LEVEL2 PRINT PARANOPEN ID PARANCLOSE
    (83) expression -> . LEVEL2 PRINT PARANOPEN term PARANCLOSE
    (84) expression -> . LEVEL1 PRINT PARANOPEN STR_CONST PARANCLOSE
    (85) expression -> . LEVEL1 PRINT PARANOPEN ID PARANCLOSE
    (86) expression -> . LEVEL1 PRINT PARANOPEN term PARANCLOSE
    (87) expression -> .
    (88) expression -> . HASH expression
    (89) expression -> . HASH ID
    (90) expression -> . HASH STR_CONST
    (17) term -> . term MULTIPLY factor
    (18) term -> . term DIVIDE factor
    (19) term -> . factor
    (46) whileloop -> . WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (47) whileloop -> . WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (48) whileloop -> . WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (49) whileloop -> . WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (50) whileloop -> . WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (51) whileloop -> . WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (52) whileloop -> . WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (53) whileloop -> . WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (54) whileloop -> . WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (55) whileloop -> . WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (56) whileloop -> . WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (57) whileloop -> . WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (58) whileloop -> . WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (59) whileloop -> . WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (60) whileloop -> . WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (61) whileloop -> . WHILE BOOL COLON
    (62) whileloop -> . WHILE STR_CONST COLON
    (63) whileloop -> . WHILE factor COLON
    (64) whileloop -> . WHILE ID COLON
    (70) forloop -> . FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (71) forloop -> . FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (72) forloop -> . FOR ID IN STR_CONST COLON
    (73) forloop -> . FOR ID IN ID COLON
    (74) forloop -> . FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (65) forloop2 -> . LEVEL1 FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (66) forloop2 -> . LEVEL1 FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (67) forloop2 -> . LEVEL1 FOR ID IN STR_CONST COLON
    (68) forloop2 -> . LEVEL1 FOR ID IN ID COLON
    (69) forloop2 -> . LEVEL1 FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (27) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (28) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (29) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (30) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (31) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (32) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (33) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (34) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (35) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (36) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (37) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (38) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (39) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (40) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (41) whileloop2 -> . WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (42) whileloop2 -> . LEVEL1 WHILE BOOL COLON
    (43) whileloop2 -> . LEVEL1 WHILE STR_CONST COLON
    (44) whileloop2 -> . LEVEL1 WHILE factor COLON
    (45) whileloop2 -> . LEVEL1 WHILE ID COLON
    (20) factor -> . INT
    (21) factor -> . FLOAT
    (22) factor -> . PARANOPEN expression PARANCLOSE

  ! shift/reduce conflict for MINUS resolved as shift
    ID              shift and go to state 2
    PRINT           shift and go to state 5
    MINUS           shift and go to state 7
    LEVEL2          shift and go to state 12
    LEVEL1          shift and go to state 13
    PARANCLOSE      reduce using rule 87 (expression -> .)
    PLUS            reduce using rule 87 (expression -> .)
    HASH            shift and go to state 14
    WHILE           shift and go to state 15
    FOR             shift and go to state 16
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    PARANOPEN       shift and go to state 6

  ! MINUS           [ reduce using rule 87 (expression -> .) ]

    expression                     shift and go to state 27
    term                           shift and go to state 3
    factor                         shift and go to state 4
    whileloop                      shift and go to state 8
    forloop                        shift and go to state 9
    forloop2                       shift and go to state 10
    whileloop2                     shift and go to state 11

state 7

    (15) expression -> MINUS . term
    (17) term -> . term MULTIPLY factor
    (18) term -> . term DIVIDE factor
    (19) term -> . factor
    (20) factor -> . INT
    (21) factor -> . FLOAT
    (22) factor -> . PARANOPEN expression PARANCLOSE

    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    PARANOPEN       shift and go to state 6

    term                           shift and go to state 28
    factor                         shift and go to state 4

state 8

    (23) expression -> whileloop .

    PLUS            reduce using rule 23 (expression -> whileloop .)
    MINUS           reduce using rule 23 (expression -> whileloop .)
    $end            reduce using rule 23 (expression -> whileloop .)
    PARANCLOSE      reduce using rule 23 (expression -> whileloop .)


state 9

    (24) expression -> forloop .

    PLUS            reduce using rule 24 (expression -> forloop .)
    MINUS           reduce using rule 24 (expression -> forloop .)
    $end            reduce using rule 24 (expression -> forloop .)
    PARANCLOSE      reduce using rule 24 (expression -> forloop .)


state 10

    (25) expression -> forloop2 .

    PLUS            reduce using rule 25 (expression -> forloop2 .)
    MINUS           reduce using rule 25 (expression -> forloop2 .)
    $end            reduce using rule 25 (expression -> forloop2 .)
    PARANCLOSE      reduce using rule 25 (expression -> forloop2 .)


state 11

    (26) expression -> whileloop2 .

    PLUS            reduce using rule 26 (expression -> whileloop2 .)
    MINUS           reduce using rule 26 (expression -> whileloop2 .)
    $end            reduce using rule 26 (expression -> whileloop2 .)
    PARANCLOSE      reduce using rule 26 (expression -> whileloop2 .)


state 12

    (75) expression -> LEVEL2 . ID EQUAL expression
    (76) expression -> LEVEL2 . ID EQUAL ID
    (77) expression -> LEVEL2 . ID EQUAL STR_CONST
    (81) expression -> LEVEL2 . PRINT PARANOPEN STR_CONST PARANCLOSE
    (82) expression -> LEVEL2 . PRINT PARANOPEN ID PARANCLOSE
    (83) expression -> LEVEL2 . PRINT PARANOPEN term PARANCLOSE

    ID              shift and go to state 29
    PRINT           shift and go to state 30


state 13

    (78) expression -> LEVEL1 . ID EQUAL expression
    (79) expression -> LEVEL1 . ID EQUAL ID
    (80) expression -> LEVEL1 . ID EQUAL STR_CONST
    (84) expression -> LEVEL1 . PRINT PARANOPEN STR_CONST PARANCLOSE
    (85) expression -> LEVEL1 . PRINT PARANOPEN ID PARANCLOSE
    (86) expression -> LEVEL1 . PRINT PARANOPEN term PARANCLOSE
    (65) forloop2 -> LEVEL1 . FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (66) forloop2 -> LEVEL1 . FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (67) forloop2 -> LEVEL1 . FOR ID IN STR_CONST COLON
    (68) forloop2 -> LEVEL1 . FOR ID IN ID COLON
    (69) forloop2 -> LEVEL1 . FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (27) whileloop2 -> LEVEL1 . WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (28) whileloop2 -> LEVEL1 . WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (29) whileloop2 -> LEVEL1 . WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (30) whileloop2 -> LEVEL1 . WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (31) whileloop2 -> LEVEL1 . WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (32) whileloop2 -> LEVEL1 . WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (33) whileloop2 -> LEVEL1 . WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (34) whileloop2 -> LEVEL1 . WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (35) whileloop2 -> LEVEL1 . WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (36) whileloop2 -> LEVEL1 . WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (37) whileloop2 -> LEVEL1 . WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (38) whileloop2 -> LEVEL1 . WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (39) whileloop2 -> LEVEL1 . WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (40) whileloop2 -> LEVEL1 . WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (42) whileloop2 -> LEVEL1 . WHILE BOOL COLON
    (43) whileloop2 -> LEVEL1 . WHILE STR_CONST COLON
    (44) whileloop2 -> LEVEL1 . WHILE factor COLON
    (45) whileloop2 -> LEVEL1 . WHILE ID COLON

    ID              shift and go to state 31
    PRINT           shift and go to state 32
    FOR             shift and go to state 33
    WHILE           shift and go to state 34


state 14

    (88) expression -> HASH . expression
    (89) expression -> HASH . ID
    (90) expression -> HASH . STR_CONST
    (1) expression -> . ID EQUAL expression
    (2) expression -> . ID EQUAL EMP_LIST
    (3) expression -> . ID EQUAL EMP_TUPLE
    (4) expression -> . ID EQUAL EMP_SET
    (5) expression -> . ID EQUAL STR_CONST
    (6) expression -> . ID EQUAL ID
    (7) expression -> . ID PLUS EQUAL term
    (8) expression -> . expression PLUS term
    (9) expression -> . ID PLUS factor
    (10) expression -> . PRINT PARANOPEN STR_CONST PARANCLOSE
    (11) expression -> . PRINT PARANOPEN ID PARANCLOSE
    (12) expression -> . PRINT PARANOPEN term PARANCLOSE
    (13) expression -> . expression MINUS term
    (14) expression -> . ID MINUS EQUAL term
    (15) expression -> . MINUS term
    (16) expression -> . term
    (23) expression -> . whileloop
    (24) expression -> . forloop
    (25) expression -> . forloop2
    (26) expression -> . whileloop2
    (75) expression -> . LEVEL2 ID EQUAL expression
    (76) expression -> . LEVEL2 ID EQUAL ID
    (77) expression -> . LEVEL2 ID EQUAL STR_CONST
    (78) expression -> . LEVEL1 ID EQUAL expression
    (79) expression -> . LEVEL1 ID EQUAL ID
    (80) expression -> . LEVEL1 ID EQUAL STR_CONST
    (81) expression -> . LEVEL2 PRINT PARANOPEN STR_CONST PARANCLOSE
    (82) expression -> . LEVEL2 PRINT PARANOPEN ID PARANCLOSE
    (83) expression -> . LEVEL2 PRINT PARANOPEN term PARANCLOSE
    (84) expression -> . LEVEL1 PRINT PARANOPEN STR_CONST PARANCLOSE
    (85) expression -> . LEVEL1 PRINT PARANOPEN ID PARANCLOSE
    (86) expression -> . LEVEL1 PRINT PARANOPEN term PARANCLOSE
    (87) expression -> .
    (88) expression -> . HASH expression
    (89) expression -> . HASH ID
    (90) expression -> . HASH STR_CONST
    (17) term -> . term MULTIPLY factor
    (18) term -> . term DIVIDE factor
    (19) term -> . factor
    (46) whileloop -> . WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (47) whileloop -> . WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (48) whileloop -> . WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (49) whileloop -> . WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (50) whileloop -> . WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (51) whileloop -> . WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (52) whileloop -> . WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (53) whileloop -> . WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (54) whileloop -> . WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (55) whileloop -> . WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (56) whileloop -> . WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (57) whileloop -> . WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (58) whileloop -> . WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (59) whileloop -> . WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (60) whileloop -> . WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (61) whileloop -> . WHILE BOOL COLON
    (62) whileloop -> . WHILE STR_CONST COLON
    (63) whileloop -> . WHILE factor COLON
    (64) whileloop -> . WHILE ID COLON
    (70) forloop -> . FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (71) forloop -> . FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (72) forloop -> . FOR ID IN STR_CONST COLON
    (73) forloop -> . FOR ID IN ID COLON
    (74) forloop -> . FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (65) forloop2 -> . LEVEL1 FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (66) forloop2 -> . LEVEL1 FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (67) forloop2 -> . LEVEL1 FOR ID IN STR_CONST COLON
    (68) forloop2 -> . LEVEL1 FOR ID IN ID COLON
    (69) forloop2 -> . LEVEL1 FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (27) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (28) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (29) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (30) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (31) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (32) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (33) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (34) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (35) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (36) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (37) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (38) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (39) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (40) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (41) whileloop2 -> . WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (42) whileloop2 -> . LEVEL1 WHILE BOOL COLON
    (43) whileloop2 -> . LEVEL1 WHILE STR_CONST COLON
    (44) whileloop2 -> . LEVEL1 WHILE factor COLON
    (45) whileloop2 -> . LEVEL1 WHILE ID COLON
    (20) factor -> . INT
    (21) factor -> . FLOAT
    (22) factor -> . PARANOPEN expression PARANCLOSE

  ! shift/reduce conflict for MINUS resolved as shift
    ID              shift and go to state 36
    STR_CONST       shift and go to state 37
    PRINT           shift and go to state 5
    MINUS           shift and go to state 7
    LEVEL2          shift and go to state 12
    LEVEL1          shift and go to state 13
    PLUS            reduce using rule 87 (expression -> .)
    $end            reduce using rule 87 (expression -> .)
    PARANCLOSE      reduce using rule 87 (expression -> .)
    HASH            shift and go to state 14
    WHILE           shift and go to state 15
    FOR             shift and go to state 16
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    PARANOPEN       shift and go to state 6

  ! MINUS           [ reduce using rule 87 (expression -> .) ]

    expression                     shift and go to state 35
    term                           shift and go to state 3
    factor                         shift and go to state 4
    whileloop                      shift and go to state 8
    forloop                        shift and go to state 9
    forloop2                       shift and go to state 10
    whileloop2                     shift and go to state 11

state 15

    (46) whileloop -> WHILE . PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (47) whileloop -> WHILE . PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (48) whileloop -> WHILE . PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (49) whileloop -> WHILE . PARANOPEN ID GREATER factor PARANCLOSE COLON
    (50) whileloop -> WHILE . PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (51) whileloop -> WHILE . PARANOPEN ID GREATER ID PARANCLOSE COLON
    (52) whileloop -> WHILE . PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (53) whileloop -> WHILE . PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (54) whileloop -> WHILE . PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (55) whileloop -> WHILE . PARANOPEN ID LESSER factor PARANCLOSE COLON
    (56) whileloop -> WHILE . PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (57) whileloop -> WHILE . PARANOPEN ID LESSER ID PARANCLOSE COLON
    (58) whileloop -> WHILE . PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (59) whileloop -> WHILE . PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (60) whileloop -> WHILE . PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (61) whileloop -> WHILE . BOOL COLON
    (62) whileloop -> WHILE . STR_CONST COLON
    (63) whileloop -> WHILE . factor COLON
    (64) whileloop -> WHILE . ID COLON
    (41) whileloop2 -> WHILE . PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (20) factor -> . INT
    (21) factor -> . FLOAT
    (22) factor -> . PARANOPEN expression PARANCLOSE

    PARANOPEN       shift and go to state 38
    BOOL            shift and go to state 42
    STR_CONST       shift and go to state 41
    ID              shift and go to state 39
    INT             shift and go to state 17
    FLOAT           shift and go to state 18

    factor                         shift and go to state 40

state 16

    (70) forloop -> FOR . ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (71) forloop -> FOR . ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (72) forloop -> FOR . ID IN STR_CONST COLON
    (73) forloop -> FOR . ID IN ID COLON
    (74) forloop -> FOR . ID IN PARANOPEN STR_CONST PARANCLOSE COLON

    ID              shift and go to state 43


state 17

    (20) factor -> INT .

    MULTIPLY        reduce using rule 20 (factor -> INT .)
    DIVIDE          reduce using rule 20 (factor -> INT .)
    PLUS            reduce using rule 20 (factor -> INT .)
    MINUS           reduce using rule 20 (factor -> INT .)
    $end            reduce using rule 20 (factor -> INT .)
    PARANCLOSE      reduce using rule 20 (factor -> INT .)
    COLON           reduce using rule 20 (factor -> INT .)


state 18

    (21) factor -> FLOAT .

    MULTIPLY        reduce using rule 21 (factor -> FLOAT .)
    DIVIDE          reduce using rule 21 (factor -> FLOAT .)
    PLUS            reduce using rule 21 (factor -> FLOAT .)
    MINUS           reduce using rule 21 (factor -> FLOAT .)
    $end            reduce using rule 21 (factor -> FLOAT .)
    PARANCLOSE      reduce using rule 21 (factor -> FLOAT .)
    COLON           reduce using rule 21 (factor -> FLOAT .)


state 19

    (8) expression -> expression PLUS . term
    (17) term -> . term MULTIPLY factor
    (18) term -> . term DIVIDE factor
    (19) term -> . factor
    (20) factor -> . INT
    (21) factor -> . FLOAT
    (22) factor -> . PARANOPEN expression PARANCLOSE

    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    PARANOPEN       shift and go to state 6

    term                           shift and go to state 44
    factor                         shift and go to state 4

state 20

    (13) expression -> expression MINUS . term
    (17) term -> . term MULTIPLY factor
    (18) term -> . term DIVIDE factor
    (19) term -> . factor
    (20) factor -> . INT
    (21) factor -> . FLOAT
    (22) factor -> . PARANOPEN expression PARANCLOSE

    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    PARANOPEN       shift and go to state 6

    term                           shift and go to state 45
    factor                         shift and go to state 4

state 21

    (1) expression -> ID EQUAL . expression
    (2) expression -> ID EQUAL . EMP_LIST
    (3) expression -> ID EQUAL . EMP_TUPLE
    (4) expression -> ID EQUAL . EMP_SET
    (5) expression -> ID EQUAL . STR_CONST
    (6) expression -> ID EQUAL . ID
    (1) expression -> . ID EQUAL expression
    (2) expression -> . ID EQUAL EMP_LIST
    (3) expression -> . ID EQUAL EMP_TUPLE
    (4) expression -> . ID EQUAL EMP_SET
    (5) expression -> . ID EQUAL STR_CONST
    (6) expression -> . ID EQUAL ID
    (7) expression -> . ID PLUS EQUAL term
    (8) expression -> . expression PLUS term
    (9) expression -> . ID PLUS factor
    (10) expression -> . PRINT PARANOPEN STR_CONST PARANCLOSE
    (11) expression -> . PRINT PARANOPEN ID PARANCLOSE
    (12) expression -> . PRINT PARANOPEN term PARANCLOSE
    (13) expression -> . expression MINUS term
    (14) expression -> . ID MINUS EQUAL term
    (15) expression -> . MINUS term
    (16) expression -> . term
    (23) expression -> . whileloop
    (24) expression -> . forloop
    (25) expression -> . forloop2
    (26) expression -> . whileloop2
    (75) expression -> . LEVEL2 ID EQUAL expression
    (76) expression -> . LEVEL2 ID EQUAL ID
    (77) expression -> . LEVEL2 ID EQUAL STR_CONST
    (78) expression -> . LEVEL1 ID EQUAL expression
    (79) expression -> . LEVEL1 ID EQUAL ID
    (80) expression -> . LEVEL1 ID EQUAL STR_CONST
    (81) expression -> . LEVEL2 PRINT PARANOPEN STR_CONST PARANCLOSE
    (82) expression -> . LEVEL2 PRINT PARANOPEN ID PARANCLOSE
    (83) expression -> . LEVEL2 PRINT PARANOPEN term PARANCLOSE
    (84) expression -> . LEVEL1 PRINT PARANOPEN STR_CONST PARANCLOSE
    (85) expression -> . LEVEL1 PRINT PARANOPEN ID PARANCLOSE
    (86) expression -> . LEVEL1 PRINT PARANOPEN term PARANCLOSE
    (87) expression -> .
    (88) expression -> . HASH expression
    (89) expression -> . HASH ID
    (90) expression -> . HASH STR_CONST
    (17) term -> . term MULTIPLY factor
    (18) term -> . term DIVIDE factor
    (19) term -> . factor
    (46) whileloop -> . WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (47) whileloop -> . WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (48) whileloop -> . WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (49) whileloop -> . WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (50) whileloop -> . WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (51) whileloop -> . WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (52) whileloop -> . WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (53) whileloop -> . WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (54) whileloop -> . WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (55) whileloop -> . WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (56) whileloop -> . WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (57) whileloop -> . WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (58) whileloop -> . WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (59) whileloop -> . WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (60) whileloop -> . WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (61) whileloop -> . WHILE BOOL COLON
    (62) whileloop -> . WHILE STR_CONST COLON
    (63) whileloop -> . WHILE factor COLON
    (64) whileloop -> . WHILE ID COLON
    (70) forloop -> . FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (71) forloop -> . FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (72) forloop -> . FOR ID IN STR_CONST COLON
    (73) forloop -> . FOR ID IN ID COLON
    (74) forloop -> . FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (65) forloop2 -> . LEVEL1 FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (66) forloop2 -> . LEVEL1 FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (67) forloop2 -> . LEVEL1 FOR ID IN STR_CONST COLON
    (68) forloop2 -> . LEVEL1 FOR ID IN ID COLON
    (69) forloop2 -> . LEVEL1 FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (27) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (28) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (29) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (30) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (31) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (32) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (33) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (34) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (35) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (36) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (37) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (38) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (39) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (40) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (41) whileloop2 -> . WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (42) whileloop2 -> . LEVEL1 WHILE BOOL COLON
    (43) whileloop2 -> . LEVEL1 WHILE STR_CONST COLON
    (44) whileloop2 -> . LEVEL1 WHILE factor COLON
    (45) whileloop2 -> . LEVEL1 WHILE ID COLON
    (20) factor -> . INT
    (21) factor -> . FLOAT
    (22) factor -> . PARANOPEN expression PARANCLOSE

  ! shift/reduce conflict for MINUS resolved as shift
    EMP_LIST        shift and go to state 48
    EMP_TUPLE       shift and go to state 49
    EMP_SET         shift and go to state 50
    STR_CONST       shift and go to state 51
    ID              shift and go to state 46
    PRINT           shift and go to state 5
    MINUS           shift and go to state 7
    LEVEL2          shift and go to state 12
    LEVEL1          shift and go to state 13
    PLUS            reduce using rule 87 (expression -> .)
    $end            reduce using rule 87 (expression -> .)
    PARANCLOSE      reduce using rule 87 (expression -> .)
    HASH            shift and go to state 14
    WHILE           shift and go to state 15
    FOR             shift and go to state 16
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    PARANOPEN       shift and go to state 6

  ! MINUS           [ reduce using rule 87 (expression -> .) ]

    expression                     shift and go to state 47
    term                           shift and go to state 3
    factor                         shift and go to state 4
    whileloop                      shift and go to state 8
    forloop                        shift and go to state 9
    forloop2                       shift and go to state 10
    whileloop2                     shift and go to state 11

state 22

    (7) expression -> ID PLUS . EQUAL term
    (9) expression -> ID PLUS . factor
    (20) factor -> . INT
    (21) factor -> . FLOAT
    (22) factor -> . PARANOPEN expression PARANCLOSE

    EQUAL           shift and go to state 52
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    PARANOPEN       shift and go to state 6

    factor                         shift and go to state 53

state 23

    (14) expression -> ID MINUS . EQUAL term

    EQUAL           shift and go to state 54


state 24

    (17) term -> term MULTIPLY . factor
    (20) factor -> . INT
    (21) factor -> . FLOAT
    (22) factor -> . PARANOPEN expression PARANCLOSE

    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    PARANOPEN       shift and go to state 6

    factor                         shift and go to state 55

state 25

    (18) term -> term DIVIDE . factor
    (20) factor -> . INT
    (21) factor -> . FLOAT
    (22) factor -> . PARANOPEN expression PARANCLOSE

    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    PARANOPEN       shift and go to state 6

    factor                         shift and go to state 56

state 26

    (10) expression -> PRINT PARANOPEN . STR_CONST PARANCLOSE
    (11) expression -> PRINT PARANOPEN . ID PARANCLOSE
    (12) expression -> PRINT PARANOPEN . term PARANCLOSE
    (17) term -> . term MULTIPLY factor
    (18) term -> . term DIVIDE factor
    (19) term -> . factor
    (20) factor -> . INT
    (21) factor -> . FLOAT
    (22) factor -> . PARANOPEN expression PARANCLOSE

    STR_CONST       shift and go to state 57
    ID              shift and go to state 58
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    PARANOPEN       shift and go to state 6

    term                           shift and go to state 59
    factor                         shift and go to state 4

state 27

    (22) factor -> PARANOPEN expression . PARANCLOSE
    (8) expression -> expression . PLUS term
    (13) expression -> expression . MINUS term

    PARANCLOSE      shift and go to state 60
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20


state 28

    (15) expression -> MINUS term .
    (17) term -> term . MULTIPLY factor
    (18) term -> term . DIVIDE factor

    PLUS            reduce using rule 15 (expression -> MINUS term .)
    MINUS           reduce using rule 15 (expression -> MINUS term .)
    $end            reduce using rule 15 (expression -> MINUS term .)
    PARANCLOSE      reduce using rule 15 (expression -> MINUS term .)
    MULTIPLY        shift and go to state 24
    DIVIDE          shift and go to state 25


state 29

    (75) expression -> LEVEL2 ID . EQUAL expression
    (76) expression -> LEVEL2 ID . EQUAL ID
    (77) expression -> LEVEL2 ID . EQUAL STR_CONST

    EQUAL           shift and go to state 61


state 30

    (81) expression -> LEVEL2 PRINT . PARANOPEN STR_CONST PARANCLOSE
    (82) expression -> LEVEL2 PRINT . PARANOPEN ID PARANCLOSE
    (83) expression -> LEVEL2 PRINT . PARANOPEN term PARANCLOSE

    PARANOPEN       shift and go to state 62


state 31

    (78) expression -> LEVEL1 ID . EQUAL expression
    (79) expression -> LEVEL1 ID . EQUAL ID
    (80) expression -> LEVEL1 ID . EQUAL STR_CONST

    EQUAL           shift and go to state 63


state 32

    (84) expression -> LEVEL1 PRINT . PARANOPEN STR_CONST PARANCLOSE
    (85) expression -> LEVEL1 PRINT . PARANOPEN ID PARANCLOSE
    (86) expression -> LEVEL1 PRINT . PARANOPEN term PARANCLOSE

    PARANOPEN       shift and go to state 64


state 33

    (65) forloop2 -> LEVEL1 FOR . ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (66) forloop2 -> LEVEL1 FOR . ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (67) forloop2 -> LEVEL1 FOR . ID IN STR_CONST COLON
    (68) forloop2 -> LEVEL1 FOR . ID IN ID COLON
    (69) forloop2 -> LEVEL1 FOR . ID IN PARANOPEN STR_CONST PARANCLOSE COLON

    ID              shift and go to state 65


state 34

    (27) whileloop2 -> LEVEL1 WHILE . PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (28) whileloop2 -> LEVEL1 WHILE . PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (29) whileloop2 -> LEVEL1 WHILE . PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (30) whileloop2 -> LEVEL1 WHILE . PARANOPEN ID GREATER factor PARANCLOSE COLON
    (31) whileloop2 -> LEVEL1 WHILE . PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (32) whileloop2 -> LEVEL1 WHILE . PARANOPEN ID GREATER ID PARANCLOSE COLON
    (33) whileloop2 -> LEVEL1 WHILE . PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (34) whileloop2 -> LEVEL1 WHILE . PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (35) whileloop2 -> LEVEL1 WHILE . PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (36) whileloop2 -> LEVEL1 WHILE . PARANOPEN ID LESSER factor PARANCLOSE COLON
    (37) whileloop2 -> LEVEL1 WHILE . PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (38) whileloop2 -> LEVEL1 WHILE . PARANOPEN ID LESSER ID PARANCLOSE COLON
    (39) whileloop2 -> LEVEL1 WHILE . PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (40) whileloop2 -> LEVEL1 WHILE . PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (42) whileloop2 -> LEVEL1 WHILE . BOOL COLON
    (43) whileloop2 -> LEVEL1 WHILE . STR_CONST COLON
    (44) whileloop2 -> LEVEL1 WHILE . factor COLON
    (45) whileloop2 -> LEVEL1 WHILE . ID COLON
    (20) factor -> . INT
    (21) factor -> . FLOAT
    (22) factor -> . PARANOPEN expression PARANCLOSE

    PARANOPEN       shift and go to state 66
    BOOL            shift and go to state 70
    STR_CONST       shift and go to state 69
    ID              shift and go to state 67
    INT             shift and go to state 17
    FLOAT           shift and go to state 18

    factor                         shift and go to state 68

state 35

    (88) expression -> HASH expression .
    (8) expression -> expression . PLUS term
    (13) expression -> expression . MINUS term

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    $end            reduce using rule 88 (expression -> HASH expression .)
    PARANCLOSE      reduce using rule 88 (expression -> HASH expression .)
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20

  ! PLUS            [ reduce using rule 88 (expression -> HASH expression .) ]
  ! MINUS           [ reduce using rule 88 (expression -> HASH expression .) ]


state 36

    (89) expression -> HASH ID .
    (1) expression -> ID . EQUAL expression
    (2) expression -> ID . EQUAL EMP_LIST
    (3) expression -> ID . EQUAL EMP_TUPLE
    (4) expression -> ID . EQUAL EMP_SET
    (5) expression -> ID . EQUAL STR_CONST
    (6) expression -> ID . EQUAL ID
    (7) expression -> ID . PLUS EQUAL term
    (9) expression -> ID . PLUS factor
    (14) expression -> ID . MINUS EQUAL term

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    $end            reduce using rule 89 (expression -> HASH ID .)
    PARANCLOSE      reduce using rule 89 (expression -> HASH ID .)
    EQUAL           shift and go to state 21
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23

  ! PLUS            [ reduce using rule 89 (expression -> HASH ID .) ]
  ! MINUS           [ reduce using rule 89 (expression -> HASH ID .) ]


state 37

    (90) expression -> HASH STR_CONST .

    PLUS            reduce using rule 90 (expression -> HASH STR_CONST .)
    MINUS           reduce using rule 90 (expression -> HASH STR_CONST .)
    $end            reduce using rule 90 (expression -> HASH STR_CONST .)
    PARANCLOSE      reduce using rule 90 (expression -> HASH STR_CONST .)


state 38

    (46) whileloop -> WHILE PARANOPEN . ID EQUAL factor PARANCLOSE COLON
    (47) whileloop -> WHILE PARANOPEN . ID EQUAL STR_CONST PARANCLOSE COLON
    (48) whileloop -> WHILE PARANOPEN . ID EQUAL ID PARANCLOSE COLON
    (49) whileloop -> WHILE PARANOPEN . ID GREATER factor PARANCLOSE COLON
    (50) whileloop -> WHILE PARANOPEN . ID GREATER STR_CONST PARANCLOSE COLON
    (51) whileloop -> WHILE PARANOPEN . ID GREATER ID PARANCLOSE COLON
    (52) whileloop -> WHILE PARANOPEN . ID GREATEREQ factor PARANCLOSE COLON
    (53) whileloop -> WHILE PARANOPEN . ID GREATEREQ STR_CONST PARANCLOSE COLON
    (54) whileloop -> WHILE PARANOPEN . ID GREATEREQ ID PARANCLOSE COLON
    (55) whileloop -> WHILE PARANOPEN . ID LESSER factor PARANCLOSE COLON
    (56) whileloop -> WHILE PARANOPEN . ID LESSER STR_CONST PARANCLOSE COLON
    (57) whileloop -> WHILE PARANOPEN . ID LESSER ID PARANCLOSE COLON
    (58) whileloop -> WHILE PARANOPEN . ID LESSEREQ factor PARANCLOSE COLON
    (59) whileloop -> WHILE PARANOPEN . ID LESSEREQ STR_CONST PARANCLOSE COLON
    (60) whileloop -> WHILE PARANOPEN . ID LESSEREQ ID PARANCLOSE COLON
    (41) whileloop2 -> WHILE PARANOPEN . ID LESSEREQ ID PARANCLOSE COLON
    (22) factor -> PARANOPEN . expression PARANCLOSE
    (1) expression -> . ID EQUAL expression
    (2) expression -> . ID EQUAL EMP_LIST
    (3) expression -> . ID EQUAL EMP_TUPLE
    (4) expression -> . ID EQUAL EMP_SET
    (5) expression -> . ID EQUAL STR_CONST
    (6) expression -> . ID EQUAL ID
    (7) expression -> . ID PLUS EQUAL term
    (8) expression -> . expression PLUS term
    (9) expression -> . ID PLUS factor
    (10) expression -> . PRINT PARANOPEN STR_CONST PARANCLOSE
    (11) expression -> . PRINT PARANOPEN ID PARANCLOSE
    (12) expression -> . PRINT PARANOPEN term PARANCLOSE
    (13) expression -> . expression MINUS term
    (14) expression -> . ID MINUS EQUAL term
    (15) expression -> . MINUS term
    (16) expression -> . term
    (23) expression -> . whileloop
    (24) expression -> . forloop
    (25) expression -> . forloop2
    (26) expression -> . whileloop2
    (75) expression -> . LEVEL2 ID EQUAL expression
    (76) expression -> . LEVEL2 ID EQUAL ID
    (77) expression -> . LEVEL2 ID EQUAL STR_CONST
    (78) expression -> . LEVEL1 ID EQUAL expression
    (79) expression -> . LEVEL1 ID EQUAL ID
    (80) expression -> . LEVEL1 ID EQUAL STR_CONST
    (81) expression -> . LEVEL2 PRINT PARANOPEN STR_CONST PARANCLOSE
    (82) expression -> . LEVEL2 PRINT PARANOPEN ID PARANCLOSE
    (83) expression -> . LEVEL2 PRINT PARANOPEN term PARANCLOSE
    (84) expression -> . LEVEL1 PRINT PARANOPEN STR_CONST PARANCLOSE
    (85) expression -> . LEVEL1 PRINT PARANOPEN ID PARANCLOSE
    (86) expression -> . LEVEL1 PRINT PARANOPEN term PARANCLOSE
    (87) expression -> .
    (88) expression -> . HASH expression
    (89) expression -> . HASH ID
    (90) expression -> . HASH STR_CONST
    (17) term -> . term MULTIPLY factor
    (18) term -> . term DIVIDE factor
    (19) term -> . factor
    (46) whileloop -> . WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (47) whileloop -> . WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (48) whileloop -> . WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (49) whileloop -> . WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (50) whileloop -> . WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (51) whileloop -> . WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (52) whileloop -> . WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (53) whileloop -> . WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (54) whileloop -> . WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (55) whileloop -> . WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (56) whileloop -> . WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (57) whileloop -> . WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (58) whileloop -> . WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (59) whileloop -> . WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (60) whileloop -> . WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (61) whileloop -> . WHILE BOOL COLON
    (62) whileloop -> . WHILE STR_CONST COLON
    (63) whileloop -> . WHILE factor COLON
    (64) whileloop -> . WHILE ID COLON
    (70) forloop -> . FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (71) forloop -> . FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (72) forloop -> . FOR ID IN STR_CONST COLON
    (73) forloop -> . FOR ID IN ID COLON
    (74) forloop -> . FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (65) forloop2 -> . LEVEL1 FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (66) forloop2 -> . LEVEL1 FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (67) forloop2 -> . LEVEL1 FOR ID IN STR_CONST COLON
    (68) forloop2 -> . LEVEL1 FOR ID IN ID COLON
    (69) forloop2 -> . LEVEL1 FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (27) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (28) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (29) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (30) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (31) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (32) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (33) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (34) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (35) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (36) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (37) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (38) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (39) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (40) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (41) whileloop2 -> . WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (42) whileloop2 -> . LEVEL1 WHILE BOOL COLON
    (43) whileloop2 -> . LEVEL1 WHILE STR_CONST COLON
    (44) whileloop2 -> . LEVEL1 WHILE factor COLON
    (45) whileloop2 -> . LEVEL1 WHILE ID COLON
    (20) factor -> . INT
    (21) factor -> . FLOAT
    (22) factor -> . PARANOPEN expression PARANCLOSE

  ! shift/reduce conflict for MINUS resolved as shift
    ID              shift and go to state 71
    PRINT           shift and go to state 5
    MINUS           shift and go to state 7
    LEVEL2          shift and go to state 12
    LEVEL1          shift and go to state 13
    PARANCLOSE      reduce using rule 87 (expression -> .)
    PLUS            reduce using rule 87 (expression -> .)
    HASH            shift and go to state 14
    WHILE           shift and go to state 15
    FOR             shift and go to state 16
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    PARANOPEN       shift and go to state 6

  ! MINUS           [ reduce using rule 87 (expression -> .) ]

    factor                         shift and go to state 4
    expression                     shift and go to state 27
    term                           shift and go to state 3
    whileloop                      shift and go to state 8
    forloop                        shift and go to state 9
    forloop2                       shift and go to state 10
    whileloop2                     shift and go to state 11

state 39

    (64) whileloop -> WHILE ID . COLON

    COLON           shift and go to state 72


state 40

    (63) whileloop -> WHILE factor . COLON

    COLON           shift and go to state 73


state 41

    (62) whileloop -> WHILE STR_CONST . COLON

    COLON           shift and go to state 74


state 42

    (61) whileloop -> WHILE BOOL . COLON

    COLON           shift and go to state 75


state 43

    (70) forloop -> FOR ID . IN RANGE PARANOPEN term PARANCLOSE COLON
    (71) forloop -> FOR ID . IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (72) forloop -> FOR ID . IN STR_CONST COLON
    (73) forloop -> FOR ID . IN ID COLON
    (74) forloop -> FOR ID . IN PARANOPEN STR_CONST PARANCLOSE COLON

    IN              shift and go to state 76


state 44

    (8) expression -> expression PLUS term .
    (17) term -> term . MULTIPLY factor
    (18) term -> term . DIVIDE factor

    PLUS            reduce using rule 8 (expression -> expression PLUS term .)
    MINUS           reduce using rule 8 (expression -> expression PLUS term .)
    $end            reduce using rule 8 (expression -> expression PLUS term .)
    PARANCLOSE      reduce using rule 8 (expression -> expression PLUS term .)
    MULTIPLY        shift and go to state 24
    DIVIDE          shift and go to state 25


state 45

    (13) expression -> expression MINUS term .
    (17) term -> term . MULTIPLY factor
    (18) term -> term . DIVIDE factor

    PLUS            reduce using rule 13 (expression -> expression MINUS term .)
    MINUS           reduce using rule 13 (expression -> expression MINUS term .)
    $end            reduce using rule 13 (expression -> expression MINUS term .)
    PARANCLOSE      reduce using rule 13 (expression -> expression MINUS term .)
    MULTIPLY        shift and go to state 24
    DIVIDE          shift and go to state 25


state 46

    (6) expression -> ID EQUAL ID .
    (1) expression -> ID . EQUAL expression
    (2) expression -> ID . EQUAL EMP_LIST
    (3) expression -> ID . EQUAL EMP_TUPLE
    (4) expression -> ID . EQUAL EMP_SET
    (5) expression -> ID . EQUAL STR_CONST
    (6) expression -> ID . EQUAL ID
    (7) expression -> ID . PLUS EQUAL term
    (9) expression -> ID . PLUS factor
    (14) expression -> ID . MINUS EQUAL term

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    $end            reduce using rule 6 (expression -> ID EQUAL ID .)
    PARANCLOSE      reduce using rule 6 (expression -> ID EQUAL ID .)
    EQUAL           shift and go to state 21
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23

  ! PLUS            [ reduce using rule 6 (expression -> ID EQUAL ID .) ]
  ! MINUS           [ reduce using rule 6 (expression -> ID EQUAL ID .) ]


state 47

    (1) expression -> ID EQUAL expression .
    (8) expression -> expression . PLUS term
    (13) expression -> expression . MINUS term

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    $end            reduce using rule 1 (expression -> ID EQUAL expression .)
    PARANCLOSE      reduce using rule 1 (expression -> ID EQUAL expression .)
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20

  ! PLUS            [ reduce using rule 1 (expression -> ID EQUAL expression .) ]
  ! MINUS           [ reduce using rule 1 (expression -> ID EQUAL expression .) ]


state 48

    (2) expression -> ID EQUAL EMP_LIST .

    PLUS            reduce using rule 2 (expression -> ID EQUAL EMP_LIST .)
    MINUS           reduce using rule 2 (expression -> ID EQUAL EMP_LIST .)
    $end            reduce using rule 2 (expression -> ID EQUAL EMP_LIST .)
    PARANCLOSE      reduce using rule 2 (expression -> ID EQUAL EMP_LIST .)


state 49

    (3) expression -> ID EQUAL EMP_TUPLE .

    PLUS            reduce using rule 3 (expression -> ID EQUAL EMP_TUPLE .)
    MINUS           reduce using rule 3 (expression -> ID EQUAL EMP_TUPLE .)
    $end            reduce using rule 3 (expression -> ID EQUAL EMP_TUPLE .)
    PARANCLOSE      reduce using rule 3 (expression -> ID EQUAL EMP_TUPLE .)


state 50

    (4) expression -> ID EQUAL EMP_SET .

    PLUS            reduce using rule 4 (expression -> ID EQUAL EMP_SET .)
    MINUS           reduce using rule 4 (expression -> ID EQUAL EMP_SET .)
    $end            reduce using rule 4 (expression -> ID EQUAL EMP_SET .)
    PARANCLOSE      reduce using rule 4 (expression -> ID EQUAL EMP_SET .)


state 51

    (5) expression -> ID EQUAL STR_CONST .

    PLUS            reduce using rule 5 (expression -> ID EQUAL STR_CONST .)
    MINUS           reduce using rule 5 (expression -> ID EQUAL STR_CONST .)
    $end            reduce using rule 5 (expression -> ID EQUAL STR_CONST .)
    PARANCLOSE      reduce using rule 5 (expression -> ID EQUAL STR_CONST .)


state 52

    (7) expression -> ID PLUS EQUAL . term
    (17) term -> . term MULTIPLY factor
    (18) term -> . term DIVIDE factor
    (19) term -> . factor
    (20) factor -> . INT
    (21) factor -> . FLOAT
    (22) factor -> . PARANOPEN expression PARANCLOSE

    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    PARANOPEN       shift and go to state 6

    term                           shift and go to state 77
    factor                         shift and go to state 4

state 53

    (9) expression -> ID PLUS factor .

    PLUS            reduce using rule 9 (expression -> ID PLUS factor .)
    MINUS           reduce using rule 9 (expression -> ID PLUS factor .)
    $end            reduce using rule 9 (expression -> ID PLUS factor .)
    PARANCLOSE      reduce using rule 9 (expression -> ID PLUS factor .)


state 54

    (14) expression -> ID MINUS EQUAL . term
    (17) term -> . term MULTIPLY factor
    (18) term -> . term DIVIDE factor
    (19) term -> . factor
    (20) factor -> . INT
    (21) factor -> . FLOAT
    (22) factor -> . PARANOPEN expression PARANCLOSE

    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    PARANOPEN       shift and go to state 6

    term                           shift and go to state 78
    factor                         shift and go to state 4

state 55

    (17) term -> term MULTIPLY factor .

    MULTIPLY        reduce using rule 17 (term -> term MULTIPLY factor .)
    DIVIDE          reduce using rule 17 (term -> term MULTIPLY factor .)
    PLUS            reduce using rule 17 (term -> term MULTIPLY factor .)
    MINUS           reduce using rule 17 (term -> term MULTIPLY factor .)
    $end            reduce using rule 17 (term -> term MULTIPLY factor .)
    PARANCLOSE      reduce using rule 17 (term -> term MULTIPLY factor .)


state 56

    (18) term -> term DIVIDE factor .

    MULTIPLY        reduce using rule 18 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 18 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 18 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 18 (term -> term DIVIDE factor .)
    $end            reduce using rule 18 (term -> term DIVIDE factor .)
    PARANCLOSE      reduce using rule 18 (term -> term DIVIDE factor .)


state 57

    (10) expression -> PRINT PARANOPEN STR_CONST . PARANCLOSE

    PARANCLOSE      shift and go to state 79


state 58

    (11) expression -> PRINT PARANOPEN ID . PARANCLOSE

    PARANCLOSE      shift and go to state 80


state 59

    (12) expression -> PRINT PARANOPEN term . PARANCLOSE
    (17) term -> term . MULTIPLY factor
    (18) term -> term . DIVIDE factor

    PARANCLOSE      shift and go to state 81
    MULTIPLY        shift and go to state 24
    DIVIDE          shift and go to state 25


state 60

    (22) factor -> PARANOPEN expression PARANCLOSE .

    MULTIPLY        reduce using rule 22 (factor -> PARANOPEN expression PARANCLOSE .)
    DIVIDE          reduce using rule 22 (factor -> PARANOPEN expression PARANCLOSE .)
    PLUS            reduce using rule 22 (factor -> PARANOPEN expression PARANCLOSE .)
    MINUS           reduce using rule 22 (factor -> PARANOPEN expression PARANCLOSE .)
    $end            reduce using rule 22 (factor -> PARANOPEN expression PARANCLOSE .)
    PARANCLOSE      reduce using rule 22 (factor -> PARANOPEN expression PARANCLOSE .)
    COLON           reduce using rule 22 (factor -> PARANOPEN expression PARANCLOSE .)


state 61

    (75) expression -> LEVEL2 ID EQUAL . expression
    (76) expression -> LEVEL2 ID EQUAL . ID
    (77) expression -> LEVEL2 ID EQUAL . STR_CONST
    (1) expression -> . ID EQUAL expression
    (2) expression -> . ID EQUAL EMP_LIST
    (3) expression -> . ID EQUAL EMP_TUPLE
    (4) expression -> . ID EQUAL EMP_SET
    (5) expression -> . ID EQUAL STR_CONST
    (6) expression -> . ID EQUAL ID
    (7) expression -> . ID PLUS EQUAL term
    (8) expression -> . expression PLUS term
    (9) expression -> . ID PLUS factor
    (10) expression -> . PRINT PARANOPEN STR_CONST PARANCLOSE
    (11) expression -> . PRINT PARANOPEN ID PARANCLOSE
    (12) expression -> . PRINT PARANOPEN term PARANCLOSE
    (13) expression -> . expression MINUS term
    (14) expression -> . ID MINUS EQUAL term
    (15) expression -> . MINUS term
    (16) expression -> . term
    (23) expression -> . whileloop
    (24) expression -> . forloop
    (25) expression -> . forloop2
    (26) expression -> . whileloop2
    (75) expression -> . LEVEL2 ID EQUAL expression
    (76) expression -> . LEVEL2 ID EQUAL ID
    (77) expression -> . LEVEL2 ID EQUAL STR_CONST
    (78) expression -> . LEVEL1 ID EQUAL expression
    (79) expression -> . LEVEL1 ID EQUAL ID
    (80) expression -> . LEVEL1 ID EQUAL STR_CONST
    (81) expression -> . LEVEL2 PRINT PARANOPEN STR_CONST PARANCLOSE
    (82) expression -> . LEVEL2 PRINT PARANOPEN ID PARANCLOSE
    (83) expression -> . LEVEL2 PRINT PARANOPEN term PARANCLOSE
    (84) expression -> . LEVEL1 PRINT PARANOPEN STR_CONST PARANCLOSE
    (85) expression -> . LEVEL1 PRINT PARANOPEN ID PARANCLOSE
    (86) expression -> . LEVEL1 PRINT PARANOPEN term PARANCLOSE
    (87) expression -> .
    (88) expression -> . HASH expression
    (89) expression -> . HASH ID
    (90) expression -> . HASH STR_CONST
    (17) term -> . term MULTIPLY factor
    (18) term -> . term DIVIDE factor
    (19) term -> . factor
    (46) whileloop -> . WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (47) whileloop -> . WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (48) whileloop -> . WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (49) whileloop -> . WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (50) whileloop -> . WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (51) whileloop -> . WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (52) whileloop -> . WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (53) whileloop -> . WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (54) whileloop -> . WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (55) whileloop -> . WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (56) whileloop -> . WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (57) whileloop -> . WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (58) whileloop -> . WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (59) whileloop -> . WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (60) whileloop -> . WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (61) whileloop -> . WHILE BOOL COLON
    (62) whileloop -> . WHILE STR_CONST COLON
    (63) whileloop -> . WHILE factor COLON
    (64) whileloop -> . WHILE ID COLON
    (70) forloop -> . FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (71) forloop -> . FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (72) forloop -> . FOR ID IN STR_CONST COLON
    (73) forloop -> . FOR ID IN ID COLON
    (74) forloop -> . FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (65) forloop2 -> . LEVEL1 FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (66) forloop2 -> . LEVEL1 FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (67) forloop2 -> . LEVEL1 FOR ID IN STR_CONST COLON
    (68) forloop2 -> . LEVEL1 FOR ID IN ID COLON
    (69) forloop2 -> . LEVEL1 FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (27) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (28) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (29) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (30) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (31) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (32) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (33) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (34) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (35) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (36) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (37) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (38) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (39) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (40) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (41) whileloop2 -> . WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (42) whileloop2 -> . LEVEL1 WHILE BOOL COLON
    (43) whileloop2 -> . LEVEL1 WHILE STR_CONST COLON
    (44) whileloop2 -> . LEVEL1 WHILE factor COLON
    (45) whileloop2 -> . LEVEL1 WHILE ID COLON
    (20) factor -> . INT
    (21) factor -> . FLOAT
    (22) factor -> . PARANOPEN expression PARANCLOSE

  ! shift/reduce conflict for MINUS resolved as shift
    ID              shift and go to state 82
    STR_CONST       shift and go to state 84
    PRINT           shift and go to state 5
    MINUS           shift and go to state 7
    LEVEL2          shift and go to state 12
    LEVEL1          shift and go to state 13
    PLUS            reduce using rule 87 (expression -> .)
    $end            reduce using rule 87 (expression -> .)
    PARANCLOSE      reduce using rule 87 (expression -> .)
    HASH            shift and go to state 14
    WHILE           shift and go to state 15
    FOR             shift and go to state 16
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    PARANOPEN       shift and go to state 6

  ! MINUS           [ reduce using rule 87 (expression -> .) ]

    expression                     shift and go to state 83
    term                           shift and go to state 3
    factor                         shift and go to state 4
    whileloop                      shift and go to state 8
    forloop                        shift and go to state 9
    forloop2                       shift and go to state 10
    whileloop2                     shift and go to state 11

state 62

    (81) expression -> LEVEL2 PRINT PARANOPEN . STR_CONST PARANCLOSE
    (82) expression -> LEVEL2 PRINT PARANOPEN . ID PARANCLOSE
    (83) expression -> LEVEL2 PRINT PARANOPEN . term PARANCLOSE
    (17) term -> . term MULTIPLY factor
    (18) term -> . term DIVIDE factor
    (19) term -> . factor
    (20) factor -> . INT
    (21) factor -> . FLOAT
    (22) factor -> . PARANOPEN expression PARANCLOSE

    STR_CONST       shift and go to state 85
    ID              shift and go to state 86
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    PARANOPEN       shift and go to state 6

    term                           shift and go to state 87
    factor                         shift and go to state 4

state 63

    (78) expression -> LEVEL1 ID EQUAL . expression
    (79) expression -> LEVEL1 ID EQUAL . ID
    (80) expression -> LEVEL1 ID EQUAL . STR_CONST
    (1) expression -> . ID EQUAL expression
    (2) expression -> . ID EQUAL EMP_LIST
    (3) expression -> . ID EQUAL EMP_TUPLE
    (4) expression -> . ID EQUAL EMP_SET
    (5) expression -> . ID EQUAL STR_CONST
    (6) expression -> . ID EQUAL ID
    (7) expression -> . ID PLUS EQUAL term
    (8) expression -> . expression PLUS term
    (9) expression -> . ID PLUS factor
    (10) expression -> . PRINT PARANOPEN STR_CONST PARANCLOSE
    (11) expression -> . PRINT PARANOPEN ID PARANCLOSE
    (12) expression -> . PRINT PARANOPEN term PARANCLOSE
    (13) expression -> . expression MINUS term
    (14) expression -> . ID MINUS EQUAL term
    (15) expression -> . MINUS term
    (16) expression -> . term
    (23) expression -> . whileloop
    (24) expression -> . forloop
    (25) expression -> . forloop2
    (26) expression -> . whileloop2
    (75) expression -> . LEVEL2 ID EQUAL expression
    (76) expression -> . LEVEL2 ID EQUAL ID
    (77) expression -> . LEVEL2 ID EQUAL STR_CONST
    (78) expression -> . LEVEL1 ID EQUAL expression
    (79) expression -> . LEVEL1 ID EQUAL ID
    (80) expression -> . LEVEL1 ID EQUAL STR_CONST
    (81) expression -> . LEVEL2 PRINT PARANOPEN STR_CONST PARANCLOSE
    (82) expression -> . LEVEL2 PRINT PARANOPEN ID PARANCLOSE
    (83) expression -> . LEVEL2 PRINT PARANOPEN term PARANCLOSE
    (84) expression -> . LEVEL1 PRINT PARANOPEN STR_CONST PARANCLOSE
    (85) expression -> . LEVEL1 PRINT PARANOPEN ID PARANCLOSE
    (86) expression -> . LEVEL1 PRINT PARANOPEN term PARANCLOSE
    (87) expression -> .
    (88) expression -> . HASH expression
    (89) expression -> . HASH ID
    (90) expression -> . HASH STR_CONST
    (17) term -> . term MULTIPLY factor
    (18) term -> . term DIVIDE factor
    (19) term -> . factor
    (46) whileloop -> . WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (47) whileloop -> . WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (48) whileloop -> . WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (49) whileloop -> . WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (50) whileloop -> . WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (51) whileloop -> . WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (52) whileloop -> . WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (53) whileloop -> . WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (54) whileloop -> . WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (55) whileloop -> . WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (56) whileloop -> . WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (57) whileloop -> . WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (58) whileloop -> . WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (59) whileloop -> . WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (60) whileloop -> . WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (61) whileloop -> . WHILE BOOL COLON
    (62) whileloop -> . WHILE STR_CONST COLON
    (63) whileloop -> . WHILE factor COLON
    (64) whileloop -> . WHILE ID COLON
    (70) forloop -> . FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (71) forloop -> . FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (72) forloop -> . FOR ID IN STR_CONST COLON
    (73) forloop -> . FOR ID IN ID COLON
    (74) forloop -> . FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (65) forloop2 -> . LEVEL1 FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (66) forloop2 -> . LEVEL1 FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (67) forloop2 -> . LEVEL1 FOR ID IN STR_CONST COLON
    (68) forloop2 -> . LEVEL1 FOR ID IN ID COLON
    (69) forloop2 -> . LEVEL1 FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (27) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (28) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (29) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (30) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (31) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (32) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (33) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (34) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (35) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (36) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (37) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (38) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (39) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (40) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (41) whileloop2 -> . WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (42) whileloop2 -> . LEVEL1 WHILE BOOL COLON
    (43) whileloop2 -> . LEVEL1 WHILE STR_CONST COLON
    (44) whileloop2 -> . LEVEL1 WHILE factor COLON
    (45) whileloop2 -> . LEVEL1 WHILE ID COLON
    (20) factor -> . INT
    (21) factor -> . FLOAT
    (22) factor -> . PARANOPEN expression PARANCLOSE

  ! shift/reduce conflict for MINUS resolved as shift
    ID              shift and go to state 88
    STR_CONST       shift and go to state 90
    PRINT           shift and go to state 5
    MINUS           shift and go to state 7
    LEVEL2          shift and go to state 12
    LEVEL1          shift and go to state 13
    PLUS            reduce using rule 87 (expression -> .)
    $end            reduce using rule 87 (expression -> .)
    PARANCLOSE      reduce using rule 87 (expression -> .)
    HASH            shift and go to state 14
    WHILE           shift and go to state 15
    FOR             shift and go to state 16
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    PARANOPEN       shift and go to state 6

  ! MINUS           [ reduce using rule 87 (expression -> .) ]

    expression                     shift and go to state 89
    term                           shift and go to state 3
    factor                         shift and go to state 4
    whileloop                      shift and go to state 8
    forloop                        shift and go to state 9
    forloop2                       shift and go to state 10
    whileloop2                     shift and go to state 11

state 64

    (84) expression -> LEVEL1 PRINT PARANOPEN . STR_CONST PARANCLOSE
    (85) expression -> LEVEL1 PRINT PARANOPEN . ID PARANCLOSE
    (86) expression -> LEVEL1 PRINT PARANOPEN . term PARANCLOSE
    (17) term -> . term MULTIPLY factor
    (18) term -> . term DIVIDE factor
    (19) term -> . factor
    (20) factor -> . INT
    (21) factor -> . FLOAT
    (22) factor -> . PARANOPEN expression PARANCLOSE

    STR_CONST       shift and go to state 91
    ID              shift and go to state 92
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    PARANOPEN       shift and go to state 6

    term                           shift and go to state 93
    factor                         shift and go to state 4

state 65

    (65) forloop2 -> LEVEL1 FOR ID . IN RANGE PARANOPEN term PARANCLOSE COLON
    (66) forloop2 -> LEVEL1 FOR ID . IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (67) forloop2 -> LEVEL1 FOR ID . IN STR_CONST COLON
    (68) forloop2 -> LEVEL1 FOR ID . IN ID COLON
    (69) forloop2 -> LEVEL1 FOR ID . IN PARANOPEN STR_CONST PARANCLOSE COLON

    IN              shift and go to state 94


state 66

    (27) whileloop2 -> LEVEL1 WHILE PARANOPEN . ID EQUAL factor PARANCLOSE COLON
    (28) whileloop2 -> LEVEL1 WHILE PARANOPEN . ID EQUAL STR_CONST PARANCLOSE COLON
    (29) whileloop2 -> LEVEL1 WHILE PARANOPEN . ID EQUAL ID PARANCLOSE COLON
    (30) whileloop2 -> LEVEL1 WHILE PARANOPEN . ID GREATER factor PARANCLOSE COLON
    (31) whileloop2 -> LEVEL1 WHILE PARANOPEN . ID GREATER STR_CONST PARANCLOSE COLON
    (32) whileloop2 -> LEVEL1 WHILE PARANOPEN . ID GREATER ID PARANCLOSE COLON
    (33) whileloop2 -> LEVEL1 WHILE PARANOPEN . ID GREATEREQ factor PARANCLOSE COLON
    (34) whileloop2 -> LEVEL1 WHILE PARANOPEN . ID GREATEREQ STR_CONST PARANCLOSE COLON
    (35) whileloop2 -> LEVEL1 WHILE PARANOPEN . ID GREATEREQ ID PARANCLOSE COLON
    (36) whileloop2 -> LEVEL1 WHILE PARANOPEN . ID LESSER factor PARANCLOSE COLON
    (37) whileloop2 -> LEVEL1 WHILE PARANOPEN . ID LESSER STR_CONST PARANCLOSE COLON
    (38) whileloop2 -> LEVEL1 WHILE PARANOPEN . ID LESSER ID PARANCLOSE COLON
    (39) whileloop2 -> LEVEL1 WHILE PARANOPEN . ID LESSEREQ factor PARANCLOSE COLON
    (40) whileloop2 -> LEVEL1 WHILE PARANOPEN . ID LESSEREQ STR_CONST PARANCLOSE COLON
    (22) factor -> PARANOPEN . expression PARANCLOSE
    (1) expression -> . ID EQUAL expression
    (2) expression -> . ID EQUAL EMP_LIST
    (3) expression -> . ID EQUAL EMP_TUPLE
    (4) expression -> . ID EQUAL EMP_SET
    (5) expression -> . ID EQUAL STR_CONST
    (6) expression -> . ID EQUAL ID
    (7) expression -> . ID PLUS EQUAL term
    (8) expression -> . expression PLUS term
    (9) expression -> . ID PLUS factor
    (10) expression -> . PRINT PARANOPEN STR_CONST PARANCLOSE
    (11) expression -> . PRINT PARANOPEN ID PARANCLOSE
    (12) expression -> . PRINT PARANOPEN term PARANCLOSE
    (13) expression -> . expression MINUS term
    (14) expression -> . ID MINUS EQUAL term
    (15) expression -> . MINUS term
    (16) expression -> . term
    (23) expression -> . whileloop
    (24) expression -> . forloop
    (25) expression -> . forloop2
    (26) expression -> . whileloop2
    (75) expression -> . LEVEL2 ID EQUAL expression
    (76) expression -> . LEVEL2 ID EQUAL ID
    (77) expression -> . LEVEL2 ID EQUAL STR_CONST
    (78) expression -> . LEVEL1 ID EQUAL expression
    (79) expression -> . LEVEL1 ID EQUAL ID
    (80) expression -> . LEVEL1 ID EQUAL STR_CONST
    (81) expression -> . LEVEL2 PRINT PARANOPEN STR_CONST PARANCLOSE
    (82) expression -> . LEVEL2 PRINT PARANOPEN ID PARANCLOSE
    (83) expression -> . LEVEL2 PRINT PARANOPEN term PARANCLOSE
    (84) expression -> . LEVEL1 PRINT PARANOPEN STR_CONST PARANCLOSE
    (85) expression -> . LEVEL1 PRINT PARANOPEN ID PARANCLOSE
    (86) expression -> . LEVEL1 PRINT PARANOPEN term PARANCLOSE
    (87) expression -> .
    (88) expression -> . HASH expression
    (89) expression -> . HASH ID
    (90) expression -> . HASH STR_CONST
    (17) term -> . term MULTIPLY factor
    (18) term -> . term DIVIDE factor
    (19) term -> . factor
    (46) whileloop -> . WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (47) whileloop -> . WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (48) whileloop -> . WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (49) whileloop -> . WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (50) whileloop -> . WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (51) whileloop -> . WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (52) whileloop -> . WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (53) whileloop -> . WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (54) whileloop -> . WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (55) whileloop -> . WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (56) whileloop -> . WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (57) whileloop -> . WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (58) whileloop -> . WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (59) whileloop -> . WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (60) whileloop -> . WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (61) whileloop -> . WHILE BOOL COLON
    (62) whileloop -> . WHILE STR_CONST COLON
    (63) whileloop -> . WHILE factor COLON
    (64) whileloop -> . WHILE ID COLON
    (70) forloop -> . FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (71) forloop -> . FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (72) forloop -> . FOR ID IN STR_CONST COLON
    (73) forloop -> . FOR ID IN ID COLON
    (74) forloop -> . FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (65) forloop2 -> . LEVEL1 FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (66) forloop2 -> . LEVEL1 FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (67) forloop2 -> . LEVEL1 FOR ID IN STR_CONST COLON
    (68) forloop2 -> . LEVEL1 FOR ID IN ID COLON
    (69) forloop2 -> . LEVEL1 FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (27) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (28) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (29) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (30) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (31) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (32) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (33) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (34) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (35) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (36) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (37) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (38) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (39) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (40) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (41) whileloop2 -> . WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (42) whileloop2 -> . LEVEL1 WHILE BOOL COLON
    (43) whileloop2 -> . LEVEL1 WHILE STR_CONST COLON
    (44) whileloop2 -> . LEVEL1 WHILE factor COLON
    (45) whileloop2 -> . LEVEL1 WHILE ID COLON
    (20) factor -> . INT
    (21) factor -> . FLOAT
    (22) factor -> . PARANOPEN expression PARANCLOSE

  ! shift/reduce conflict for MINUS resolved as shift
    ID              shift and go to state 95
    PRINT           shift and go to state 5
    MINUS           shift and go to state 7
    LEVEL2          shift and go to state 12
    LEVEL1          shift and go to state 13
    PARANCLOSE      reduce using rule 87 (expression -> .)
    PLUS            reduce using rule 87 (expression -> .)
    HASH            shift and go to state 14
    WHILE           shift and go to state 15
    FOR             shift and go to state 16
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    PARANOPEN       shift and go to state 6

  ! MINUS           [ reduce using rule 87 (expression -> .) ]

    factor                         shift and go to state 4
    expression                     shift and go to state 27
    term                           shift and go to state 3
    whileloop                      shift and go to state 8
    forloop                        shift and go to state 9
    forloop2                       shift and go to state 10
    whileloop2                     shift and go to state 11

state 67

    (45) whileloop2 -> LEVEL1 WHILE ID . COLON

    COLON           shift and go to state 96


state 68

    (44) whileloop2 -> LEVEL1 WHILE factor . COLON

    COLON           shift and go to state 97


state 69

    (43) whileloop2 -> LEVEL1 WHILE STR_CONST . COLON

    COLON           shift and go to state 98


state 70

    (42) whileloop2 -> LEVEL1 WHILE BOOL . COLON

    COLON           shift and go to state 99


state 71

    (46) whileloop -> WHILE PARANOPEN ID . EQUAL factor PARANCLOSE COLON
    (47) whileloop -> WHILE PARANOPEN ID . EQUAL STR_CONST PARANCLOSE COLON
    (48) whileloop -> WHILE PARANOPEN ID . EQUAL ID PARANCLOSE COLON
    (49) whileloop -> WHILE PARANOPEN ID . GREATER factor PARANCLOSE COLON
    (50) whileloop -> WHILE PARANOPEN ID . GREATER STR_CONST PARANCLOSE COLON
    (51) whileloop -> WHILE PARANOPEN ID . GREATER ID PARANCLOSE COLON
    (52) whileloop -> WHILE PARANOPEN ID . GREATEREQ factor PARANCLOSE COLON
    (53) whileloop -> WHILE PARANOPEN ID . GREATEREQ STR_CONST PARANCLOSE COLON
    (54) whileloop -> WHILE PARANOPEN ID . GREATEREQ ID PARANCLOSE COLON
    (55) whileloop -> WHILE PARANOPEN ID . LESSER factor PARANCLOSE COLON
    (56) whileloop -> WHILE PARANOPEN ID . LESSER STR_CONST PARANCLOSE COLON
    (57) whileloop -> WHILE PARANOPEN ID . LESSER ID PARANCLOSE COLON
    (58) whileloop -> WHILE PARANOPEN ID . LESSEREQ factor PARANCLOSE COLON
    (59) whileloop -> WHILE PARANOPEN ID . LESSEREQ STR_CONST PARANCLOSE COLON
    (60) whileloop -> WHILE PARANOPEN ID . LESSEREQ ID PARANCLOSE COLON
    (41) whileloop2 -> WHILE PARANOPEN ID . LESSEREQ ID PARANCLOSE COLON
    (1) expression -> ID . EQUAL expression
    (2) expression -> ID . EQUAL EMP_LIST
    (3) expression -> ID . EQUAL EMP_TUPLE
    (4) expression -> ID . EQUAL EMP_SET
    (5) expression -> ID . EQUAL STR_CONST
    (6) expression -> ID . EQUAL ID
    (7) expression -> ID . PLUS EQUAL term
    (9) expression -> ID . PLUS factor
    (14) expression -> ID . MINUS EQUAL term

    EQUAL           shift and go to state 100
    GREATER         shift and go to state 101
    GREATEREQ       shift and go to state 102
    LESSER          shift and go to state 103
    LESSEREQ        shift and go to state 104
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23


state 72

    (64) whileloop -> WHILE ID COLON .

    PLUS            reduce using rule 64 (whileloop -> WHILE ID COLON .)
    MINUS           reduce using rule 64 (whileloop -> WHILE ID COLON .)
    $end            reduce using rule 64 (whileloop -> WHILE ID COLON .)
    PARANCLOSE      reduce using rule 64 (whileloop -> WHILE ID COLON .)


state 73

    (63) whileloop -> WHILE factor COLON .

    PLUS            reduce using rule 63 (whileloop -> WHILE factor COLON .)
    MINUS           reduce using rule 63 (whileloop -> WHILE factor COLON .)
    $end            reduce using rule 63 (whileloop -> WHILE factor COLON .)
    PARANCLOSE      reduce using rule 63 (whileloop -> WHILE factor COLON .)


state 74

    (62) whileloop -> WHILE STR_CONST COLON .

    PLUS            reduce using rule 62 (whileloop -> WHILE STR_CONST COLON .)
    MINUS           reduce using rule 62 (whileloop -> WHILE STR_CONST COLON .)
    $end            reduce using rule 62 (whileloop -> WHILE STR_CONST COLON .)
    PARANCLOSE      reduce using rule 62 (whileloop -> WHILE STR_CONST COLON .)


state 75

    (61) whileloop -> WHILE BOOL COLON .

    PLUS            reduce using rule 61 (whileloop -> WHILE BOOL COLON .)
    MINUS           reduce using rule 61 (whileloop -> WHILE BOOL COLON .)
    $end            reduce using rule 61 (whileloop -> WHILE BOOL COLON .)
    PARANCLOSE      reduce using rule 61 (whileloop -> WHILE BOOL COLON .)


state 76

    (70) forloop -> FOR ID IN . RANGE PARANOPEN term PARANCLOSE COLON
    (71) forloop -> FOR ID IN . RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (72) forloop -> FOR ID IN . STR_CONST COLON
    (73) forloop -> FOR ID IN . ID COLON
    (74) forloop -> FOR ID IN . PARANOPEN STR_CONST PARANCLOSE COLON

    RANGE           shift and go to state 106
    STR_CONST       shift and go to state 108
    ID              shift and go to state 105
    PARANOPEN       shift and go to state 107


state 77

    (7) expression -> ID PLUS EQUAL term .
    (17) term -> term . MULTIPLY factor
    (18) term -> term . DIVIDE factor

    PLUS            reduce using rule 7 (expression -> ID PLUS EQUAL term .)
    MINUS           reduce using rule 7 (expression -> ID PLUS EQUAL term .)
    $end            reduce using rule 7 (expression -> ID PLUS EQUAL term .)
    PARANCLOSE      reduce using rule 7 (expression -> ID PLUS EQUAL term .)
    MULTIPLY        shift and go to state 24
    DIVIDE          shift and go to state 25


state 78

    (14) expression -> ID MINUS EQUAL term .
    (17) term -> term . MULTIPLY factor
    (18) term -> term . DIVIDE factor

    PLUS            reduce using rule 14 (expression -> ID MINUS EQUAL term .)
    MINUS           reduce using rule 14 (expression -> ID MINUS EQUAL term .)
    $end            reduce using rule 14 (expression -> ID MINUS EQUAL term .)
    PARANCLOSE      reduce using rule 14 (expression -> ID MINUS EQUAL term .)
    MULTIPLY        shift and go to state 24
    DIVIDE          shift and go to state 25


state 79

    (10) expression -> PRINT PARANOPEN STR_CONST PARANCLOSE .

    PLUS            reduce using rule 10 (expression -> PRINT PARANOPEN STR_CONST PARANCLOSE .)
    MINUS           reduce using rule 10 (expression -> PRINT PARANOPEN STR_CONST PARANCLOSE .)
    $end            reduce using rule 10 (expression -> PRINT PARANOPEN STR_CONST PARANCLOSE .)
    PARANCLOSE      reduce using rule 10 (expression -> PRINT PARANOPEN STR_CONST PARANCLOSE .)


state 80

    (11) expression -> PRINT PARANOPEN ID PARANCLOSE .

    PLUS            reduce using rule 11 (expression -> PRINT PARANOPEN ID PARANCLOSE .)
    MINUS           reduce using rule 11 (expression -> PRINT PARANOPEN ID PARANCLOSE .)
    $end            reduce using rule 11 (expression -> PRINT PARANOPEN ID PARANCLOSE .)
    PARANCLOSE      reduce using rule 11 (expression -> PRINT PARANOPEN ID PARANCLOSE .)


state 81

    (12) expression -> PRINT PARANOPEN term PARANCLOSE .

    PLUS            reduce using rule 12 (expression -> PRINT PARANOPEN term PARANCLOSE .)
    MINUS           reduce using rule 12 (expression -> PRINT PARANOPEN term PARANCLOSE .)
    $end            reduce using rule 12 (expression -> PRINT PARANOPEN term PARANCLOSE .)
    PARANCLOSE      reduce using rule 12 (expression -> PRINT PARANOPEN term PARANCLOSE .)


state 82

    (76) expression -> LEVEL2 ID EQUAL ID .
    (1) expression -> ID . EQUAL expression
    (2) expression -> ID . EQUAL EMP_LIST
    (3) expression -> ID . EQUAL EMP_TUPLE
    (4) expression -> ID . EQUAL EMP_SET
    (5) expression -> ID . EQUAL STR_CONST
    (6) expression -> ID . EQUAL ID
    (7) expression -> ID . PLUS EQUAL term
    (9) expression -> ID . PLUS factor
    (14) expression -> ID . MINUS EQUAL term

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    $end            reduce using rule 76 (expression -> LEVEL2 ID EQUAL ID .)
    PARANCLOSE      reduce using rule 76 (expression -> LEVEL2 ID EQUAL ID .)
    EQUAL           shift and go to state 21
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23

  ! PLUS            [ reduce using rule 76 (expression -> LEVEL2 ID EQUAL ID .) ]
  ! MINUS           [ reduce using rule 76 (expression -> LEVEL2 ID EQUAL ID .) ]


state 83

    (75) expression -> LEVEL2 ID EQUAL expression .
    (8) expression -> expression . PLUS term
    (13) expression -> expression . MINUS term

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    $end            reduce using rule 75 (expression -> LEVEL2 ID EQUAL expression .)
    PARANCLOSE      reduce using rule 75 (expression -> LEVEL2 ID EQUAL expression .)
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20

  ! PLUS            [ reduce using rule 75 (expression -> LEVEL2 ID EQUAL expression .) ]
  ! MINUS           [ reduce using rule 75 (expression -> LEVEL2 ID EQUAL expression .) ]


state 84

    (77) expression -> LEVEL2 ID EQUAL STR_CONST .

    PLUS            reduce using rule 77 (expression -> LEVEL2 ID EQUAL STR_CONST .)
    MINUS           reduce using rule 77 (expression -> LEVEL2 ID EQUAL STR_CONST .)
    $end            reduce using rule 77 (expression -> LEVEL2 ID EQUAL STR_CONST .)
    PARANCLOSE      reduce using rule 77 (expression -> LEVEL2 ID EQUAL STR_CONST .)


state 85

    (81) expression -> LEVEL2 PRINT PARANOPEN STR_CONST . PARANCLOSE

    PARANCLOSE      shift and go to state 109


state 86

    (82) expression -> LEVEL2 PRINT PARANOPEN ID . PARANCLOSE

    PARANCLOSE      shift and go to state 110


state 87

    (83) expression -> LEVEL2 PRINT PARANOPEN term . PARANCLOSE
    (17) term -> term . MULTIPLY factor
    (18) term -> term . DIVIDE factor

    PARANCLOSE      shift and go to state 111
    MULTIPLY        shift and go to state 24
    DIVIDE          shift and go to state 25


state 88

    (79) expression -> LEVEL1 ID EQUAL ID .
    (1) expression -> ID . EQUAL expression
    (2) expression -> ID . EQUAL EMP_LIST
    (3) expression -> ID . EQUAL EMP_TUPLE
    (4) expression -> ID . EQUAL EMP_SET
    (5) expression -> ID . EQUAL STR_CONST
    (6) expression -> ID . EQUAL ID
    (7) expression -> ID . PLUS EQUAL term
    (9) expression -> ID . PLUS factor
    (14) expression -> ID . MINUS EQUAL term

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    $end            reduce using rule 79 (expression -> LEVEL1 ID EQUAL ID .)
    PARANCLOSE      reduce using rule 79 (expression -> LEVEL1 ID EQUAL ID .)
    EQUAL           shift and go to state 21
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23

  ! PLUS            [ reduce using rule 79 (expression -> LEVEL1 ID EQUAL ID .) ]
  ! MINUS           [ reduce using rule 79 (expression -> LEVEL1 ID EQUAL ID .) ]


state 89

    (78) expression -> LEVEL1 ID EQUAL expression .
    (8) expression -> expression . PLUS term
    (13) expression -> expression . MINUS term

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    $end            reduce using rule 78 (expression -> LEVEL1 ID EQUAL expression .)
    PARANCLOSE      reduce using rule 78 (expression -> LEVEL1 ID EQUAL expression .)
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20

  ! PLUS            [ reduce using rule 78 (expression -> LEVEL1 ID EQUAL expression .) ]
  ! MINUS           [ reduce using rule 78 (expression -> LEVEL1 ID EQUAL expression .) ]


state 90

    (80) expression -> LEVEL1 ID EQUAL STR_CONST .

    PLUS            reduce using rule 80 (expression -> LEVEL1 ID EQUAL STR_CONST .)
    MINUS           reduce using rule 80 (expression -> LEVEL1 ID EQUAL STR_CONST .)
    $end            reduce using rule 80 (expression -> LEVEL1 ID EQUAL STR_CONST .)
    PARANCLOSE      reduce using rule 80 (expression -> LEVEL1 ID EQUAL STR_CONST .)


state 91

    (84) expression -> LEVEL1 PRINT PARANOPEN STR_CONST . PARANCLOSE

    PARANCLOSE      shift and go to state 112


state 92

    (85) expression -> LEVEL1 PRINT PARANOPEN ID . PARANCLOSE

    PARANCLOSE      shift and go to state 113


state 93

    (86) expression -> LEVEL1 PRINT PARANOPEN term . PARANCLOSE
    (17) term -> term . MULTIPLY factor
    (18) term -> term . DIVIDE factor

    PARANCLOSE      shift and go to state 114
    MULTIPLY        shift and go to state 24
    DIVIDE          shift and go to state 25


state 94

    (65) forloop2 -> LEVEL1 FOR ID IN . RANGE PARANOPEN term PARANCLOSE COLON
    (66) forloop2 -> LEVEL1 FOR ID IN . RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (67) forloop2 -> LEVEL1 FOR ID IN . STR_CONST COLON
    (68) forloop2 -> LEVEL1 FOR ID IN . ID COLON
    (69) forloop2 -> LEVEL1 FOR ID IN . PARANOPEN STR_CONST PARANCLOSE COLON

    RANGE           shift and go to state 116
    STR_CONST       shift and go to state 118
    ID              shift and go to state 115
    PARANOPEN       shift and go to state 117


state 95

    (27) whileloop2 -> LEVEL1 WHILE PARANOPEN ID . EQUAL factor PARANCLOSE COLON
    (28) whileloop2 -> LEVEL1 WHILE PARANOPEN ID . EQUAL STR_CONST PARANCLOSE COLON
    (29) whileloop2 -> LEVEL1 WHILE PARANOPEN ID . EQUAL ID PARANCLOSE COLON
    (30) whileloop2 -> LEVEL1 WHILE PARANOPEN ID . GREATER factor PARANCLOSE COLON
    (31) whileloop2 -> LEVEL1 WHILE PARANOPEN ID . GREATER STR_CONST PARANCLOSE COLON
    (32) whileloop2 -> LEVEL1 WHILE PARANOPEN ID . GREATER ID PARANCLOSE COLON
    (33) whileloop2 -> LEVEL1 WHILE PARANOPEN ID . GREATEREQ factor PARANCLOSE COLON
    (34) whileloop2 -> LEVEL1 WHILE PARANOPEN ID . GREATEREQ STR_CONST PARANCLOSE COLON
    (35) whileloop2 -> LEVEL1 WHILE PARANOPEN ID . GREATEREQ ID PARANCLOSE COLON
    (36) whileloop2 -> LEVEL1 WHILE PARANOPEN ID . LESSER factor PARANCLOSE COLON
    (37) whileloop2 -> LEVEL1 WHILE PARANOPEN ID . LESSER STR_CONST PARANCLOSE COLON
    (38) whileloop2 -> LEVEL1 WHILE PARANOPEN ID . LESSER ID PARANCLOSE COLON
    (39) whileloop2 -> LEVEL1 WHILE PARANOPEN ID . LESSEREQ factor PARANCLOSE COLON
    (40) whileloop2 -> LEVEL1 WHILE PARANOPEN ID . LESSEREQ STR_CONST PARANCLOSE COLON
    (1) expression -> ID . EQUAL expression
    (2) expression -> ID . EQUAL EMP_LIST
    (3) expression -> ID . EQUAL EMP_TUPLE
    (4) expression -> ID . EQUAL EMP_SET
    (5) expression -> ID . EQUAL STR_CONST
    (6) expression -> ID . EQUAL ID
    (7) expression -> ID . PLUS EQUAL term
    (9) expression -> ID . PLUS factor
    (14) expression -> ID . MINUS EQUAL term

    EQUAL           shift and go to state 119
    GREATER         shift and go to state 120
    GREATEREQ       shift and go to state 121
    LESSER          shift and go to state 122
    LESSEREQ        shift and go to state 123
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23


state 96

    (45) whileloop2 -> LEVEL1 WHILE ID COLON .

    PLUS            reduce using rule 45 (whileloop2 -> LEVEL1 WHILE ID COLON .)
    MINUS           reduce using rule 45 (whileloop2 -> LEVEL1 WHILE ID COLON .)
    $end            reduce using rule 45 (whileloop2 -> LEVEL1 WHILE ID COLON .)
    PARANCLOSE      reduce using rule 45 (whileloop2 -> LEVEL1 WHILE ID COLON .)


state 97

    (44) whileloop2 -> LEVEL1 WHILE factor COLON .

    PLUS            reduce using rule 44 (whileloop2 -> LEVEL1 WHILE factor COLON .)
    MINUS           reduce using rule 44 (whileloop2 -> LEVEL1 WHILE factor COLON .)
    $end            reduce using rule 44 (whileloop2 -> LEVEL1 WHILE factor COLON .)
    PARANCLOSE      reduce using rule 44 (whileloop2 -> LEVEL1 WHILE factor COLON .)


state 98

    (43) whileloop2 -> LEVEL1 WHILE STR_CONST COLON .

    PLUS            reduce using rule 43 (whileloop2 -> LEVEL1 WHILE STR_CONST COLON .)
    MINUS           reduce using rule 43 (whileloop2 -> LEVEL1 WHILE STR_CONST COLON .)
    $end            reduce using rule 43 (whileloop2 -> LEVEL1 WHILE STR_CONST COLON .)
    PARANCLOSE      reduce using rule 43 (whileloop2 -> LEVEL1 WHILE STR_CONST COLON .)


state 99

    (42) whileloop2 -> LEVEL1 WHILE BOOL COLON .

    PLUS            reduce using rule 42 (whileloop2 -> LEVEL1 WHILE BOOL COLON .)
    MINUS           reduce using rule 42 (whileloop2 -> LEVEL1 WHILE BOOL COLON .)
    $end            reduce using rule 42 (whileloop2 -> LEVEL1 WHILE BOOL COLON .)
    PARANCLOSE      reduce using rule 42 (whileloop2 -> LEVEL1 WHILE BOOL COLON .)


state 100

    (46) whileloop -> WHILE PARANOPEN ID EQUAL . factor PARANCLOSE COLON
    (47) whileloop -> WHILE PARANOPEN ID EQUAL . STR_CONST PARANCLOSE COLON
    (48) whileloop -> WHILE PARANOPEN ID EQUAL . ID PARANCLOSE COLON
    (1) expression -> ID EQUAL . expression
    (2) expression -> ID EQUAL . EMP_LIST
    (3) expression -> ID EQUAL . EMP_TUPLE
    (4) expression -> ID EQUAL . EMP_SET
    (5) expression -> ID EQUAL . STR_CONST
    (6) expression -> ID EQUAL . ID
    (20) factor -> . INT
    (21) factor -> . FLOAT
    (22) factor -> . PARANOPEN expression PARANCLOSE
    (1) expression -> . ID EQUAL expression
    (2) expression -> . ID EQUAL EMP_LIST
    (3) expression -> . ID EQUAL EMP_TUPLE
    (4) expression -> . ID EQUAL EMP_SET
    (5) expression -> . ID EQUAL STR_CONST
    (6) expression -> . ID EQUAL ID
    (7) expression -> . ID PLUS EQUAL term
    (8) expression -> . expression PLUS term
    (9) expression -> . ID PLUS factor
    (10) expression -> . PRINT PARANOPEN STR_CONST PARANCLOSE
    (11) expression -> . PRINT PARANOPEN ID PARANCLOSE
    (12) expression -> . PRINT PARANOPEN term PARANCLOSE
    (13) expression -> . expression MINUS term
    (14) expression -> . ID MINUS EQUAL term
    (15) expression -> . MINUS term
    (16) expression -> . term
    (23) expression -> . whileloop
    (24) expression -> . forloop
    (25) expression -> . forloop2
    (26) expression -> . whileloop2
    (75) expression -> . LEVEL2 ID EQUAL expression
    (76) expression -> . LEVEL2 ID EQUAL ID
    (77) expression -> . LEVEL2 ID EQUAL STR_CONST
    (78) expression -> . LEVEL1 ID EQUAL expression
    (79) expression -> . LEVEL1 ID EQUAL ID
    (80) expression -> . LEVEL1 ID EQUAL STR_CONST
    (81) expression -> . LEVEL2 PRINT PARANOPEN STR_CONST PARANCLOSE
    (82) expression -> . LEVEL2 PRINT PARANOPEN ID PARANCLOSE
    (83) expression -> . LEVEL2 PRINT PARANOPEN term PARANCLOSE
    (84) expression -> . LEVEL1 PRINT PARANOPEN STR_CONST PARANCLOSE
    (85) expression -> . LEVEL1 PRINT PARANOPEN ID PARANCLOSE
    (86) expression -> . LEVEL1 PRINT PARANOPEN term PARANCLOSE
    (87) expression -> .
    (88) expression -> . HASH expression
    (89) expression -> . HASH ID
    (90) expression -> . HASH STR_CONST
    (17) term -> . term MULTIPLY factor
    (18) term -> . term DIVIDE factor
    (19) term -> . factor
    (46) whileloop -> . WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (47) whileloop -> . WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (48) whileloop -> . WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (49) whileloop -> . WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (50) whileloop -> . WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (51) whileloop -> . WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (52) whileloop -> . WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (53) whileloop -> . WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (54) whileloop -> . WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (55) whileloop -> . WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (56) whileloop -> . WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (57) whileloop -> . WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (58) whileloop -> . WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (59) whileloop -> . WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (60) whileloop -> . WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (61) whileloop -> . WHILE BOOL COLON
    (62) whileloop -> . WHILE STR_CONST COLON
    (63) whileloop -> . WHILE factor COLON
    (64) whileloop -> . WHILE ID COLON
    (70) forloop -> . FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (71) forloop -> . FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (72) forloop -> . FOR ID IN STR_CONST COLON
    (73) forloop -> . FOR ID IN ID COLON
    (74) forloop -> . FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (65) forloop2 -> . LEVEL1 FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (66) forloop2 -> . LEVEL1 FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (67) forloop2 -> . LEVEL1 FOR ID IN STR_CONST COLON
    (68) forloop2 -> . LEVEL1 FOR ID IN ID COLON
    (69) forloop2 -> . LEVEL1 FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (27) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (28) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (29) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (30) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (31) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (32) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (33) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (34) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (35) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (36) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (37) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (38) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (39) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (40) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (41) whileloop2 -> . WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (42) whileloop2 -> . LEVEL1 WHILE BOOL COLON
    (43) whileloop2 -> . LEVEL1 WHILE STR_CONST COLON
    (44) whileloop2 -> . LEVEL1 WHILE factor COLON
    (45) whileloop2 -> . LEVEL1 WHILE ID COLON

  ! shift/reduce conflict for MINUS resolved as shift
    STR_CONST       shift and go to state 126
    ID              shift and go to state 124
    EMP_LIST        shift and go to state 48
    EMP_TUPLE       shift and go to state 49
    EMP_SET         shift and go to state 50
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    PARANOPEN       shift and go to state 6
    PRINT           shift and go to state 5
    MINUS           shift and go to state 7
    LEVEL2          shift and go to state 12
    LEVEL1          shift and go to state 13
    PLUS            reduce using rule 87 (expression -> .)
    PARANCLOSE      reduce using rule 87 (expression -> .)
    HASH            shift and go to state 14
    WHILE           shift and go to state 15
    FOR             shift and go to state 16

  ! MINUS           [ reduce using rule 87 (expression -> .) ]

    factor                         shift and go to state 125
    expression                     shift and go to state 47
    term                           shift and go to state 3
    whileloop                      shift and go to state 8
    forloop                        shift and go to state 9
    forloop2                       shift and go to state 10
    whileloop2                     shift and go to state 11

state 101

    (49) whileloop -> WHILE PARANOPEN ID GREATER . factor PARANCLOSE COLON
    (50) whileloop -> WHILE PARANOPEN ID GREATER . STR_CONST PARANCLOSE COLON
    (51) whileloop -> WHILE PARANOPEN ID GREATER . ID PARANCLOSE COLON
    (20) factor -> . INT
    (21) factor -> . FLOAT
    (22) factor -> . PARANOPEN expression PARANCLOSE

    STR_CONST       shift and go to state 129
    ID              shift and go to state 127
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    PARANOPEN       shift and go to state 6

    factor                         shift and go to state 128

state 102

    (52) whileloop -> WHILE PARANOPEN ID GREATEREQ . factor PARANCLOSE COLON
    (53) whileloop -> WHILE PARANOPEN ID GREATEREQ . STR_CONST PARANCLOSE COLON
    (54) whileloop -> WHILE PARANOPEN ID GREATEREQ . ID PARANCLOSE COLON
    (20) factor -> . INT
    (21) factor -> . FLOAT
    (22) factor -> . PARANOPEN expression PARANCLOSE

    STR_CONST       shift and go to state 132
    ID              shift and go to state 130
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    PARANOPEN       shift and go to state 6

    factor                         shift and go to state 131

state 103

    (55) whileloop -> WHILE PARANOPEN ID LESSER . factor PARANCLOSE COLON
    (56) whileloop -> WHILE PARANOPEN ID LESSER . STR_CONST PARANCLOSE COLON
    (57) whileloop -> WHILE PARANOPEN ID LESSER . ID PARANCLOSE COLON
    (20) factor -> . INT
    (21) factor -> . FLOAT
    (22) factor -> . PARANOPEN expression PARANCLOSE

    STR_CONST       shift and go to state 135
    ID              shift and go to state 133
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    PARANOPEN       shift and go to state 6

    factor                         shift and go to state 134

state 104

    (58) whileloop -> WHILE PARANOPEN ID LESSEREQ . factor PARANCLOSE COLON
    (59) whileloop -> WHILE PARANOPEN ID LESSEREQ . STR_CONST PARANCLOSE COLON
    (60) whileloop -> WHILE PARANOPEN ID LESSEREQ . ID PARANCLOSE COLON
    (41) whileloop2 -> WHILE PARANOPEN ID LESSEREQ . ID PARANCLOSE COLON
    (20) factor -> . INT
    (21) factor -> . FLOAT
    (22) factor -> . PARANOPEN expression PARANCLOSE

    STR_CONST       shift and go to state 138
    ID              shift and go to state 136
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    PARANOPEN       shift and go to state 6

    factor                         shift and go to state 137

state 105

    (73) forloop -> FOR ID IN ID . COLON

    COLON           shift and go to state 139


state 106

    (70) forloop -> FOR ID IN RANGE . PARANOPEN term PARANCLOSE COLON
    (71) forloop -> FOR ID IN RANGE . PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON

    PARANOPEN       shift and go to state 140


state 107

    (74) forloop -> FOR ID IN PARANOPEN . STR_CONST PARANCLOSE COLON

    STR_CONST       shift and go to state 141


state 108

    (72) forloop -> FOR ID IN STR_CONST . COLON

    COLON           shift and go to state 142


state 109

    (81) expression -> LEVEL2 PRINT PARANOPEN STR_CONST PARANCLOSE .

    PLUS            reduce using rule 81 (expression -> LEVEL2 PRINT PARANOPEN STR_CONST PARANCLOSE .)
    MINUS           reduce using rule 81 (expression -> LEVEL2 PRINT PARANOPEN STR_CONST PARANCLOSE .)
    $end            reduce using rule 81 (expression -> LEVEL2 PRINT PARANOPEN STR_CONST PARANCLOSE .)
    PARANCLOSE      reduce using rule 81 (expression -> LEVEL2 PRINT PARANOPEN STR_CONST PARANCLOSE .)


state 110

    (82) expression -> LEVEL2 PRINT PARANOPEN ID PARANCLOSE .

    PLUS            reduce using rule 82 (expression -> LEVEL2 PRINT PARANOPEN ID PARANCLOSE .)
    MINUS           reduce using rule 82 (expression -> LEVEL2 PRINT PARANOPEN ID PARANCLOSE .)
    $end            reduce using rule 82 (expression -> LEVEL2 PRINT PARANOPEN ID PARANCLOSE .)
    PARANCLOSE      reduce using rule 82 (expression -> LEVEL2 PRINT PARANOPEN ID PARANCLOSE .)


state 111

    (83) expression -> LEVEL2 PRINT PARANOPEN term PARANCLOSE .

    PLUS            reduce using rule 83 (expression -> LEVEL2 PRINT PARANOPEN term PARANCLOSE .)
    MINUS           reduce using rule 83 (expression -> LEVEL2 PRINT PARANOPEN term PARANCLOSE .)
    $end            reduce using rule 83 (expression -> LEVEL2 PRINT PARANOPEN term PARANCLOSE .)
    PARANCLOSE      reduce using rule 83 (expression -> LEVEL2 PRINT PARANOPEN term PARANCLOSE .)


state 112

    (84) expression -> LEVEL1 PRINT PARANOPEN STR_CONST PARANCLOSE .

    PLUS            reduce using rule 84 (expression -> LEVEL1 PRINT PARANOPEN STR_CONST PARANCLOSE .)
    MINUS           reduce using rule 84 (expression -> LEVEL1 PRINT PARANOPEN STR_CONST PARANCLOSE .)
    $end            reduce using rule 84 (expression -> LEVEL1 PRINT PARANOPEN STR_CONST PARANCLOSE .)
    PARANCLOSE      reduce using rule 84 (expression -> LEVEL1 PRINT PARANOPEN STR_CONST PARANCLOSE .)


state 113

    (85) expression -> LEVEL1 PRINT PARANOPEN ID PARANCLOSE .

    PLUS            reduce using rule 85 (expression -> LEVEL1 PRINT PARANOPEN ID PARANCLOSE .)
    MINUS           reduce using rule 85 (expression -> LEVEL1 PRINT PARANOPEN ID PARANCLOSE .)
    $end            reduce using rule 85 (expression -> LEVEL1 PRINT PARANOPEN ID PARANCLOSE .)
    PARANCLOSE      reduce using rule 85 (expression -> LEVEL1 PRINT PARANOPEN ID PARANCLOSE .)


state 114

    (86) expression -> LEVEL1 PRINT PARANOPEN term PARANCLOSE .

    PLUS            reduce using rule 86 (expression -> LEVEL1 PRINT PARANOPEN term PARANCLOSE .)
    MINUS           reduce using rule 86 (expression -> LEVEL1 PRINT PARANOPEN term PARANCLOSE .)
    $end            reduce using rule 86 (expression -> LEVEL1 PRINT PARANOPEN term PARANCLOSE .)
    PARANCLOSE      reduce using rule 86 (expression -> LEVEL1 PRINT PARANOPEN term PARANCLOSE .)


state 115

    (68) forloop2 -> LEVEL1 FOR ID IN ID . COLON

    COLON           shift and go to state 143


state 116

    (65) forloop2 -> LEVEL1 FOR ID IN RANGE . PARANOPEN term PARANCLOSE COLON
    (66) forloop2 -> LEVEL1 FOR ID IN RANGE . PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON

    PARANOPEN       shift and go to state 144


state 117

    (69) forloop2 -> LEVEL1 FOR ID IN PARANOPEN . STR_CONST PARANCLOSE COLON

    STR_CONST       shift and go to state 145


state 118

    (67) forloop2 -> LEVEL1 FOR ID IN STR_CONST . COLON

    COLON           shift and go to state 146


state 119

    (27) whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL . factor PARANCLOSE COLON
    (28) whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL . STR_CONST PARANCLOSE COLON
    (29) whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL . ID PARANCLOSE COLON
    (1) expression -> ID EQUAL . expression
    (2) expression -> ID EQUAL . EMP_LIST
    (3) expression -> ID EQUAL . EMP_TUPLE
    (4) expression -> ID EQUAL . EMP_SET
    (5) expression -> ID EQUAL . STR_CONST
    (6) expression -> ID EQUAL . ID
    (20) factor -> . INT
    (21) factor -> . FLOAT
    (22) factor -> . PARANOPEN expression PARANCLOSE
    (1) expression -> . ID EQUAL expression
    (2) expression -> . ID EQUAL EMP_LIST
    (3) expression -> . ID EQUAL EMP_TUPLE
    (4) expression -> . ID EQUAL EMP_SET
    (5) expression -> . ID EQUAL STR_CONST
    (6) expression -> . ID EQUAL ID
    (7) expression -> . ID PLUS EQUAL term
    (8) expression -> . expression PLUS term
    (9) expression -> . ID PLUS factor
    (10) expression -> . PRINT PARANOPEN STR_CONST PARANCLOSE
    (11) expression -> . PRINT PARANOPEN ID PARANCLOSE
    (12) expression -> . PRINT PARANOPEN term PARANCLOSE
    (13) expression -> . expression MINUS term
    (14) expression -> . ID MINUS EQUAL term
    (15) expression -> . MINUS term
    (16) expression -> . term
    (23) expression -> . whileloop
    (24) expression -> . forloop
    (25) expression -> . forloop2
    (26) expression -> . whileloop2
    (75) expression -> . LEVEL2 ID EQUAL expression
    (76) expression -> . LEVEL2 ID EQUAL ID
    (77) expression -> . LEVEL2 ID EQUAL STR_CONST
    (78) expression -> . LEVEL1 ID EQUAL expression
    (79) expression -> . LEVEL1 ID EQUAL ID
    (80) expression -> . LEVEL1 ID EQUAL STR_CONST
    (81) expression -> . LEVEL2 PRINT PARANOPEN STR_CONST PARANCLOSE
    (82) expression -> . LEVEL2 PRINT PARANOPEN ID PARANCLOSE
    (83) expression -> . LEVEL2 PRINT PARANOPEN term PARANCLOSE
    (84) expression -> . LEVEL1 PRINT PARANOPEN STR_CONST PARANCLOSE
    (85) expression -> . LEVEL1 PRINT PARANOPEN ID PARANCLOSE
    (86) expression -> . LEVEL1 PRINT PARANOPEN term PARANCLOSE
    (87) expression -> .
    (88) expression -> . HASH expression
    (89) expression -> . HASH ID
    (90) expression -> . HASH STR_CONST
    (17) term -> . term MULTIPLY factor
    (18) term -> . term DIVIDE factor
    (19) term -> . factor
    (46) whileloop -> . WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (47) whileloop -> . WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (48) whileloop -> . WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (49) whileloop -> . WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (50) whileloop -> . WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (51) whileloop -> . WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (52) whileloop -> . WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (53) whileloop -> . WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (54) whileloop -> . WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (55) whileloop -> . WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (56) whileloop -> . WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (57) whileloop -> . WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (58) whileloop -> . WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (59) whileloop -> . WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (60) whileloop -> . WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (61) whileloop -> . WHILE BOOL COLON
    (62) whileloop -> . WHILE STR_CONST COLON
    (63) whileloop -> . WHILE factor COLON
    (64) whileloop -> . WHILE ID COLON
    (70) forloop -> . FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (71) forloop -> . FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (72) forloop -> . FOR ID IN STR_CONST COLON
    (73) forloop -> . FOR ID IN ID COLON
    (74) forloop -> . FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (65) forloop2 -> . LEVEL1 FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (66) forloop2 -> . LEVEL1 FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (67) forloop2 -> . LEVEL1 FOR ID IN STR_CONST COLON
    (68) forloop2 -> . LEVEL1 FOR ID IN ID COLON
    (69) forloop2 -> . LEVEL1 FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (27) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (28) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (29) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (30) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (31) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (32) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (33) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (34) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (35) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (36) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (37) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (38) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (39) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (40) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (41) whileloop2 -> . WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (42) whileloop2 -> . LEVEL1 WHILE BOOL COLON
    (43) whileloop2 -> . LEVEL1 WHILE STR_CONST COLON
    (44) whileloop2 -> . LEVEL1 WHILE factor COLON
    (45) whileloop2 -> . LEVEL1 WHILE ID COLON

  ! shift/reduce conflict for MINUS resolved as shift
    STR_CONST       shift and go to state 149
    ID              shift and go to state 147
    EMP_LIST        shift and go to state 48
    EMP_TUPLE       shift and go to state 49
    EMP_SET         shift and go to state 50
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    PARANOPEN       shift and go to state 6
    PRINT           shift and go to state 5
    MINUS           shift and go to state 7
    LEVEL2          shift and go to state 12
    LEVEL1          shift and go to state 13
    PLUS            reduce using rule 87 (expression -> .)
    PARANCLOSE      reduce using rule 87 (expression -> .)
    HASH            shift and go to state 14
    WHILE           shift and go to state 15
    FOR             shift and go to state 16

  ! MINUS           [ reduce using rule 87 (expression -> .) ]

    factor                         shift and go to state 148
    expression                     shift and go to state 47
    term                           shift and go to state 3
    whileloop                      shift and go to state 8
    forloop                        shift and go to state 9
    forloop2                       shift and go to state 10
    whileloop2                     shift and go to state 11

state 120

    (30) whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER . factor PARANCLOSE COLON
    (31) whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER . STR_CONST PARANCLOSE COLON
    (32) whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER . ID PARANCLOSE COLON
    (20) factor -> . INT
    (21) factor -> . FLOAT
    (22) factor -> . PARANOPEN expression PARANCLOSE

    STR_CONST       shift and go to state 152
    ID              shift and go to state 150
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    PARANOPEN       shift and go to state 6

    factor                         shift and go to state 151

state 121

    (33) whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ . factor PARANCLOSE COLON
    (34) whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ . STR_CONST PARANCLOSE COLON
    (35) whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ . ID PARANCLOSE COLON
    (20) factor -> . INT
    (21) factor -> . FLOAT
    (22) factor -> . PARANOPEN expression PARANCLOSE

    STR_CONST       shift and go to state 155
    ID              shift and go to state 153
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    PARANOPEN       shift and go to state 6

    factor                         shift and go to state 154

state 122

    (36) whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER . factor PARANCLOSE COLON
    (37) whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER . STR_CONST PARANCLOSE COLON
    (38) whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER . ID PARANCLOSE COLON
    (20) factor -> . INT
    (21) factor -> . FLOAT
    (22) factor -> . PARANOPEN expression PARANCLOSE

    STR_CONST       shift and go to state 158
    ID              shift and go to state 156
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    PARANOPEN       shift and go to state 6

    factor                         shift and go to state 157

state 123

    (39) whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSEREQ . factor PARANCLOSE COLON
    (40) whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSEREQ . STR_CONST PARANCLOSE COLON
    (20) factor -> . INT
    (21) factor -> . FLOAT
    (22) factor -> . PARANOPEN expression PARANCLOSE

    STR_CONST       shift and go to state 160
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    PARANOPEN       shift and go to state 6

    factor                         shift and go to state 159

state 124

    (48) whileloop -> WHILE PARANOPEN ID EQUAL ID . PARANCLOSE COLON
    (6) expression -> ID EQUAL ID .
    (1) expression -> ID . EQUAL expression
    (2) expression -> ID . EQUAL EMP_LIST
    (3) expression -> ID . EQUAL EMP_TUPLE
    (4) expression -> ID . EQUAL EMP_SET
    (5) expression -> ID . EQUAL STR_CONST
    (6) expression -> ID . EQUAL ID
    (7) expression -> ID . PLUS EQUAL term
    (9) expression -> ID . PLUS factor
    (14) expression -> ID . MINUS EQUAL term

  ! shift/reduce conflict for PARANCLOSE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    PARANCLOSE      shift and go to state 161
    EQUAL           shift and go to state 21
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23

  ! PARANCLOSE      [ reduce using rule 6 (expression -> ID EQUAL ID .) ]
  ! PLUS            [ reduce using rule 6 (expression -> ID EQUAL ID .) ]
  ! MINUS           [ reduce using rule 6 (expression -> ID EQUAL ID .) ]


state 125

    (46) whileloop -> WHILE PARANOPEN ID EQUAL factor . PARANCLOSE COLON
    (19) term -> factor .

  ! shift/reduce conflict for PARANCLOSE resolved as shift
    PARANCLOSE      shift and go to state 162
    MULTIPLY        reduce using rule 19 (term -> factor .)
    DIVIDE          reduce using rule 19 (term -> factor .)
    PLUS            reduce using rule 19 (term -> factor .)
    MINUS           reduce using rule 19 (term -> factor .)

  ! PARANCLOSE      [ reduce using rule 19 (term -> factor .) ]


state 126

    (47) whileloop -> WHILE PARANOPEN ID EQUAL STR_CONST . PARANCLOSE COLON
    (5) expression -> ID EQUAL STR_CONST .

  ! shift/reduce conflict for PARANCLOSE resolved as shift
    PARANCLOSE      shift and go to state 163
    PLUS            reduce using rule 5 (expression -> ID EQUAL STR_CONST .)
    MINUS           reduce using rule 5 (expression -> ID EQUAL STR_CONST .)

  ! PARANCLOSE      [ reduce using rule 5 (expression -> ID EQUAL STR_CONST .) ]


state 127

    (51) whileloop -> WHILE PARANOPEN ID GREATER ID . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 164


state 128

    (49) whileloop -> WHILE PARANOPEN ID GREATER factor . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 165


state 129

    (50) whileloop -> WHILE PARANOPEN ID GREATER STR_CONST . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 166


state 130

    (54) whileloop -> WHILE PARANOPEN ID GREATEREQ ID . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 167


state 131

    (52) whileloop -> WHILE PARANOPEN ID GREATEREQ factor . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 168


state 132

    (53) whileloop -> WHILE PARANOPEN ID GREATEREQ STR_CONST . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 169


state 133

    (57) whileloop -> WHILE PARANOPEN ID LESSER ID . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 170


state 134

    (55) whileloop -> WHILE PARANOPEN ID LESSER factor . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 171


state 135

    (56) whileloop -> WHILE PARANOPEN ID LESSER STR_CONST . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 172


state 136

    (60) whileloop -> WHILE PARANOPEN ID LESSEREQ ID . PARANCLOSE COLON
    (41) whileloop2 -> WHILE PARANOPEN ID LESSEREQ ID . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 173


state 137

    (58) whileloop -> WHILE PARANOPEN ID LESSEREQ factor . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 174


state 138

    (59) whileloop -> WHILE PARANOPEN ID LESSEREQ STR_CONST . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 175


state 139

    (73) forloop -> FOR ID IN ID COLON .

    PLUS            reduce using rule 73 (forloop -> FOR ID IN ID COLON .)
    MINUS           reduce using rule 73 (forloop -> FOR ID IN ID COLON .)
    $end            reduce using rule 73 (forloop -> FOR ID IN ID COLON .)
    PARANCLOSE      reduce using rule 73 (forloop -> FOR ID IN ID COLON .)


state 140

    (70) forloop -> FOR ID IN RANGE PARANOPEN . term PARANCLOSE COLON
    (71) forloop -> FOR ID IN RANGE PARANOPEN . LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (17) term -> . term MULTIPLY factor
    (18) term -> . term DIVIDE factor
    (19) term -> . factor
    (20) factor -> . INT
    (21) factor -> . FLOAT
    (22) factor -> . PARANOPEN expression PARANCLOSE

    LEN             shift and go to state 177
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    PARANOPEN       shift and go to state 6

    term                           shift and go to state 176
    factor                         shift and go to state 4

state 141

    (74) forloop -> FOR ID IN PARANOPEN STR_CONST . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 178


state 142

    (72) forloop -> FOR ID IN STR_CONST COLON .

    PLUS            reduce using rule 72 (forloop -> FOR ID IN STR_CONST COLON .)
    MINUS           reduce using rule 72 (forloop -> FOR ID IN STR_CONST COLON .)
    $end            reduce using rule 72 (forloop -> FOR ID IN STR_CONST COLON .)
    PARANCLOSE      reduce using rule 72 (forloop -> FOR ID IN STR_CONST COLON .)


state 143

    (68) forloop2 -> LEVEL1 FOR ID IN ID COLON .

    PLUS            reduce using rule 68 (forloop2 -> LEVEL1 FOR ID IN ID COLON .)
    MINUS           reduce using rule 68 (forloop2 -> LEVEL1 FOR ID IN ID COLON .)
    $end            reduce using rule 68 (forloop2 -> LEVEL1 FOR ID IN ID COLON .)
    PARANCLOSE      reduce using rule 68 (forloop2 -> LEVEL1 FOR ID IN ID COLON .)


state 144

    (65) forloop2 -> LEVEL1 FOR ID IN RANGE PARANOPEN . term PARANCLOSE COLON
    (66) forloop2 -> LEVEL1 FOR ID IN RANGE PARANOPEN . LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (17) term -> . term MULTIPLY factor
    (18) term -> . term DIVIDE factor
    (19) term -> . factor
    (20) factor -> . INT
    (21) factor -> . FLOAT
    (22) factor -> . PARANOPEN expression PARANCLOSE

    LEN             shift and go to state 180
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    PARANOPEN       shift and go to state 6

    term                           shift and go to state 179
    factor                         shift and go to state 4

state 145

    (69) forloop2 -> LEVEL1 FOR ID IN PARANOPEN STR_CONST . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 181


state 146

    (67) forloop2 -> LEVEL1 FOR ID IN STR_CONST COLON .

    PLUS            reduce using rule 67 (forloop2 -> LEVEL1 FOR ID IN STR_CONST COLON .)
    MINUS           reduce using rule 67 (forloop2 -> LEVEL1 FOR ID IN STR_CONST COLON .)
    $end            reduce using rule 67 (forloop2 -> LEVEL1 FOR ID IN STR_CONST COLON .)
    PARANCLOSE      reduce using rule 67 (forloop2 -> LEVEL1 FOR ID IN STR_CONST COLON .)


state 147

    (29) whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL ID . PARANCLOSE COLON
    (6) expression -> ID EQUAL ID .
    (1) expression -> ID . EQUAL expression
    (2) expression -> ID . EQUAL EMP_LIST
    (3) expression -> ID . EQUAL EMP_TUPLE
    (4) expression -> ID . EQUAL EMP_SET
    (5) expression -> ID . EQUAL STR_CONST
    (6) expression -> ID . EQUAL ID
    (7) expression -> ID . PLUS EQUAL term
    (9) expression -> ID . PLUS factor
    (14) expression -> ID . MINUS EQUAL term

  ! shift/reduce conflict for PARANCLOSE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    PARANCLOSE      shift and go to state 182
    EQUAL           shift and go to state 21
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23

  ! PARANCLOSE      [ reduce using rule 6 (expression -> ID EQUAL ID .) ]
  ! PLUS            [ reduce using rule 6 (expression -> ID EQUAL ID .) ]
  ! MINUS           [ reduce using rule 6 (expression -> ID EQUAL ID .) ]


state 148

    (27) whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL factor . PARANCLOSE COLON
    (19) term -> factor .

  ! shift/reduce conflict for PARANCLOSE resolved as shift
    PARANCLOSE      shift and go to state 183
    MULTIPLY        reduce using rule 19 (term -> factor .)
    DIVIDE          reduce using rule 19 (term -> factor .)
    PLUS            reduce using rule 19 (term -> factor .)
    MINUS           reduce using rule 19 (term -> factor .)

  ! PARANCLOSE      [ reduce using rule 19 (term -> factor .) ]


state 149

    (28) whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL STR_CONST . PARANCLOSE COLON
    (5) expression -> ID EQUAL STR_CONST .

  ! shift/reduce conflict for PARANCLOSE resolved as shift
    PARANCLOSE      shift and go to state 184
    PLUS            reduce using rule 5 (expression -> ID EQUAL STR_CONST .)
    MINUS           reduce using rule 5 (expression -> ID EQUAL STR_CONST .)

  ! PARANCLOSE      [ reduce using rule 5 (expression -> ID EQUAL STR_CONST .) ]


state 150

    (32) whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER ID . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 185


state 151

    (30) whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER factor . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 186


state 152

    (31) whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER STR_CONST . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 187


state 153

    (35) whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ ID . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 188


state 154

    (33) whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ factor . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 189


state 155

    (34) whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ STR_CONST . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 190


state 156

    (38) whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER ID . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 191


state 157

    (36) whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER factor . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 192


state 158

    (37) whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER STR_CONST . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 193


state 159

    (39) whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSEREQ factor . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 194


state 160

    (40) whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSEREQ STR_CONST . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 195


state 161

    (48) whileloop -> WHILE PARANOPEN ID EQUAL ID PARANCLOSE . COLON

    COLON           shift and go to state 196


state 162

    (46) whileloop -> WHILE PARANOPEN ID EQUAL factor PARANCLOSE . COLON

    COLON           shift and go to state 197


state 163

    (47) whileloop -> WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE . COLON

    COLON           shift and go to state 198


state 164

    (51) whileloop -> WHILE PARANOPEN ID GREATER ID PARANCLOSE . COLON

    COLON           shift and go to state 199


state 165

    (49) whileloop -> WHILE PARANOPEN ID GREATER factor PARANCLOSE . COLON

    COLON           shift and go to state 200


state 166

    (50) whileloop -> WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE . COLON

    COLON           shift and go to state 201


state 167

    (54) whileloop -> WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE . COLON

    COLON           shift and go to state 202


state 168

    (52) whileloop -> WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE . COLON

    COLON           shift and go to state 203


state 169

    (53) whileloop -> WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE . COLON

    COLON           shift and go to state 204


state 170

    (57) whileloop -> WHILE PARANOPEN ID LESSER ID PARANCLOSE . COLON

    COLON           shift and go to state 205


state 171

    (55) whileloop -> WHILE PARANOPEN ID LESSER factor PARANCLOSE . COLON

    COLON           shift and go to state 206


state 172

    (56) whileloop -> WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE . COLON

    COLON           shift and go to state 207


state 173

    (60) whileloop -> WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE . COLON
    (41) whileloop2 -> WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE . COLON

    COLON           shift and go to state 208


state 174

    (58) whileloop -> WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE . COLON

    COLON           shift and go to state 209


state 175

    (59) whileloop -> WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE . COLON

    COLON           shift and go to state 210


state 176

    (70) forloop -> FOR ID IN RANGE PARANOPEN term . PARANCLOSE COLON
    (17) term -> term . MULTIPLY factor
    (18) term -> term . DIVIDE factor

    PARANCLOSE      shift and go to state 211
    MULTIPLY        shift and go to state 24
    DIVIDE          shift and go to state 25


state 177

    (71) forloop -> FOR ID IN RANGE PARANOPEN LEN . PARANOPEN ID PARANCLOSE PARANCLOSE COLON

    PARANOPEN       shift and go to state 212


state 178

    (74) forloop -> FOR ID IN PARANOPEN STR_CONST PARANCLOSE . COLON

    COLON           shift and go to state 213


state 179

    (65) forloop2 -> LEVEL1 FOR ID IN RANGE PARANOPEN term . PARANCLOSE COLON
    (17) term -> term . MULTIPLY factor
    (18) term -> term . DIVIDE factor

    PARANCLOSE      shift and go to state 214
    MULTIPLY        shift and go to state 24
    DIVIDE          shift and go to state 25


state 180

    (66) forloop2 -> LEVEL1 FOR ID IN RANGE PARANOPEN LEN . PARANOPEN ID PARANCLOSE PARANCLOSE COLON

    PARANOPEN       shift and go to state 215


state 181

    (69) forloop2 -> LEVEL1 FOR ID IN PARANOPEN STR_CONST PARANCLOSE . COLON

    COLON           shift and go to state 216


state 182

    (29) whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL ID PARANCLOSE . COLON

    COLON           shift and go to state 217


state 183

    (27) whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL factor PARANCLOSE . COLON

    COLON           shift and go to state 218


state 184

    (28) whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE . COLON

    COLON           shift and go to state 219


state 185

    (32) whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER ID PARANCLOSE . COLON

    COLON           shift and go to state 220


state 186

    (30) whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER factor PARANCLOSE . COLON

    COLON           shift and go to state 221


state 187

    (31) whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE . COLON

    COLON           shift and go to state 222


state 188

    (35) whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE . COLON

    COLON           shift and go to state 223


state 189

    (33) whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE . COLON

    COLON           shift and go to state 224


state 190

    (34) whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE . COLON

    COLON           shift and go to state 225


state 191

    (38) whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER ID PARANCLOSE . COLON

    COLON           shift and go to state 226


state 192

    (36) whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER factor PARANCLOSE . COLON

    COLON           shift and go to state 227


state 193

    (37) whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE . COLON

    COLON           shift and go to state 228


state 194

    (39) whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE . COLON

    COLON           shift and go to state 229


state 195

    (40) whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE . COLON

    COLON           shift and go to state 230


state 196

    (48) whileloop -> WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON .

    PLUS            reduce using rule 48 (whileloop -> WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON .)
    MINUS           reduce using rule 48 (whileloop -> WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON .)
    $end            reduce using rule 48 (whileloop -> WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 48 (whileloop -> WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON .)


state 197

    (46) whileloop -> WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON .

    PLUS            reduce using rule 46 (whileloop -> WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON .)
    MINUS           reduce using rule 46 (whileloop -> WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON .)
    $end            reduce using rule 46 (whileloop -> WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 46 (whileloop -> WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON .)


state 198

    (47) whileloop -> WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON .

    PLUS            reduce using rule 47 (whileloop -> WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON .)
    MINUS           reduce using rule 47 (whileloop -> WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON .)
    $end            reduce using rule 47 (whileloop -> WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 47 (whileloop -> WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON .)


state 199

    (51) whileloop -> WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON .

    PLUS            reduce using rule 51 (whileloop -> WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON .)
    MINUS           reduce using rule 51 (whileloop -> WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON .)
    $end            reduce using rule 51 (whileloop -> WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 51 (whileloop -> WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON .)


state 200

    (49) whileloop -> WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON .

    PLUS            reduce using rule 49 (whileloop -> WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON .)
    MINUS           reduce using rule 49 (whileloop -> WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON .)
    $end            reduce using rule 49 (whileloop -> WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 49 (whileloop -> WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON .)


state 201

    (50) whileloop -> WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON .

    PLUS            reduce using rule 50 (whileloop -> WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON .)
    MINUS           reduce using rule 50 (whileloop -> WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON .)
    $end            reduce using rule 50 (whileloop -> WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 50 (whileloop -> WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON .)


state 202

    (54) whileloop -> WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON .

    PLUS            reduce using rule 54 (whileloop -> WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON .)
    MINUS           reduce using rule 54 (whileloop -> WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON .)
    $end            reduce using rule 54 (whileloop -> WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 54 (whileloop -> WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON .)


state 203

    (52) whileloop -> WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON .

    PLUS            reduce using rule 52 (whileloop -> WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON .)
    MINUS           reduce using rule 52 (whileloop -> WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON .)
    $end            reduce using rule 52 (whileloop -> WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 52 (whileloop -> WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON .)


state 204

    (53) whileloop -> WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON .

    PLUS            reduce using rule 53 (whileloop -> WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON .)
    MINUS           reduce using rule 53 (whileloop -> WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON .)
    $end            reduce using rule 53 (whileloop -> WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 53 (whileloop -> WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON .)


state 205

    (57) whileloop -> WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON .

    PLUS            reduce using rule 57 (whileloop -> WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON .)
    MINUS           reduce using rule 57 (whileloop -> WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON .)
    $end            reduce using rule 57 (whileloop -> WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 57 (whileloop -> WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON .)


state 206

    (55) whileloop -> WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON .

    PLUS            reduce using rule 55 (whileloop -> WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON .)
    MINUS           reduce using rule 55 (whileloop -> WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON .)
    $end            reduce using rule 55 (whileloop -> WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 55 (whileloop -> WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON .)


state 207

    (56) whileloop -> WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON .

    PLUS            reduce using rule 56 (whileloop -> WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON .)
    MINUS           reduce using rule 56 (whileloop -> WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON .)
    $end            reduce using rule 56 (whileloop -> WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 56 (whileloop -> WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON .)


state 208

    (60) whileloop -> WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON .
    (41) whileloop2 -> WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON .

  ! reduce/reduce conflict for PLUS resolved using rule 41 (whileloop2 -> WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON .)
  ! reduce/reduce conflict for MINUS resolved using rule 41 (whileloop2 -> WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON .)
  ! reduce/reduce conflict for $end resolved using rule 41 (whileloop2 -> WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON .)
  ! reduce/reduce conflict for PARANCLOSE resolved using rule 41 (whileloop2 -> WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON .)
    PLUS            reduce using rule 41 (whileloop2 -> WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON .)
    MINUS           reduce using rule 41 (whileloop2 -> WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON .)
    $end            reduce using rule 41 (whileloop2 -> WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 41 (whileloop2 -> WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON .)

  ! PLUS            [ reduce using rule 60 (whileloop -> WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON .) ]
  ! MINUS           [ reduce using rule 60 (whileloop -> WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON .) ]
  ! $end            [ reduce using rule 60 (whileloop -> WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON .) ]
  ! PARANCLOSE      [ reduce using rule 60 (whileloop -> WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON .) ]


state 209

    (58) whileloop -> WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON .

    PLUS            reduce using rule 58 (whileloop -> WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON .)
    MINUS           reduce using rule 58 (whileloop -> WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON .)
    $end            reduce using rule 58 (whileloop -> WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 58 (whileloop -> WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON .)


state 210

    (59) whileloop -> WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON .

    PLUS            reduce using rule 59 (whileloop -> WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON .)
    MINUS           reduce using rule 59 (whileloop -> WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON .)
    $end            reduce using rule 59 (whileloop -> WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 59 (whileloop -> WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON .)


state 211

    (70) forloop -> FOR ID IN RANGE PARANOPEN term PARANCLOSE . COLON

    COLON           shift and go to state 231


state 212

    (71) forloop -> FOR ID IN RANGE PARANOPEN LEN PARANOPEN . ID PARANCLOSE PARANCLOSE COLON

    ID              shift and go to state 232


state 213

    (74) forloop -> FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON .

    PLUS            reduce using rule 74 (forloop -> FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON .)
    MINUS           reduce using rule 74 (forloop -> FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON .)
    $end            reduce using rule 74 (forloop -> FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 74 (forloop -> FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON .)


state 214

    (65) forloop2 -> LEVEL1 FOR ID IN RANGE PARANOPEN term PARANCLOSE . COLON

    COLON           shift and go to state 233


state 215

    (66) forloop2 -> LEVEL1 FOR ID IN RANGE PARANOPEN LEN PARANOPEN . ID PARANCLOSE PARANCLOSE COLON

    ID              shift and go to state 234


state 216

    (69) forloop2 -> LEVEL1 FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON .

    PLUS            reduce using rule 69 (forloop2 -> LEVEL1 FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON .)
    MINUS           reduce using rule 69 (forloop2 -> LEVEL1 FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON .)
    $end            reduce using rule 69 (forloop2 -> LEVEL1 FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 69 (forloop2 -> LEVEL1 FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON .)


state 217

    (29) whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON .

    PLUS            reduce using rule 29 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON .)
    MINUS           reduce using rule 29 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON .)
    $end            reduce using rule 29 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 29 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON .)


state 218

    (27) whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON .

    PLUS            reduce using rule 27 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON .)
    MINUS           reduce using rule 27 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON .)
    $end            reduce using rule 27 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 27 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON .)


state 219

    (28) whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON .

    PLUS            reduce using rule 28 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON .)
    MINUS           reduce using rule 28 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON .)
    $end            reduce using rule 28 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 28 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON .)


state 220

    (32) whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON .

    PLUS            reduce using rule 32 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON .)
    MINUS           reduce using rule 32 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON .)
    $end            reduce using rule 32 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 32 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON .)


state 221

    (30) whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON .

    PLUS            reduce using rule 30 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON .)
    MINUS           reduce using rule 30 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON .)
    $end            reduce using rule 30 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 30 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON .)


state 222

    (31) whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON .

    PLUS            reduce using rule 31 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON .)
    MINUS           reduce using rule 31 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON .)
    $end            reduce using rule 31 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 31 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON .)


state 223

    (35) whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON .

    PLUS            reduce using rule 35 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON .)
    MINUS           reduce using rule 35 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON .)
    $end            reduce using rule 35 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 35 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON .)


state 224

    (33) whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON .

    PLUS            reduce using rule 33 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON .)
    MINUS           reduce using rule 33 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON .)
    $end            reduce using rule 33 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 33 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON .)


state 225

    (34) whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON .

    PLUS            reduce using rule 34 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON .)
    MINUS           reduce using rule 34 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON .)
    $end            reduce using rule 34 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 34 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON .)


state 226

    (38) whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON .

    PLUS            reduce using rule 38 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON .)
    MINUS           reduce using rule 38 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON .)
    $end            reduce using rule 38 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 38 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON .)


state 227

    (36) whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON .

    PLUS            reduce using rule 36 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON .)
    MINUS           reduce using rule 36 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON .)
    $end            reduce using rule 36 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 36 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON .)


state 228

    (37) whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON .

    PLUS            reduce using rule 37 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON .)
    MINUS           reduce using rule 37 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON .)
    $end            reduce using rule 37 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 37 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON .)


state 229

    (39) whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON .

    PLUS            reduce using rule 39 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON .)
    MINUS           reduce using rule 39 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON .)
    $end            reduce using rule 39 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 39 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON .)


state 230

    (40) whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON .

    PLUS            reduce using rule 40 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON .)
    MINUS           reduce using rule 40 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON .)
    $end            reduce using rule 40 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 40 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON .)


state 231

    (70) forloop -> FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON .

    PLUS            reduce using rule 70 (forloop -> FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON .)
    MINUS           reduce using rule 70 (forloop -> FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON .)
    $end            reduce using rule 70 (forloop -> FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 70 (forloop -> FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON .)


state 232

    (71) forloop -> FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID . PARANCLOSE PARANCLOSE COLON

    PARANCLOSE      shift and go to state 235


state 233

    (65) forloop2 -> LEVEL1 FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON .

    PLUS            reduce using rule 65 (forloop2 -> LEVEL1 FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON .)
    MINUS           reduce using rule 65 (forloop2 -> LEVEL1 FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON .)
    $end            reduce using rule 65 (forloop2 -> LEVEL1 FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 65 (forloop2 -> LEVEL1 FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON .)


state 234

    (66) forloop2 -> LEVEL1 FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID . PARANCLOSE PARANCLOSE COLON

    PARANCLOSE      shift and go to state 236


state 235

    (71) forloop -> FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 237


state 236

    (66) forloop2 -> LEVEL1 FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 238


state 237

    (71) forloop -> FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE . COLON

    COLON           shift and go to state 239


state 238

    (66) forloop2 -> LEVEL1 FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE . COLON

    COLON           shift and go to state 240


state 239

    (71) forloop -> FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON .

    PLUS            reduce using rule 71 (forloop -> FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON .)
    MINUS           reduce using rule 71 (forloop -> FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON .)
    $end            reduce using rule 71 (forloop -> FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 71 (forloop -> FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON .)


state 240

    (66) forloop2 -> LEVEL1 FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON .

    PLUS            reduce using rule 66 (forloop2 -> LEVEL1 FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON .)
    MINUS           reduce using rule 66 (forloop2 -> LEVEL1 FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON .)
    $end            reduce using rule 66 (forloop2 -> LEVEL1 FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 66 (forloop2 -> LEVEL1 FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MINUS in state 0 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 6 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 14 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 21 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 35 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 35 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 36 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 36 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 38 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 46 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 46 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 47 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 47 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 61 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 63 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 66 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 82 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 82 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 83 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 83 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 88 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 88 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 89 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 89 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 100 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 119 resolved as shift
WARNING: shift/reduce conflict for PARANCLOSE in state 124 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 124 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 124 resolved as shift
WARNING: shift/reduce conflict for PARANCLOSE in state 125 resolved as shift
WARNING: shift/reduce conflict for PARANCLOSE in state 126 resolved as shift
WARNING: shift/reduce conflict for PARANCLOSE in state 147 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 147 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 147 resolved as shift
WARNING: shift/reduce conflict for PARANCLOSE in state 148 resolved as shift
WARNING: shift/reduce conflict for PARANCLOSE in state 149 resolved as shift
WARNING: reduce/reduce conflict in state 208 resolved using rule (whileloop2 -> WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON)
WARNING: rejected rule (whileloop -> WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON) in state 208
WARNING: Rule (whileloop -> WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON) is never reduced
