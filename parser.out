Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    BIT_AND
    BIT_OR
    COMMA
    DEF
    EMP_LIST
    EMP_SET
    EMP_TUPLE
    EQEQ
    FLOWERCLOSE
    FLOWEROPEN
    IF
    LEVEL2
    LEVEL3
    MOD
    NAME
    NEWLINE
    NOTEQ
    OR

Grammar

Rule 0     S' -> expression
Rule 1     expression -> ID EQUAL expression
Rule 2     expression -> ID EQUAL STR_CONST
Rule 3     expression -> expression PLUS term
Rule 4     expression -> PRINT expression
Rule 5     expression -> PRINT PARANOPEN ID PARANCLOSE
Rule 6     expression -> expression MINUS term
Rule 7     expression -> MINUS term
Rule 8     expression -> term
Rule 9     term -> term MULTIPLY factor
Rule 10    term -> term DIVIDE factor
Rule 11    term -> factor
Rule 12    factor -> INT
Rule 13    factor -> FLOAT
Rule 14    factor -> PARANOPEN expression PARANCLOSE
Rule 15    expression -> WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
Rule 16    expression -> WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
Rule 17    expression -> WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
Rule 18    expression -> WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
Rule 19    expression -> WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
Rule 20    expression -> WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
Rule 21    expression -> WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
Rule 22    expression -> WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
Rule 23    expression -> WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
Rule 24    expression -> WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
Rule 25    expression -> WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
Rule 26    expression -> WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
Rule 27    expression -> WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
Rule 28    expression -> WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
Rule 29    expression -> WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
Rule 30    expression -> WHILE BOOL COLON
Rule 31    expression -> WHILE STR_CONST COLON
Rule 32    expression -> WHILE factor COLON
Rule 33    expression -> WHILE ID COLON
Rule 34    expression -> FOR ID IN RANGE PARANOPEN expression PARANCLOSE COLON
Rule 35    expression -> FOR ID IN STR_CONST COLON
Rule 36    expression -> FOR ID IN ID COLON
Rule 37    expression -> FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
Rule 38    expression -> LEVEL1 ID EQUAL INT
Rule 39    expression -> <empty>
Rule 40    expression -> HASH expression
Rule 41    expression -> HASH ID
Rule 42    expression -> HASH STR_CONST

Terminals, with rules where they appear

AND                  : 
BIT_AND              : 
BIT_OR               : 
BOOL                 : 30
COLON                : 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37
COMMA                : 
DEF                  : 
DIVIDE               : 10
EMP_LIST             : 
EMP_SET              : 
EMP_TUPLE            : 
EQEQ                 : 
EQUAL                : 1 2 15 16 17 38
FLOAT                : 13
FLOWERCLOSE          : 
FLOWEROPEN           : 
FOR                  : 34 35 36 37
GREATER              : 18 19 20
GREATEREQ            : 21 22 23
HASH                 : 40 41 42
ID                   : 1 2 5 15 16 17 17 18 19 20 20 21 22 23 23 24 25 26 26 27 28 29 29 33 34 35 36 36 37 38 41
IF                   : 
IN                   : 34 35 36 37
INT                  : 12 38
LESSER               : 24 25 26
LESSEREQ             : 27 28 29
LEVEL1               : 38
LEVEL2               : 
LEVEL3               : 
MINUS                : 6 7
MOD                  : 
MULTIPLY             : 9
NAME                 : 
NEWLINE              : 
NOTEQ                : 
OR                   : 
PARANCLOSE           : 5 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 34 37
PARANOPEN            : 5 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 34 37
PLUS                 : 3
PRINT                : 4 5
RANGE                : 34
STR_CONST            : 2 16 19 22 25 28 31 35 37 42
WHILE                : 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33
error                : 

Nonterminals, with rules where they appear

expression           : 1 3 4 6 14 34 40 0
factor               : 9 10 11 15 18 21 24 27 32
term                 : 3 6 7 8 9 10

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . ID EQUAL expression
    (2) expression -> . ID EQUAL STR_CONST
    (3) expression -> . expression PLUS term
    (4) expression -> . PRINT expression
    (5) expression -> . PRINT PARANOPEN ID PARANCLOSE
    (6) expression -> . expression MINUS term
    (7) expression -> . MINUS term
    (8) expression -> . term
    (15) expression -> . WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (16) expression -> . WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (17) expression -> . WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (18) expression -> . WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (19) expression -> . WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (20) expression -> . WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (21) expression -> . WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (22) expression -> . WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (23) expression -> . WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (24) expression -> . WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (25) expression -> . WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (26) expression -> . WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (27) expression -> . WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (28) expression -> . WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (29) expression -> . WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (30) expression -> . WHILE BOOL COLON
    (31) expression -> . WHILE STR_CONST COLON
    (32) expression -> . WHILE factor COLON
    (33) expression -> . WHILE ID COLON
    (34) expression -> . FOR ID IN RANGE PARANOPEN expression PARANCLOSE COLON
    (35) expression -> . FOR ID IN STR_CONST COLON
    (36) expression -> . FOR ID IN ID COLON
    (37) expression -> . FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (38) expression -> . LEVEL1 ID EQUAL INT
    (39) expression -> .
    (40) expression -> . HASH expression
    (41) expression -> . HASH ID
    (42) expression -> . HASH STR_CONST
    (9) term -> . term MULTIPLY factor
    (10) term -> . term DIVIDE factor
    (11) term -> . factor
    (12) factor -> . INT
    (13) factor -> . FLOAT
    (14) factor -> . PARANOPEN expression PARANCLOSE

  ! shift/reduce conflict for MINUS resolved as shift
    ID              shift and go to state 2
    PRINT           shift and go to state 4
    MINUS           shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 9
    LEVEL1          shift and go to state 10
    PLUS            reduce using rule 39 (expression -> .)
    $end            reduce using rule 39 (expression -> .)
    HASH            shift and go to state 12
    INT             shift and go to state 11
    FLOAT           shift and go to state 13
    PARANOPEN       shift and go to state 5

  ! MINUS           [ reduce using rule 39 (expression -> .) ]

    expression                     shift and go to state 1
    term                           shift and go to state 3
    factor                         shift and go to state 8

state 1

    (0) S' -> expression .
    (3) expression -> expression . PLUS term
    (6) expression -> expression . MINUS term

    PLUS            shift and go to state 14
    MINUS           shift and go to state 15


state 2

    (1) expression -> ID . EQUAL expression
    (2) expression -> ID . EQUAL STR_CONST

    EQUAL           shift and go to state 16


state 3

    (8) expression -> term .
    (9) term -> term . MULTIPLY factor
    (10) term -> term . DIVIDE factor

    PLUS            reduce using rule 8 (expression -> term .)
    MINUS           reduce using rule 8 (expression -> term .)
    $end            reduce using rule 8 (expression -> term .)
    PARANCLOSE      reduce using rule 8 (expression -> term .)
    MULTIPLY        shift and go to state 17
    DIVIDE          shift and go to state 18


state 4

    (4) expression -> PRINT . expression
    (5) expression -> PRINT . PARANOPEN ID PARANCLOSE
    (1) expression -> . ID EQUAL expression
    (2) expression -> . ID EQUAL STR_CONST
    (3) expression -> . expression PLUS term
    (4) expression -> . PRINT expression
    (5) expression -> . PRINT PARANOPEN ID PARANCLOSE
    (6) expression -> . expression MINUS term
    (7) expression -> . MINUS term
    (8) expression -> . term
    (15) expression -> . WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (16) expression -> . WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (17) expression -> . WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (18) expression -> . WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (19) expression -> . WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (20) expression -> . WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (21) expression -> . WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (22) expression -> . WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (23) expression -> . WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (24) expression -> . WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (25) expression -> . WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (26) expression -> . WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (27) expression -> . WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (28) expression -> . WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (29) expression -> . WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (30) expression -> . WHILE BOOL COLON
    (31) expression -> . WHILE STR_CONST COLON
    (32) expression -> . WHILE factor COLON
    (33) expression -> . WHILE ID COLON
    (34) expression -> . FOR ID IN RANGE PARANOPEN expression PARANCLOSE COLON
    (35) expression -> . FOR ID IN STR_CONST COLON
    (36) expression -> . FOR ID IN ID COLON
    (37) expression -> . FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (38) expression -> . LEVEL1 ID EQUAL INT
    (39) expression -> .
    (40) expression -> . HASH expression
    (41) expression -> . HASH ID
    (42) expression -> . HASH STR_CONST
    (9) term -> . term MULTIPLY factor
    (10) term -> . term DIVIDE factor
    (11) term -> . factor
    (12) factor -> . INT
    (13) factor -> . FLOAT
    (14) factor -> . PARANOPEN expression PARANCLOSE

  ! shift/reduce conflict for MINUS resolved as shift
    PARANOPEN       shift and go to state 20
    ID              shift and go to state 2
    PRINT           shift and go to state 4
    MINUS           shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 9
    LEVEL1          shift and go to state 10
    PLUS            reduce using rule 39 (expression -> .)
    $end            reduce using rule 39 (expression -> .)
    PARANCLOSE      reduce using rule 39 (expression -> .)
    HASH            shift and go to state 12
    INT             shift and go to state 11
    FLOAT           shift and go to state 13

  ! MINUS           [ reduce using rule 39 (expression -> .) ]

    expression                     shift and go to state 19
    term                           shift and go to state 3
    factor                         shift and go to state 8

state 5

    (14) factor -> PARANOPEN . expression PARANCLOSE
    (1) expression -> . ID EQUAL expression
    (2) expression -> . ID EQUAL STR_CONST
    (3) expression -> . expression PLUS term
    (4) expression -> . PRINT expression
    (5) expression -> . PRINT PARANOPEN ID PARANCLOSE
    (6) expression -> . expression MINUS term
    (7) expression -> . MINUS term
    (8) expression -> . term
    (15) expression -> . WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (16) expression -> . WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (17) expression -> . WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (18) expression -> . WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (19) expression -> . WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (20) expression -> . WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (21) expression -> . WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (22) expression -> . WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (23) expression -> . WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (24) expression -> . WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (25) expression -> . WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (26) expression -> . WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (27) expression -> . WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (28) expression -> . WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (29) expression -> . WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (30) expression -> . WHILE BOOL COLON
    (31) expression -> . WHILE STR_CONST COLON
    (32) expression -> . WHILE factor COLON
    (33) expression -> . WHILE ID COLON
    (34) expression -> . FOR ID IN RANGE PARANOPEN expression PARANCLOSE COLON
    (35) expression -> . FOR ID IN STR_CONST COLON
    (36) expression -> . FOR ID IN ID COLON
    (37) expression -> . FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (38) expression -> . LEVEL1 ID EQUAL INT
    (39) expression -> .
    (40) expression -> . HASH expression
    (41) expression -> . HASH ID
    (42) expression -> . HASH STR_CONST
    (9) term -> . term MULTIPLY factor
    (10) term -> . term DIVIDE factor
    (11) term -> . factor
    (12) factor -> . INT
    (13) factor -> . FLOAT
    (14) factor -> . PARANOPEN expression PARANCLOSE

  ! shift/reduce conflict for MINUS resolved as shift
    ID              shift and go to state 2
    PRINT           shift and go to state 4
    MINUS           shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 9
    LEVEL1          shift and go to state 10
    PARANCLOSE      reduce using rule 39 (expression -> .)
    PLUS            reduce using rule 39 (expression -> .)
    HASH            shift and go to state 12
    INT             shift and go to state 11
    FLOAT           shift and go to state 13
    PARANOPEN       shift and go to state 5

  ! MINUS           [ reduce using rule 39 (expression -> .) ]

    expression                     shift and go to state 21
    term                           shift and go to state 3
    factor                         shift and go to state 8

state 6

    (7) expression -> MINUS . term
    (9) term -> . term MULTIPLY factor
    (10) term -> . term DIVIDE factor
    (11) term -> . factor
    (12) factor -> . INT
    (13) factor -> . FLOAT
    (14) factor -> . PARANOPEN expression PARANCLOSE

    INT             shift and go to state 11
    FLOAT           shift and go to state 13
    PARANOPEN       shift and go to state 5

    term                           shift and go to state 22
    factor                         shift and go to state 8

state 7

    (15) expression -> WHILE . PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (16) expression -> WHILE . PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (17) expression -> WHILE . PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (18) expression -> WHILE . PARANOPEN ID GREATER factor PARANCLOSE COLON
    (19) expression -> WHILE . PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (20) expression -> WHILE . PARANOPEN ID GREATER ID PARANCLOSE COLON
    (21) expression -> WHILE . PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (22) expression -> WHILE . PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (23) expression -> WHILE . PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (24) expression -> WHILE . PARANOPEN ID LESSER factor PARANCLOSE COLON
    (25) expression -> WHILE . PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (26) expression -> WHILE . PARANOPEN ID LESSER ID PARANCLOSE COLON
    (27) expression -> WHILE . PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (28) expression -> WHILE . PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (29) expression -> WHILE . PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (30) expression -> WHILE . BOOL COLON
    (31) expression -> WHILE . STR_CONST COLON
    (32) expression -> WHILE . factor COLON
    (33) expression -> WHILE . ID COLON
    (12) factor -> . INT
    (13) factor -> . FLOAT
    (14) factor -> . PARANOPEN expression PARANCLOSE

    PARANOPEN       shift and go to state 23
    BOOL            shift and go to state 27
    STR_CONST       shift and go to state 26
    ID              shift and go to state 24
    INT             shift and go to state 11
    FLOAT           shift and go to state 13

    factor                         shift and go to state 25

state 8

    (11) term -> factor .

    MULTIPLY        reduce using rule 11 (term -> factor .)
    DIVIDE          reduce using rule 11 (term -> factor .)
    PLUS            reduce using rule 11 (term -> factor .)
    MINUS           reduce using rule 11 (term -> factor .)
    $end            reduce using rule 11 (term -> factor .)
    PARANCLOSE      reduce using rule 11 (term -> factor .)


state 9

    (34) expression -> FOR . ID IN RANGE PARANOPEN expression PARANCLOSE COLON
    (35) expression -> FOR . ID IN STR_CONST COLON
    (36) expression -> FOR . ID IN ID COLON
    (37) expression -> FOR . ID IN PARANOPEN STR_CONST PARANCLOSE COLON

    ID              shift and go to state 28


state 10

    (38) expression -> LEVEL1 . ID EQUAL INT

    ID              shift and go to state 29


state 11

    (12) factor -> INT .

    MULTIPLY        reduce using rule 12 (factor -> INT .)
    DIVIDE          reduce using rule 12 (factor -> INT .)
    PLUS            reduce using rule 12 (factor -> INT .)
    MINUS           reduce using rule 12 (factor -> INT .)
    $end            reduce using rule 12 (factor -> INT .)
    PARANCLOSE      reduce using rule 12 (factor -> INT .)
    COLON           reduce using rule 12 (factor -> INT .)


state 12

    (40) expression -> HASH . expression
    (41) expression -> HASH . ID
    (42) expression -> HASH . STR_CONST
    (1) expression -> . ID EQUAL expression
    (2) expression -> . ID EQUAL STR_CONST
    (3) expression -> . expression PLUS term
    (4) expression -> . PRINT expression
    (5) expression -> . PRINT PARANOPEN ID PARANCLOSE
    (6) expression -> . expression MINUS term
    (7) expression -> . MINUS term
    (8) expression -> . term
    (15) expression -> . WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (16) expression -> . WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (17) expression -> . WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (18) expression -> . WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (19) expression -> . WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (20) expression -> . WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (21) expression -> . WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (22) expression -> . WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (23) expression -> . WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (24) expression -> . WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (25) expression -> . WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (26) expression -> . WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (27) expression -> . WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (28) expression -> . WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (29) expression -> . WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (30) expression -> . WHILE BOOL COLON
    (31) expression -> . WHILE STR_CONST COLON
    (32) expression -> . WHILE factor COLON
    (33) expression -> . WHILE ID COLON
    (34) expression -> . FOR ID IN RANGE PARANOPEN expression PARANCLOSE COLON
    (35) expression -> . FOR ID IN STR_CONST COLON
    (36) expression -> . FOR ID IN ID COLON
    (37) expression -> . FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (38) expression -> . LEVEL1 ID EQUAL INT
    (39) expression -> .
    (40) expression -> . HASH expression
    (41) expression -> . HASH ID
    (42) expression -> . HASH STR_CONST
    (9) term -> . term MULTIPLY factor
    (10) term -> . term DIVIDE factor
    (11) term -> . factor
    (12) factor -> . INT
    (13) factor -> . FLOAT
    (14) factor -> . PARANOPEN expression PARANCLOSE

  ! shift/reduce conflict for MINUS resolved as shift
    ID              shift and go to state 31
    STR_CONST       shift and go to state 32
    PRINT           shift and go to state 4
    MINUS           shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 9
    LEVEL1          shift and go to state 10
    PLUS            reduce using rule 39 (expression -> .)
    $end            reduce using rule 39 (expression -> .)
    PARANCLOSE      reduce using rule 39 (expression -> .)
    HASH            shift and go to state 12
    INT             shift and go to state 11
    FLOAT           shift and go to state 13
    PARANOPEN       shift and go to state 5

  ! MINUS           [ reduce using rule 39 (expression -> .) ]

    expression                     shift and go to state 30
    term                           shift and go to state 3
    factor                         shift and go to state 8

state 13

    (13) factor -> FLOAT .

    MULTIPLY        reduce using rule 13 (factor -> FLOAT .)
    DIVIDE          reduce using rule 13 (factor -> FLOAT .)
    PLUS            reduce using rule 13 (factor -> FLOAT .)
    MINUS           reduce using rule 13 (factor -> FLOAT .)
    $end            reduce using rule 13 (factor -> FLOAT .)
    PARANCLOSE      reduce using rule 13 (factor -> FLOAT .)
    COLON           reduce using rule 13 (factor -> FLOAT .)


state 14

    (3) expression -> expression PLUS . term
    (9) term -> . term MULTIPLY factor
    (10) term -> . term DIVIDE factor
    (11) term -> . factor
    (12) factor -> . INT
    (13) factor -> . FLOAT
    (14) factor -> . PARANOPEN expression PARANCLOSE

    INT             shift and go to state 11
    FLOAT           shift and go to state 13
    PARANOPEN       shift and go to state 5

    term                           shift and go to state 33
    factor                         shift and go to state 8

state 15

    (6) expression -> expression MINUS . term
    (9) term -> . term MULTIPLY factor
    (10) term -> . term DIVIDE factor
    (11) term -> . factor
    (12) factor -> . INT
    (13) factor -> . FLOAT
    (14) factor -> . PARANOPEN expression PARANCLOSE

    INT             shift and go to state 11
    FLOAT           shift and go to state 13
    PARANOPEN       shift and go to state 5

    term                           shift and go to state 34
    factor                         shift and go to state 8

state 16

    (1) expression -> ID EQUAL . expression
    (2) expression -> ID EQUAL . STR_CONST
    (1) expression -> . ID EQUAL expression
    (2) expression -> . ID EQUAL STR_CONST
    (3) expression -> . expression PLUS term
    (4) expression -> . PRINT expression
    (5) expression -> . PRINT PARANOPEN ID PARANCLOSE
    (6) expression -> . expression MINUS term
    (7) expression -> . MINUS term
    (8) expression -> . term
    (15) expression -> . WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (16) expression -> . WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (17) expression -> . WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (18) expression -> . WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (19) expression -> . WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (20) expression -> . WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (21) expression -> . WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (22) expression -> . WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (23) expression -> . WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (24) expression -> . WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (25) expression -> . WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (26) expression -> . WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (27) expression -> . WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (28) expression -> . WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (29) expression -> . WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (30) expression -> . WHILE BOOL COLON
    (31) expression -> . WHILE STR_CONST COLON
    (32) expression -> . WHILE factor COLON
    (33) expression -> . WHILE ID COLON
    (34) expression -> . FOR ID IN RANGE PARANOPEN expression PARANCLOSE COLON
    (35) expression -> . FOR ID IN STR_CONST COLON
    (36) expression -> . FOR ID IN ID COLON
    (37) expression -> . FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (38) expression -> . LEVEL1 ID EQUAL INT
    (39) expression -> .
    (40) expression -> . HASH expression
    (41) expression -> . HASH ID
    (42) expression -> . HASH STR_CONST
    (9) term -> . term MULTIPLY factor
    (10) term -> . term DIVIDE factor
    (11) term -> . factor
    (12) factor -> . INT
    (13) factor -> . FLOAT
    (14) factor -> . PARANOPEN expression PARANCLOSE

  ! shift/reduce conflict for MINUS resolved as shift
    STR_CONST       shift and go to state 36
    ID              shift and go to state 2
    PRINT           shift and go to state 4
    MINUS           shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 9
    LEVEL1          shift and go to state 10
    PLUS            reduce using rule 39 (expression -> .)
    $end            reduce using rule 39 (expression -> .)
    PARANCLOSE      reduce using rule 39 (expression -> .)
    HASH            shift and go to state 12
    INT             shift and go to state 11
    FLOAT           shift and go to state 13
    PARANOPEN       shift and go to state 5

  ! MINUS           [ reduce using rule 39 (expression -> .) ]

    expression                     shift and go to state 35
    term                           shift and go to state 3
    factor                         shift and go to state 8

state 17

    (9) term -> term MULTIPLY . factor
    (12) factor -> . INT
    (13) factor -> . FLOAT
    (14) factor -> . PARANOPEN expression PARANCLOSE

    INT             shift and go to state 11
    FLOAT           shift and go to state 13
    PARANOPEN       shift and go to state 5

    factor                         shift and go to state 37

state 18

    (10) term -> term DIVIDE . factor
    (12) factor -> . INT
    (13) factor -> . FLOAT
    (14) factor -> . PARANOPEN expression PARANCLOSE

    INT             shift and go to state 11
    FLOAT           shift and go to state 13
    PARANOPEN       shift and go to state 5

    factor                         shift and go to state 38

state 19

    (4) expression -> PRINT expression .
    (3) expression -> expression . PLUS term
    (6) expression -> expression . MINUS term

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    $end            reduce using rule 4 (expression -> PRINT expression .)
    PARANCLOSE      reduce using rule 4 (expression -> PRINT expression .)
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15

  ! PLUS            [ reduce using rule 4 (expression -> PRINT expression .) ]
  ! MINUS           [ reduce using rule 4 (expression -> PRINT expression .) ]


state 20

    (5) expression -> PRINT PARANOPEN . ID PARANCLOSE
    (14) factor -> PARANOPEN . expression PARANCLOSE
    (1) expression -> . ID EQUAL expression
    (2) expression -> . ID EQUAL STR_CONST
    (3) expression -> . expression PLUS term
    (4) expression -> . PRINT expression
    (5) expression -> . PRINT PARANOPEN ID PARANCLOSE
    (6) expression -> . expression MINUS term
    (7) expression -> . MINUS term
    (8) expression -> . term
    (15) expression -> . WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (16) expression -> . WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (17) expression -> . WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (18) expression -> . WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (19) expression -> . WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (20) expression -> . WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (21) expression -> . WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (22) expression -> . WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (23) expression -> . WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (24) expression -> . WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (25) expression -> . WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (26) expression -> . WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (27) expression -> . WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (28) expression -> . WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (29) expression -> . WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (30) expression -> . WHILE BOOL COLON
    (31) expression -> . WHILE STR_CONST COLON
    (32) expression -> . WHILE factor COLON
    (33) expression -> . WHILE ID COLON
    (34) expression -> . FOR ID IN RANGE PARANOPEN expression PARANCLOSE COLON
    (35) expression -> . FOR ID IN STR_CONST COLON
    (36) expression -> . FOR ID IN ID COLON
    (37) expression -> . FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (38) expression -> . LEVEL1 ID EQUAL INT
    (39) expression -> .
    (40) expression -> . HASH expression
    (41) expression -> . HASH ID
    (42) expression -> . HASH STR_CONST
    (9) term -> . term MULTIPLY factor
    (10) term -> . term DIVIDE factor
    (11) term -> . factor
    (12) factor -> . INT
    (13) factor -> . FLOAT
    (14) factor -> . PARANOPEN expression PARANCLOSE

  ! shift/reduce conflict for MINUS resolved as shift
    ID              shift and go to state 39
    PRINT           shift and go to state 4
    MINUS           shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 9
    LEVEL1          shift and go to state 10
    PARANCLOSE      reduce using rule 39 (expression -> .)
    PLUS            reduce using rule 39 (expression -> .)
    HASH            shift and go to state 12
    INT             shift and go to state 11
    FLOAT           shift and go to state 13
    PARANOPEN       shift and go to state 5

  ! MINUS           [ reduce using rule 39 (expression -> .) ]

    expression                     shift and go to state 21
    term                           shift and go to state 3
    factor                         shift and go to state 8

state 21

    (14) factor -> PARANOPEN expression . PARANCLOSE
    (3) expression -> expression . PLUS term
    (6) expression -> expression . MINUS term

    PARANCLOSE      shift and go to state 40
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15


state 22

    (7) expression -> MINUS term .
    (9) term -> term . MULTIPLY factor
    (10) term -> term . DIVIDE factor

    PLUS            reduce using rule 7 (expression -> MINUS term .)
    MINUS           reduce using rule 7 (expression -> MINUS term .)
    $end            reduce using rule 7 (expression -> MINUS term .)
    PARANCLOSE      reduce using rule 7 (expression -> MINUS term .)
    MULTIPLY        shift and go to state 17
    DIVIDE          shift and go to state 18


state 23

    (15) expression -> WHILE PARANOPEN . ID EQUAL factor PARANCLOSE COLON
    (16) expression -> WHILE PARANOPEN . ID EQUAL STR_CONST PARANCLOSE COLON
    (17) expression -> WHILE PARANOPEN . ID EQUAL ID PARANCLOSE COLON
    (18) expression -> WHILE PARANOPEN . ID GREATER factor PARANCLOSE COLON
    (19) expression -> WHILE PARANOPEN . ID GREATER STR_CONST PARANCLOSE COLON
    (20) expression -> WHILE PARANOPEN . ID GREATER ID PARANCLOSE COLON
    (21) expression -> WHILE PARANOPEN . ID GREATEREQ factor PARANCLOSE COLON
    (22) expression -> WHILE PARANOPEN . ID GREATEREQ STR_CONST PARANCLOSE COLON
    (23) expression -> WHILE PARANOPEN . ID GREATEREQ ID PARANCLOSE COLON
    (24) expression -> WHILE PARANOPEN . ID LESSER factor PARANCLOSE COLON
    (25) expression -> WHILE PARANOPEN . ID LESSER STR_CONST PARANCLOSE COLON
    (26) expression -> WHILE PARANOPEN . ID LESSER ID PARANCLOSE COLON
    (27) expression -> WHILE PARANOPEN . ID LESSEREQ factor PARANCLOSE COLON
    (28) expression -> WHILE PARANOPEN . ID LESSEREQ STR_CONST PARANCLOSE COLON
    (29) expression -> WHILE PARANOPEN . ID LESSEREQ ID PARANCLOSE COLON
    (14) factor -> PARANOPEN . expression PARANCLOSE
    (1) expression -> . ID EQUAL expression
    (2) expression -> . ID EQUAL STR_CONST
    (3) expression -> . expression PLUS term
    (4) expression -> . PRINT expression
    (5) expression -> . PRINT PARANOPEN ID PARANCLOSE
    (6) expression -> . expression MINUS term
    (7) expression -> . MINUS term
    (8) expression -> . term
    (15) expression -> . WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (16) expression -> . WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (17) expression -> . WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (18) expression -> . WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (19) expression -> . WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (20) expression -> . WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (21) expression -> . WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (22) expression -> . WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (23) expression -> . WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (24) expression -> . WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (25) expression -> . WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (26) expression -> . WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (27) expression -> . WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (28) expression -> . WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (29) expression -> . WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (30) expression -> . WHILE BOOL COLON
    (31) expression -> . WHILE STR_CONST COLON
    (32) expression -> . WHILE factor COLON
    (33) expression -> . WHILE ID COLON
    (34) expression -> . FOR ID IN RANGE PARANOPEN expression PARANCLOSE COLON
    (35) expression -> . FOR ID IN STR_CONST COLON
    (36) expression -> . FOR ID IN ID COLON
    (37) expression -> . FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (38) expression -> . LEVEL1 ID EQUAL INT
    (39) expression -> .
    (40) expression -> . HASH expression
    (41) expression -> . HASH ID
    (42) expression -> . HASH STR_CONST
    (9) term -> . term MULTIPLY factor
    (10) term -> . term DIVIDE factor
    (11) term -> . factor
    (12) factor -> . INT
    (13) factor -> . FLOAT
    (14) factor -> . PARANOPEN expression PARANCLOSE

  ! shift/reduce conflict for MINUS resolved as shift
    ID              shift and go to state 41
    PRINT           shift and go to state 4
    MINUS           shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 9
    LEVEL1          shift and go to state 10
    PARANCLOSE      reduce using rule 39 (expression -> .)
    PLUS            reduce using rule 39 (expression -> .)
    HASH            shift and go to state 12
    INT             shift and go to state 11
    FLOAT           shift and go to state 13
    PARANOPEN       shift and go to state 5

  ! MINUS           [ reduce using rule 39 (expression -> .) ]

    factor                         shift and go to state 8
    expression                     shift and go to state 21
    term                           shift and go to state 3

state 24

    (33) expression -> WHILE ID . COLON

    COLON           shift and go to state 42


state 25

    (32) expression -> WHILE factor . COLON

    COLON           shift and go to state 43


state 26

    (31) expression -> WHILE STR_CONST . COLON

    COLON           shift and go to state 44


state 27

    (30) expression -> WHILE BOOL . COLON

    COLON           shift and go to state 45


state 28

    (34) expression -> FOR ID . IN RANGE PARANOPEN expression PARANCLOSE COLON
    (35) expression -> FOR ID . IN STR_CONST COLON
    (36) expression -> FOR ID . IN ID COLON
    (37) expression -> FOR ID . IN PARANOPEN STR_CONST PARANCLOSE COLON

    IN              shift and go to state 46


state 29

    (38) expression -> LEVEL1 ID . EQUAL INT

    EQUAL           shift and go to state 47


state 30

    (40) expression -> HASH expression .
    (3) expression -> expression . PLUS term
    (6) expression -> expression . MINUS term

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    $end            reduce using rule 40 (expression -> HASH expression .)
    PARANCLOSE      reduce using rule 40 (expression -> HASH expression .)
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15

  ! PLUS            [ reduce using rule 40 (expression -> HASH expression .) ]
  ! MINUS           [ reduce using rule 40 (expression -> HASH expression .) ]


state 31

    (41) expression -> HASH ID .
    (1) expression -> ID . EQUAL expression
    (2) expression -> ID . EQUAL STR_CONST

    PLUS            reduce using rule 41 (expression -> HASH ID .)
    MINUS           reduce using rule 41 (expression -> HASH ID .)
    $end            reduce using rule 41 (expression -> HASH ID .)
    PARANCLOSE      reduce using rule 41 (expression -> HASH ID .)
    EQUAL           shift and go to state 16


state 32

    (42) expression -> HASH STR_CONST .

    PLUS            reduce using rule 42 (expression -> HASH STR_CONST .)
    MINUS           reduce using rule 42 (expression -> HASH STR_CONST .)
    $end            reduce using rule 42 (expression -> HASH STR_CONST .)
    PARANCLOSE      reduce using rule 42 (expression -> HASH STR_CONST .)


state 33

    (3) expression -> expression PLUS term .
    (9) term -> term . MULTIPLY factor
    (10) term -> term . DIVIDE factor

    PLUS            reduce using rule 3 (expression -> expression PLUS term .)
    MINUS           reduce using rule 3 (expression -> expression PLUS term .)
    $end            reduce using rule 3 (expression -> expression PLUS term .)
    PARANCLOSE      reduce using rule 3 (expression -> expression PLUS term .)
    MULTIPLY        shift and go to state 17
    DIVIDE          shift and go to state 18


state 34

    (6) expression -> expression MINUS term .
    (9) term -> term . MULTIPLY factor
    (10) term -> term . DIVIDE factor

    PLUS            reduce using rule 6 (expression -> expression MINUS term .)
    MINUS           reduce using rule 6 (expression -> expression MINUS term .)
    $end            reduce using rule 6 (expression -> expression MINUS term .)
    PARANCLOSE      reduce using rule 6 (expression -> expression MINUS term .)
    MULTIPLY        shift and go to state 17
    DIVIDE          shift and go to state 18


state 35

    (1) expression -> ID EQUAL expression .
    (3) expression -> expression . PLUS term
    (6) expression -> expression . MINUS term

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    $end            reduce using rule 1 (expression -> ID EQUAL expression .)
    PARANCLOSE      reduce using rule 1 (expression -> ID EQUAL expression .)
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15

  ! PLUS            [ reduce using rule 1 (expression -> ID EQUAL expression .) ]
  ! MINUS           [ reduce using rule 1 (expression -> ID EQUAL expression .) ]


state 36

    (2) expression -> ID EQUAL STR_CONST .

    PLUS            reduce using rule 2 (expression -> ID EQUAL STR_CONST .)
    MINUS           reduce using rule 2 (expression -> ID EQUAL STR_CONST .)
    $end            reduce using rule 2 (expression -> ID EQUAL STR_CONST .)
    PARANCLOSE      reduce using rule 2 (expression -> ID EQUAL STR_CONST .)


state 37

    (9) term -> term MULTIPLY factor .

    MULTIPLY        reduce using rule 9 (term -> term MULTIPLY factor .)
    DIVIDE          reduce using rule 9 (term -> term MULTIPLY factor .)
    PLUS            reduce using rule 9 (term -> term MULTIPLY factor .)
    MINUS           reduce using rule 9 (term -> term MULTIPLY factor .)
    $end            reduce using rule 9 (term -> term MULTIPLY factor .)
    PARANCLOSE      reduce using rule 9 (term -> term MULTIPLY factor .)


state 38

    (10) term -> term DIVIDE factor .

    MULTIPLY        reduce using rule 10 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 10 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 10 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 10 (term -> term DIVIDE factor .)
    $end            reduce using rule 10 (term -> term DIVIDE factor .)
    PARANCLOSE      reduce using rule 10 (term -> term DIVIDE factor .)


state 39

    (5) expression -> PRINT PARANOPEN ID . PARANCLOSE
    (1) expression -> ID . EQUAL expression
    (2) expression -> ID . EQUAL STR_CONST

    PARANCLOSE      shift and go to state 48
    EQUAL           shift and go to state 16


state 40

    (14) factor -> PARANOPEN expression PARANCLOSE .

    MULTIPLY        reduce using rule 14 (factor -> PARANOPEN expression PARANCLOSE .)
    DIVIDE          reduce using rule 14 (factor -> PARANOPEN expression PARANCLOSE .)
    PLUS            reduce using rule 14 (factor -> PARANOPEN expression PARANCLOSE .)
    MINUS           reduce using rule 14 (factor -> PARANOPEN expression PARANCLOSE .)
    $end            reduce using rule 14 (factor -> PARANOPEN expression PARANCLOSE .)
    PARANCLOSE      reduce using rule 14 (factor -> PARANOPEN expression PARANCLOSE .)
    COLON           reduce using rule 14 (factor -> PARANOPEN expression PARANCLOSE .)


state 41

    (15) expression -> WHILE PARANOPEN ID . EQUAL factor PARANCLOSE COLON
    (16) expression -> WHILE PARANOPEN ID . EQUAL STR_CONST PARANCLOSE COLON
    (17) expression -> WHILE PARANOPEN ID . EQUAL ID PARANCLOSE COLON
    (18) expression -> WHILE PARANOPEN ID . GREATER factor PARANCLOSE COLON
    (19) expression -> WHILE PARANOPEN ID . GREATER STR_CONST PARANCLOSE COLON
    (20) expression -> WHILE PARANOPEN ID . GREATER ID PARANCLOSE COLON
    (21) expression -> WHILE PARANOPEN ID . GREATEREQ factor PARANCLOSE COLON
    (22) expression -> WHILE PARANOPEN ID . GREATEREQ STR_CONST PARANCLOSE COLON
    (23) expression -> WHILE PARANOPEN ID . GREATEREQ ID PARANCLOSE COLON
    (24) expression -> WHILE PARANOPEN ID . LESSER factor PARANCLOSE COLON
    (25) expression -> WHILE PARANOPEN ID . LESSER STR_CONST PARANCLOSE COLON
    (26) expression -> WHILE PARANOPEN ID . LESSER ID PARANCLOSE COLON
    (27) expression -> WHILE PARANOPEN ID . LESSEREQ factor PARANCLOSE COLON
    (28) expression -> WHILE PARANOPEN ID . LESSEREQ STR_CONST PARANCLOSE COLON
    (29) expression -> WHILE PARANOPEN ID . LESSEREQ ID PARANCLOSE COLON
    (1) expression -> ID . EQUAL expression
    (2) expression -> ID . EQUAL STR_CONST

    EQUAL           shift and go to state 49
    GREATER         shift and go to state 50
    GREATEREQ       shift and go to state 51
    LESSER          shift and go to state 52
    LESSEREQ        shift and go to state 53


state 42

    (33) expression -> WHILE ID COLON .

    PLUS            reduce using rule 33 (expression -> WHILE ID COLON .)
    MINUS           reduce using rule 33 (expression -> WHILE ID COLON .)
    $end            reduce using rule 33 (expression -> WHILE ID COLON .)
    PARANCLOSE      reduce using rule 33 (expression -> WHILE ID COLON .)


state 43

    (32) expression -> WHILE factor COLON .

    PLUS            reduce using rule 32 (expression -> WHILE factor COLON .)
    MINUS           reduce using rule 32 (expression -> WHILE factor COLON .)
    $end            reduce using rule 32 (expression -> WHILE factor COLON .)
    PARANCLOSE      reduce using rule 32 (expression -> WHILE factor COLON .)


state 44

    (31) expression -> WHILE STR_CONST COLON .

    PLUS            reduce using rule 31 (expression -> WHILE STR_CONST COLON .)
    MINUS           reduce using rule 31 (expression -> WHILE STR_CONST COLON .)
    $end            reduce using rule 31 (expression -> WHILE STR_CONST COLON .)
    PARANCLOSE      reduce using rule 31 (expression -> WHILE STR_CONST COLON .)


state 45

    (30) expression -> WHILE BOOL COLON .

    PLUS            reduce using rule 30 (expression -> WHILE BOOL COLON .)
    MINUS           reduce using rule 30 (expression -> WHILE BOOL COLON .)
    $end            reduce using rule 30 (expression -> WHILE BOOL COLON .)
    PARANCLOSE      reduce using rule 30 (expression -> WHILE BOOL COLON .)


state 46

    (34) expression -> FOR ID IN . RANGE PARANOPEN expression PARANCLOSE COLON
    (35) expression -> FOR ID IN . STR_CONST COLON
    (36) expression -> FOR ID IN . ID COLON
    (37) expression -> FOR ID IN . PARANOPEN STR_CONST PARANCLOSE COLON

    RANGE           shift and go to state 55
    STR_CONST       shift and go to state 57
    ID              shift and go to state 54
    PARANOPEN       shift and go to state 56


state 47

    (38) expression -> LEVEL1 ID EQUAL . INT

    INT             shift and go to state 58


state 48

    (5) expression -> PRINT PARANOPEN ID PARANCLOSE .

    PLUS            reduce using rule 5 (expression -> PRINT PARANOPEN ID PARANCLOSE .)
    MINUS           reduce using rule 5 (expression -> PRINT PARANOPEN ID PARANCLOSE .)
    $end            reduce using rule 5 (expression -> PRINT PARANOPEN ID PARANCLOSE .)
    PARANCLOSE      reduce using rule 5 (expression -> PRINT PARANOPEN ID PARANCLOSE .)


state 49

    (15) expression -> WHILE PARANOPEN ID EQUAL . factor PARANCLOSE COLON
    (16) expression -> WHILE PARANOPEN ID EQUAL . STR_CONST PARANCLOSE COLON
    (17) expression -> WHILE PARANOPEN ID EQUAL . ID PARANCLOSE COLON
    (1) expression -> ID EQUAL . expression
    (2) expression -> ID EQUAL . STR_CONST
    (12) factor -> . INT
    (13) factor -> . FLOAT
    (14) factor -> . PARANOPEN expression PARANCLOSE
    (1) expression -> . ID EQUAL expression
    (2) expression -> . ID EQUAL STR_CONST
    (3) expression -> . expression PLUS term
    (4) expression -> . PRINT expression
    (5) expression -> . PRINT PARANOPEN ID PARANCLOSE
    (6) expression -> . expression MINUS term
    (7) expression -> . MINUS term
    (8) expression -> . term
    (15) expression -> . WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (16) expression -> . WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (17) expression -> . WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (18) expression -> . WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (19) expression -> . WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (20) expression -> . WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (21) expression -> . WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (22) expression -> . WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (23) expression -> . WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (24) expression -> . WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (25) expression -> . WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (26) expression -> . WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (27) expression -> . WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (28) expression -> . WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (29) expression -> . WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (30) expression -> . WHILE BOOL COLON
    (31) expression -> . WHILE STR_CONST COLON
    (32) expression -> . WHILE factor COLON
    (33) expression -> . WHILE ID COLON
    (34) expression -> . FOR ID IN RANGE PARANOPEN expression PARANCLOSE COLON
    (35) expression -> . FOR ID IN STR_CONST COLON
    (36) expression -> . FOR ID IN ID COLON
    (37) expression -> . FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (38) expression -> . LEVEL1 ID EQUAL INT
    (39) expression -> .
    (40) expression -> . HASH expression
    (41) expression -> . HASH ID
    (42) expression -> . HASH STR_CONST
    (9) term -> . term MULTIPLY factor
    (10) term -> . term DIVIDE factor
    (11) term -> . factor

  ! shift/reduce conflict for MINUS resolved as shift
    STR_CONST       shift and go to state 61
    ID              shift and go to state 59
    INT             shift and go to state 11
    FLOAT           shift and go to state 13
    PARANOPEN       shift and go to state 5
    PRINT           shift and go to state 4
    MINUS           shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 9
    LEVEL1          shift and go to state 10
    PLUS            reduce using rule 39 (expression -> .)
    PARANCLOSE      reduce using rule 39 (expression -> .)
    HASH            shift and go to state 12

  ! MINUS           [ reduce using rule 39 (expression -> .) ]

    factor                         shift and go to state 60
    expression                     shift and go to state 35
    term                           shift and go to state 3

state 50

    (18) expression -> WHILE PARANOPEN ID GREATER . factor PARANCLOSE COLON
    (19) expression -> WHILE PARANOPEN ID GREATER . STR_CONST PARANCLOSE COLON
    (20) expression -> WHILE PARANOPEN ID GREATER . ID PARANCLOSE COLON
    (12) factor -> . INT
    (13) factor -> . FLOAT
    (14) factor -> . PARANOPEN expression PARANCLOSE

    STR_CONST       shift and go to state 64
    ID              shift and go to state 62
    INT             shift and go to state 11
    FLOAT           shift and go to state 13
    PARANOPEN       shift and go to state 5

    factor                         shift and go to state 63

state 51

    (21) expression -> WHILE PARANOPEN ID GREATEREQ . factor PARANCLOSE COLON
    (22) expression -> WHILE PARANOPEN ID GREATEREQ . STR_CONST PARANCLOSE COLON
    (23) expression -> WHILE PARANOPEN ID GREATEREQ . ID PARANCLOSE COLON
    (12) factor -> . INT
    (13) factor -> . FLOAT
    (14) factor -> . PARANOPEN expression PARANCLOSE

    STR_CONST       shift and go to state 67
    ID              shift and go to state 65
    INT             shift and go to state 11
    FLOAT           shift and go to state 13
    PARANOPEN       shift and go to state 5

    factor                         shift and go to state 66

state 52

    (24) expression -> WHILE PARANOPEN ID LESSER . factor PARANCLOSE COLON
    (25) expression -> WHILE PARANOPEN ID LESSER . STR_CONST PARANCLOSE COLON
    (26) expression -> WHILE PARANOPEN ID LESSER . ID PARANCLOSE COLON
    (12) factor -> . INT
    (13) factor -> . FLOAT
    (14) factor -> . PARANOPEN expression PARANCLOSE

    STR_CONST       shift and go to state 70
    ID              shift and go to state 68
    INT             shift and go to state 11
    FLOAT           shift and go to state 13
    PARANOPEN       shift and go to state 5

    factor                         shift and go to state 69

state 53

    (27) expression -> WHILE PARANOPEN ID LESSEREQ . factor PARANCLOSE COLON
    (28) expression -> WHILE PARANOPEN ID LESSEREQ . STR_CONST PARANCLOSE COLON
    (29) expression -> WHILE PARANOPEN ID LESSEREQ . ID PARANCLOSE COLON
    (12) factor -> . INT
    (13) factor -> . FLOAT
    (14) factor -> . PARANOPEN expression PARANCLOSE

    STR_CONST       shift and go to state 73
    ID              shift and go to state 71
    INT             shift and go to state 11
    FLOAT           shift and go to state 13
    PARANOPEN       shift and go to state 5

    factor                         shift and go to state 72

state 54

    (36) expression -> FOR ID IN ID . COLON

    COLON           shift and go to state 74


state 55

    (34) expression -> FOR ID IN RANGE . PARANOPEN expression PARANCLOSE COLON

    PARANOPEN       shift and go to state 75


state 56

    (37) expression -> FOR ID IN PARANOPEN . STR_CONST PARANCLOSE COLON

    STR_CONST       shift and go to state 76


state 57

    (35) expression -> FOR ID IN STR_CONST . COLON

    COLON           shift and go to state 77


state 58

    (38) expression -> LEVEL1 ID EQUAL INT .

    PLUS            reduce using rule 38 (expression -> LEVEL1 ID EQUAL INT .)
    MINUS           reduce using rule 38 (expression -> LEVEL1 ID EQUAL INT .)
    $end            reduce using rule 38 (expression -> LEVEL1 ID EQUAL INT .)
    PARANCLOSE      reduce using rule 38 (expression -> LEVEL1 ID EQUAL INT .)


state 59

    (17) expression -> WHILE PARANOPEN ID EQUAL ID . PARANCLOSE COLON
    (1) expression -> ID . EQUAL expression
    (2) expression -> ID . EQUAL STR_CONST

    PARANCLOSE      shift and go to state 78
    EQUAL           shift and go to state 16


state 60

    (15) expression -> WHILE PARANOPEN ID EQUAL factor . PARANCLOSE COLON
    (11) term -> factor .

  ! shift/reduce conflict for PARANCLOSE resolved as shift
    PARANCLOSE      shift and go to state 79
    MULTIPLY        reduce using rule 11 (term -> factor .)
    DIVIDE          reduce using rule 11 (term -> factor .)
    PLUS            reduce using rule 11 (term -> factor .)
    MINUS           reduce using rule 11 (term -> factor .)

  ! PARANCLOSE      [ reduce using rule 11 (term -> factor .) ]


state 61

    (16) expression -> WHILE PARANOPEN ID EQUAL STR_CONST . PARANCLOSE COLON
    (2) expression -> ID EQUAL STR_CONST .

  ! shift/reduce conflict for PARANCLOSE resolved as shift
    PARANCLOSE      shift and go to state 80
    PLUS            reduce using rule 2 (expression -> ID EQUAL STR_CONST .)
    MINUS           reduce using rule 2 (expression -> ID EQUAL STR_CONST .)

  ! PARANCLOSE      [ reduce using rule 2 (expression -> ID EQUAL STR_CONST .) ]


state 62

    (20) expression -> WHILE PARANOPEN ID GREATER ID . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 81


state 63

    (18) expression -> WHILE PARANOPEN ID GREATER factor . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 82


state 64

    (19) expression -> WHILE PARANOPEN ID GREATER STR_CONST . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 83


state 65

    (23) expression -> WHILE PARANOPEN ID GREATEREQ ID . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 84


state 66

    (21) expression -> WHILE PARANOPEN ID GREATEREQ factor . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 85


state 67

    (22) expression -> WHILE PARANOPEN ID GREATEREQ STR_CONST . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 86


state 68

    (26) expression -> WHILE PARANOPEN ID LESSER ID . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 87


state 69

    (24) expression -> WHILE PARANOPEN ID LESSER factor . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 88


state 70

    (25) expression -> WHILE PARANOPEN ID LESSER STR_CONST . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 89


state 71

    (29) expression -> WHILE PARANOPEN ID LESSEREQ ID . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 90


state 72

    (27) expression -> WHILE PARANOPEN ID LESSEREQ factor . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 91


state 73

    (28) expression -> WHILE PARANOPEN ID LESSEREQ STR_CONST . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 92


state 74

    (36) expression -> FOR ID IN ID COLON .

    PLUS            reduce using rule 36 (expression -> FOR ID IN ID COLON .)
    MINUS           reduce using rule 36 (expression -> FOR ID IN ID COLON .)
    $end            reduce using rule 36 (expression -> FOR ID IN ID COLON .)
    PARANCLOSE      reduce using rule 36 (expression -> FOR ID IN ID COLON .)


state 75

    (34) expression -> FOR ID IN RANGE PARANOPEN . expression PARANCLOSE COLON
    (1) expression -> . ID EQUAL expression
    (2) expression -> . ID EQUAL STR_CONST
    (3) expression -> . expression PLUS term
    (4) expression -> . PRINT expression
    (5) expression -> . PRINT PARANOPEN ID PARANCLOSE
    (6) expression -> . expression MINUS term
    (7) expression -> . MINUS term
    (8) expression -> . term
    (15) expression -> . WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (16) expression -> . WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (17) expression -> . WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (18) expression -> . WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (19) expression -> . WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (20) expression -> . WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (21) expression -> . WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (22) expression -> . WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (23) expression -> . WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (24) expression -> . WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (25) expression -> . WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (26) expression -> . WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (27) expression -> . WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (28) expression -> . WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (29) expression -> . WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (30) expression -> . WHILE BOOL COLON
    (31) expression -> . WHILE STR_CONST COLON
    (32) expression -> . WHILE factor COLON
    (33) expression -> . WHILE ID COLON
    (34) expression -> . FOR ID IN RANGE PARANOPEN expression PARANCLOSE COLON
    (35) expression -> . FOR ID IN STR_CONST COLON
    (36) expression -> . FOR ID IN ID COLON
    (37) expression -> . FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (38) expression -> . LEVEL1 ID EQUAL INT
    (39) expression -> .
    (40) expression -> . HASH expression
    (41) expression -> . HASH ID
    (42) expression -> . HASH STR_CONST
    (9) term -> . term MULTIPLY factor
    (10) term -> . term DIVIDE factor
    (11) term -> . factor
    (12) factor -> . INT
    (13) factor -> . FLOAT
    (14) factor -> . PARANOPEN expression PARANCLOSE

  ! shift/reduce conflict for MINUS resolved as shift
    ID              shift and go to state 2
    PRINT           shift and go to state 4
    MINUS           shift and go to state 6
    WHILE           shift and go to state 7
    FOR             shift and go to state 9
    LEVEL1          shift and go to state 10
    PARANCLOSE      reduce using rule 39 (expression -> .)
    PLUS            reduce using rule 39 (expression -> .)
    HASH            shift and go to state 12
    INT             shift and go to state 11
    FLOAT           shift and go to state 13
    PARANOPEN       shift and go to state 5

  ! MINUS           [ reduce using rule 39 (expression -> .) ]

    expression                     shift and go to state 93
    term                           shift and go to state 3
    factor                         shift and go to state 8

state 76

    (37) expression -> FOR ID IN PARANOPEN STR_CONST . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 94


state 77

    (35) expression -> FOR ID IN STR_CONST COLON .

    PLUS            reduce using rule 35 (expression -> FOR ID IN STR_CONST COLON .)
    MINUS           reduce using rule 35 (expression -> FOR ID IN STR_CONST COLON .)
    $end            reduce using rule 35 (expression -> FOR ID IN STR_CONST COLON .)
    PARANCLOSE      reduce using rule 35 (expression -> FOR ID IN STR_CONST COLON .)


state 78

    (17) expression -> WHILE PARANOPEN ID EQUAL ID PARANCLOSE . COLON

    COLON           shift and go to state 95


state 79

    (15) expression -> WHILE PARANOPEN ID EQUAL factor PARANCLOSE . COLON

    COLON           shift and go to state 96


state 80

    (16) expression -> WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE . COLON

    COLON           shift and go to state 97


state 81

    (20) expression -> WHILE PARANOPEN ID GREATER ID PARANCLOSE . COLON

    COLON           shift and go to state 98


state 82

    (18) expression -> WHILE PARANOPEN ID GREATER factor PARANCLOSE . COLON

    COLON           shift and go to state 99


state 83

    (19) expression -> WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE . COLON

    COLON           shift and go to state 100


state 84

    (23) expression -> WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE . COLON

    COLON           shift and go to state 101


state 85

    (21) expression -> WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE . COLON

    COLON           shift and go to state 102


state 86

    (22) expression -> WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE . COLON

    COLON           shift and go to state 103


state 87

    (26) expression -> WHILE PARANOPEN ID LESSER ID PARANCLOSE . COLON

    COLON           shift and go to state 104


state 88

    (24) expression -> WHILE PARANOPEN ID LESSER factor PARANCLOSE . COLON

    COLON           shift and go to state 105


state 89

    (25) expression -> WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE . COLON

    COLON           shift and go to state 106


state 90

    (29) expression -> WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE . COLON

    COLON           shift and go to state 107


state 91

    (27) expression -> WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE . COLON

    COLON           shift and go to state 108


state 92

    (28) expression -> WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE . COLON

    COLON           shift and go to state 109


state 93

    (34) expression -> FOR ID IN RANGE PARANOPEN expression . PARANCLOSE COLON
    (3) expression -> expression . PLUS term
    (6) expression -> expression . MINUS term

    PARANCLOSE      shift and go to state 110
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15


state 94

    (37) expression -> FOR ID IN PARANOPEN STR_CONST PARANCLOSE . COLON

    COLON           shift and go to state 111


state 95

    (17) expression -> WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON .

    PLUS            reduce using rule 17 (expression -> WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON .)
    MINUS           reduce using rule 17 (expression -> WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON .)
    $end            reduce using rule 17 (expression -> WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 17 (expression -> WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON .)


state 96

    (15) expression -> WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON .

    PLUS            reduce using rule 15 (expression -> WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON .)
    MINUS           reduce using rule 15 (expression -> WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON .)
    $end            reduce using rule 15 (expression -> WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 15 (expression -> WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON .)


state 97

    (16) expression -> WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON .

    PLUS            reduce using rule 16 (expression -> WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON .)
    MINUS           reduce using rule 16 (expression -> WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON .)
    $end            reduce using rule 16 (expression -> WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 16 (expression -> WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON .)


state 98

    (20) expression -> WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON .

    PLUS            reduce using rule 20 (expression -> WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON .)
    MINUS           reduce using rule 20 (expression -> WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON .)
    $end            reduce using rule 20 (expression -> WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 20 (expression -> WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON .)


state 99

    (18) expression -> WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON .

    PLUS            reduce using rule 18 (expression -> WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON .)
    MINUS           reduce using rule 18 (expression -> WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON .)
    $end            reduce using rule 18 (expression -> WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 18 (expression -> WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON .)


state 100

    (19) expression -> WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON .

    PLUS            reduce using rule 19 (expression -> WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON .)
    MINUS           reduce using rule 19 (expression -> WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON .)
    $end            reduce using rule 19 (expression -> WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 19 (expression -> WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON .)


state 101

    (23) expression -> WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON .

    PLUS            reduce using rule 23 (expression -> WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON .)
    MINUS           reduce using rule 23 (expression -> WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON .)
    $end            reduce using rule 23 (expression -> WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 23 (expression -> WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON .)


state 102

    (21) expression -> WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON .

    PLUS            reduce using rule 21 (expression -> WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON .)
    MINUS           reduce using rule 21 (expression -> WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON .)
    $end            reduce using rule 21 (expression -> WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 21 (expression -> WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON .)


state 103

    (22) expression -> WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON .

    PLUS            reduce using rule 22 (expression -> WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON .)
    MINUS           reduce using rule 22 (expression -> WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON .)
    $end            reduce using rule 22 (expression -> WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 22 (expression -> WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON .)


state 104

    (26) expression -> WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON .

    PLUS            reduce using rule 26 (expression -> WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON .)
    MINUS           reduce using rule 26 (expression -> WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON .)
    $end            reduce using rule 26 (expression -> WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 26 (expression -> WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON .)


state 105

    (24) expression -> WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON .

    PLUS            reduce using rule 24 (expression -> WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON .)
    MINUS           reduce using rule 24 (expression -> WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON .)
    $end            reduce using rule 24 (expression -> WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 24 (expression -> WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON .)


state 106

    (25) expression -> WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON .

    PLUS            reduce using rule 25 (expression -> WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON .)
    MINUS           reduce using rule 25 (expression -> WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON .)
    $end            reduce using rule 25 (expression -> WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 25 (expression -> WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON .)


state 107

    (29) expression -> WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON .

    PLUS            reduce using rule 29 (expression -> WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON .)
    MINUS           reduce using rule 29 (expression -> WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON .)
    $end            reduce using rule 29 (expression -> WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 29 (expression -> WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON .)


state 108

    (27) expression -> WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON .

    PLUS            reduce using rule 27 (expression -> WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON .)
    MINUS           reduce using rule 27 (expression -> WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON .)
    $end            reduce using rule 27 (expression -> WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 27 (expression -> WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON .)


state 109

    (28) expression -> WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON .

    PLUS            reduce using rule 28 (expression -> WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON .)
    MINUS           reduce using rule 28 (expression -> WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON .)
    $end            reduce using rule 28 (expression -> WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 28 (expression -> WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON .)


state 110

    (34) expression -> FOR ID IN RANGE PARANOPEN expression PARANCLOSE . COLON

    COLON           shift and go to state 112


state 111

    (37) expression -> FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON .

    PLUS            reduce using rule 37 (expression -> FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON .)
    MINUS           reduce using rule 37 (expression -> FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON .)
    $end            reduce using rule 37 (expression -> FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 37 (expression -> FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON .)


state 112

    (34) expression -> FOR ID IN RANGE PARANOPEN expression PARANCLOSE COLON .

    PLUS            reduce using rule 34 (expression -> FOR ID IN RANGE PARANOPEN expression PARANCLOSE COLON .)
    MINUS           reduce using rule 34 (expression -> FOR ID IN RANGE PARANOPEN expression PARANCLOSE COLON .)
    $end            reduce using rule 34 (expression -> FOR ID IN RANGE PARANOPEN expression PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 34 (expression -> FOR ID IN RANGE PARANOPEN expression PARANCLOSE COLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MINUS in state 0 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 4 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 5 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 12 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 16 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 19 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 19 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 20 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 23 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 30 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 30 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 35 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 35 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 49 resolved as shift
WARNING: shift/reduce conflict for PARANCLOSE in state 60 resolved as shift
WARNING: shift/reduce conflict for PARANCLOSE in state 61 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 75 resolved as shift
