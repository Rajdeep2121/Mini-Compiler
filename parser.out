Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    BIT_AND
    BIT_OR
    COMMA
    DEF
    EQEQ
    FLOWERCLOSE
    FLOWEROPEN
    IF
    LEVEL3
    MOD
    NAME
    NEWLINE
    NOTEQ
    OR

Grammar

Rule 0     S' -> expression
Rule 1     expression -> ID EQUAL expression
Rule 2     expression -> ID EQUAL EMP_LIST
Rule 3     expression -> ID EQUAL EMP_TUPLE
Rule 4     expression -> ID EQUAL EMP_SET
Rule 5     expression -> ID EQUAL STR_CONST
Rule 6     expression -> ID EQUAL ID
Rule 7     expression -> ID PLUS EQUAL term
Rule 8     expression -> factor PLUS factor
Rule 9     expression -> expression PLUS term
Rule 10    expression -> ID PLUS factor
Rule 11    expression -> factor PLUS ID
Rule 12    expression -> ID PLUS ID
Rule 13    expression -> expression PLUS ID
Rule 14    expression -> ID PLUS expression
Rule 15    expression -> PRINT PARANOPEN STR_CONST PARANCLOSE
Rule 16    expression -> PRINT PARANOPEN ID PARANCLOSE
Rule 17    expression -> PRINT PARANOPEN term PARANCLOSE
Rule 18    expression -> expression MINUS term
Rule 19    expression -> ID MINUS EQUAL term
Rule 20    expression -> MINUS term
Rule 21    expression -> term MINUS expression
Rule 22    expression -> term MINUS term
Rule 23    expression -> ID MINUS ID
Rule 24    expression -> term MINUS ID
Rule 25    expression -> ID MINUS term
Rule 26    expression -> term
Rule 27    term -> term MULTIPLY factor
Rule 28    term -> ID MULTIPLY ID
Rule 29    term -> ID MULTIPLY factor
Rule 30    term -> factor MULTIPLY ID
Rule 31    term -> ID MULTIPLY term
Rule 32    term -> term MULTIPLY ID
Rule 33    term -> factor MULTIPLY factor
Rule 34    term -> term DIVIDE factor
Rule 35    term -> factor
Rule 36    factor -> INT
Rule 37    factor -> FLOAT
Rule 38    factor -> PARANOPEN expression PARANCLOSE
Rule 39    expression -> whileloop
Rule 40    expression -> forloop
Rule 41    expression -> forloop2
Rule 42    expression -> whileloop2
Rule 43    whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
Rule 44    whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
Rule 45    whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
Rule 46    whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
Rule 47    whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
Rule 48    whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
Rule 49    whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
Rule 50    whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
Rule 51    whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
Rule 52    whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
Rule 53    whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
Rule 54    whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
Rule 55    whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
Rule 56    whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
Rule 57    whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
Rule 58    whileloop2 -> LEVEL1 WHILE BOOL COLON
Rule 59    whileloop2 -> LEVEL1 WHILE STR_CONST COLON
Rule 60    whileloop2 -> LEVEL1 WHILE factor COLON
Rule 61    whileloop2 -> LEVEL1 WHILE ID COLON
Rule 62    whileloop -> WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
Rule 63    whileloop -> WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
Rule 64    whileloop -> WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
Rule 65    whileloop -> WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
Rule 66    whileloop -> WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
Rule 67    whileloop -> WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
Rule 68    whileloop -> WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
Rule 69    whileloop -> WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
Rule 70    whileloop -> WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
Rule 71    whileloop -> WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
Rule 72    whileloop -> WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
Rule 73    whileloop -> WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
Rule 74    whileloop -> WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
Rule 75    whileloop -> WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
Rule 76    whileloop -> WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
Rule 77    whileloop -> WHILE BOOL COLON
Rule 78    whileloop -> WHILE STR_CONST COLON
Rule 79    whileloop -> WHILE factor COLON
Rule 80    whileloop -> WHILE ID COLON
Rule 81    forloop2 -> LEVEL1 FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
Rule 82    forloop2 -> LEVEL1 FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
Rule 83    forloop2 -> LEVEL1 FOR ID IN STR_CONST COLON
Rule 84    forloop2 -> LEVEL1 FOR ID IN ID COLON
Rule 85    forloop2 -> LEVEL1 FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
Rule 86    forloop -> FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
Rule 87    forloop -> FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
Rule 88    forloop -> FOR ID IN STR_CONST COLON
Rule 89    forloop -> FOR ID IN ID COLON
Rule 90    forloop -> FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
Rule 91    expression -> LEVEL2 ID EQUAL expression
Rule 92    expression -> LEVEL2 ID EQUAL ID
Rule 93    expression -> LEVEL2 ID EQUAL STR_CONST
Rule 94    expression -> LEVEL1 ID EQUAL expression
Rule 95    expression -> LEVEL1 ID EQUAL ID
Rule 96    expression -> LEVEL1 ID EQUAL STR_CONST
Rule 97    expression -> LEVEL1 ID EQUAL factor
Rule 98    expression -> LEVEL1 ID PLUS EQUAL term
Rule 99    expression -> LEVEL1 expression PLUS term
Rule 100   expression -> LEVEL1 ID PLUS factor
Rule 101   expression -> LEVEL1 factor PLUS ID
Rule 102   expression -> LEVEL1 ID PLUS ID
Rule 103   expression -> LEVEL1 expression PLUS ID
Rule 104   expression -> LEVEL1 ID PLUS expression
Rule 105   expression -> LEVEL1 factor PLUS factor
Rule 106   expression -> LEVEL2 PRINT PARANOPEN STR_CONST PARANCLOSE
Rule 107   expression -> LEVEL2 PRINT PARANOPEN ID PARANCLOSE
Rule 108   expression -> LEVEL2 PRINT PARANOPEN term PARANCLOSE
Rule 109   expression -> LEVEL1 PRINT PARANOPEN STR_CONST PARANCLOSE
Rule 110   expression -> LEVEL1 PRINT PARANOPEN ID PARANCLOSE
Rule 111   expression -> LEVEL1 PRINT PARANOPEN term PARANCLOSE
Rule 112   expression -> <empty>
Rule 113   expression -> HASH expression
Rule 114   expression -> HASH ID
Rule 115   expression -> HASH STR_CONST

Terminals, with rules where they appear

AND                  : 
BIT_AND              : 
BIT_OR               : 
BOOL                 : 58 77
COLON                : 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90
COMMA                : 
DEF                  : 
DIVIDE               : 34
EMP_LIST             : 2
EMP_SET              : 4
EMP_TUPLE            : 3
EQEQ                 : 
EQUAL                : 1 2 3 4 5 6 7 19 43 44 45 62 63 64 91 92 93 94 95 96 97 98
FLOAT                : 37
FLOWERCLOSE          : 
FLOWEROPEN           : 
FOR                  : 81 82 83 84 85 86 87 88 89 90
GREATER              : 46 47 48 65 66 67
GREATEREQ            : 49 50 51 68 69 70
HASH                 : 113 114 115
ID                   : 1 2 3 4 5 6 6 7 10 11 12 12 13 14 16 19 23 23 24 25 28 28 29 30 31 32 43 44 45 45 46 47 48 48 49 50 51 51 52 53 54 54 55 56 57 57 61 62 63 64 64 65 66 67 67 68 69 70 70 71 72 73 73 74 75 76 76 80 81 82 82 83 84 84 85 86 87 87 88 89 89 90 91 92 92 93 94 95 95 96 97 98 100 101 102 102 103 104 107 110 114
IF                   : 
IN                   : 81 82 83 84 85 86 87 88 89 90
INT                  : 36
LEN                  : 82 87
LESSER               : 52 53 54 71 72 73
LESSEREQ             : 55 56 57 74 75 76
LEVEL1               : 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 81 82 83 84 85 94 95 96 97 98 99 100 101 102 103 104 105 109 110 111
LEVEL2               : 91 92 93 106 107 108
LEVEL3               : 
MINUS                : 18 19 20 21 22 23 24 25
MOD                  : 
MULTIPLY             : 27 28 29 30 31 32 33
NAME                 : 
NEWLINE              : 
NOTEQ                : 
OR                   : 
PARANCLOSE           : 15 16 17 38 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 81 82 82 85 86 87 87 90 106 107 108 109 110 111
PARANOPEN            : 15 16 17 38 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 81 82 82 85 86 87 87 90 106 107 108 109 110 111
PLUS                 : 7 8 9 10 11 12 13 14 98 99 100 101 102 103 104 105
PRINT                : 15 16 17 106 107 108 109 110 111
RANGE                : 81 82 86 87
STR_CONST            : 5 15 44 47 50 53 56 59 63 66 69 72 75 78 83 85 88 90 93 96 106 109 115
WHILE                : 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80
error                : 

Nonterminals, with rules where they appear

expression           : 1 9 13 14 18 21 38 91 94 99 103 104 113 0
factor               : 8 8 10 11 27 29 30 33 33 34 35 43 46 49 52 55 60 62 65 68 71 74 79 97 100 101 105 105
forloop              : 40
forloop2             : 41
term                 : 7 9 17 18 19 20 21 22 22 24 25 26 27 31 32 34 81 86 98 99 108 111
whileloop            : 39
whileloop2           : 42

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . ID EQUAL expression
    (2) expression -> . ID EQUAL EMP_LIST
    (3) expression -> . ID EQUAL EMP_TUPLE
    (4) expression -> . ID EQUAL EMP_SET
    (5) expression -> . ID EQUAL STR_CONST
    (6) expression -> . ID EQUAL ID
    (7) expression -> . ID PLUS EQUAL term
    (8) expression -> . factor PLUS factor
    (9) expression -> . expression PLUS term
    (10) expression -> . ID PLUS factor
    (11) expression -> . factor PLUS ID
    (12) expression -> . ID PLUS ID
    (13) expression -> . expression PLUS ID
    (14) expression -> . ID PLUS expression
    (15) expression -> . PRINT PARANOPEN STR_CONST PARANCLOSE
    (16) expression -> . PRINT PARANOPEN ID PARANCLOSE
    (17) expression -> . PRINT PARANOPEN term PARANCLOSE
    (18) expression -> . expression MINUS term
    (19) expression -> . ID MINUS EQUAL term
    (20) expression -> . MINUS term
    (21) expression -> . term MINUS expression
    (22) expression -> . term MINUS term
    (23) expression -> . ID MINUS ID
    (24) expression -> . term MINUS ID
    (25) expression -> . ID MINUS term
    (26) expression -> . term
    (39) expression -> . whileloop
    (40) expression -> . forloop
    (41) expression -> . forloop2
    (42) expression -> . whileloop2
    (91) expression -> . LEVEL2 ID EQUAL expression
    (92) expression -> . LEVEL2 ID EQUAL ID
    (93) expression -> . LEVEL2 ID EQUAL STR_CONST
    (94) expression -> . LEVEL1 ID EQUAL expression
    (95) expression -> . LEVEL1 ID EQUAL ID
    (96) expression -> . LEVEL1 ID EQUAL STR_CONST
    (97) expression -> . LEVEL1 ID EQUAL factor
    (98) expression -> . LEVEL1 ID PLUS EQUAL term
    (99) expression -> . LEVEL1 expression PLUS term
    (100) expression -> . LEVEL1 ID PLUS factor
    (101) expression -> . LEVEL1 factor PLUS ID
    (102) expression -> . LEVEL1 ID PLUS ID
    (103) expression -> . LEVEL1 expression PLUS ID
    (104) expression -> . LEVEL1 ID PLUS expression
    (105) expression -> . LEVEL1 factor PLUS factor
    (106) expression -> . LEVEL2 PRINT PARANOPEN STR_CONST PARANCLOSE
    (107) expression -> . LEVEL2 PRINT PARANOPEN ID PARANCLOSE
    (108) expression -> . LEVEL2 PRINT PARANOPEN term PARANCLOSE
    (109) expression -> . LEVEL1 PRINT PARANOPEN STR_CONST PARANCLOSE
    (110) expression -> . LEVEL1 PRINT PARANOPEN ID PARANCLOSE
    (111) expression -> . LEVEL1 PRINT PARANOPEN term PARANCLOSE
    (112) expression -> .
    (113) expression -> . HASH expression
    (114) expression -> . HASH ID
    (115) expression -> . HASH STR_CONST
    (36) factor -> . INT
    (37) factor -> . FLOAT
    (38) factor -> . PARANOPEN expression PARANCLOSE
    (27) term -> . term MULTIPLY factor
    (28) term -> . ID MULTIPLY ID
    (29) term -> . ID MULTIPLY factor
    (30) term -> . factor MULTIPLY ID
    (31) term -> . ID MULTIPLY term
    (32) term -> . term MULTIPLY ID
    (33) term -> . factor MULTIPLY factor
    (34) term -> . term DIVIDE factor
    (35) term -> . factor
    (62) whileloop -> . WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (63) whileloop -> . WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (64) whileloop -> . WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (65) whileloop -> . WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (66) whileloop -> . WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (67) whileloop -> . WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (68) whileloop -> . WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (69) whileloop -> . WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (70) whileloop -> . WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (71) whileloop -> . WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (72) whileloop -> . WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (73) whileloop -> . WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (74) whileloop -> . WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (75) whileloop -> . WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (76) whileloop -> . WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (77) whileloop -> . WHILE BOOL COLON
    (78) whileloop -> . WHILE STR_CONST COLON
    (79) whileloop -> . WHILE factor COLON
    (80) whileloop -> . WHILE ID COLON
    (86) forloop -> . FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (87) forloop -> . FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (88) forloop -> . FOR ID IN STR_CONST COLON
    (89) forloop -> . FOR ID IN ID COLON
    (90) forloop -> . FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (81) forloop2 -> . LEVEL1 FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (82) forloop2 -> . LEVEL1 FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (83) forloop2 -> . LEVEL1 FOR ID IN STR_CONST COLON
    (84) forloop2 -> . LEVEL1 FOR ID IN ID COLON
    (85) forloop2 -> . LEVEL1 FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (43) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (44) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (45) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (46) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (47) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (48) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (49) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (50) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (51) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (52) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (53) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (54) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (55) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (56) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (57) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (58) whileloop2 -> . LEVEL1 WHILE BOOL COLON
    (59) whileloop2 -> . LEVEL1 WHILE STR_CONST COLON
    (60) whileloop2 -> . LEVEL1 WHILE factor COLON
    (61) whileloop2 -> . LEVEL1 WHILE ID COLON

  ! shift/reduce conflict for MINUS resolved as shift
    ID              shift and go to state 2
    PRINT           shift and go to state 5
    MINUS           shift and go to state 7
    LEVEL2          shift and go to state 12
    LEVEL1          shift and go to state 13
    PLUS            reduce using rule 112 (expression -> .)
    $end            reduce using rule 112 (expression -> .)
    HASH            shift and go to state 14
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    PARANOPEN       shift and go to state 6
    WHILE           shift and go to state 17
    FOR             shift and go to state 18

  ! MINUS           [ reduce using rule 112 (expression -> .) ]

    expression                     shift and go to state 1
    term                           shift and go to state 3
    factor                         shift and go to state 4
    whileloop                      shift and go to state 8
    forloop                        shift and go to state 9
    forloop2                       shift and go to state 10
    whileloop2                     shift and go to state 11

state 1

    (0) S' -> expression .
    (9) expression -> expression . PLUS term
    (13) expression -> expression . PLUS ID
    (18) expression -> expression . MINUS term

    PLUS            shift and go to state 19
    MINUS           shift and go to state 20


state 2

    (1) expression -> ID . EQUAL expression
    (2) expression -> ID . EQUAL EMP_LIST
    (3) expression -> ID . EQUAL EMP_TUPLE
    (4) expression -> ID . EQUAL EMP_SET
    (5) expression -> ID . EQUAL STR_CONST
    (6) expression -> ID . EQUAL ID
    (7) expression -> ID . PLUS EQUAL term
    (10) expression -> ID . PLUS factor
    (12) expression -> ID . PLUS ID
    (14) expression -> ID . PLUS expression
    (19) expression -> ID . MINUS EQUAL term
    (23) expression -> ID . MINUS ID
    (25) expression -> ID . MINUS term
    (28) term -> ID . MULTIPLY ID
    (29) term -> ID . MULTIPLY factor
    (31) term -> ID . MULTIPLY term

    EQUAL           shift and go to state 21
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    MULTIPLY        shift and go to state 24


state 3

    (21) expression -> term . MINUS expression
    (22) expression -> term . MINUS term
    (24) expression -> term . MINUS ID
    (26) expression -> term .
    (27) term -> term . MULTIPLY factor
    (32) term -> term . MULTIPLY ID
    (34) term -> term . DIVIDE factor

  ! shift/reduce conflict for MINUS resolved as shift
    MINUS           shift and go to state 25
    PLUS            reduce using rule 26 (expression -> term .)
    $end            reduce using rule 26 (expression -> term .)
    PARANCLOSE      reduce using rule 26 (expression -> term .)
    MULTIPLY        shift and go to state 26
    DIVIDE          shift and go to state 27

  ! MINUS           [ reduce using rule 26 (expression -> term .) ]


state 4

    (8) expression -> factor . PLUS factor
    (11) expression -> factor . PLUS ID
    (30) term -> factor . MULTIPLY ID
    (33) term -> factor . MULTIPLY factor
    (35) term -> factor .

  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
    PLUS            shift and go to state 28
    MULTIPLY        shift and go to state 29
    MINUS           reduce using rule 35 (term -> factor .)
    DIVIDE          reduce using rule 35 (term -> factor .)
    $end            reduce using rule 35 (term -> factor .)
    PARANCLOSE      reduce using rule 35 (term -> factor .)

  ! MULTIPLY        [ reduce using rule 35 (term -> factor .) ]
  ! PLUS            [ reduce using rule 35 (term -> factor .) ]


state 5

    (15) expression -> PRINT . PARANOPEN STR_CONST PARANCLOSE
    (16) expression -> PRINT . PARANOPEN ID PARANCLOSE
    (17) expression -> PRINT . PARANOPEN term PARANCLOSE

    PARANOPEN       shift and go to state 30


state 6

    (38) factor -> PARANOPEN . expression PARANCLOSE
    (1) expression -> . ID EQUAL expression
    (2) expression -> . ID EQUAL EMP_LIST
    (3) expression -> . ID EQUAL EMP_TUPLE
    (4) expression -> . ID EQUAL EMP_SET
    (5) expression -> . ID EQUAL STR_CONST
    (6) expression -> . ID EQUAL ID
    (7) expression -> . ID PLUS EQUAL term
    (8) expression -> . factor PLUS factor
    (9) expression -> . expression PLUS term
    (10) expression -> . ID PLUS factor
    (11) expression -> . factor PLUS ID
    (12) expression -> . ID PLUS ID
    (13) expression -> . expression PLUS ID
    (14) expression -> . ID PLUS expression
    (15) expression -> . PRINT PARANOPEN STR_CONST PARANCLOSE
    (16) expression -> . PRINT PARANOPEN ID PARANCLOSE
    (17) expression -> . PRINT PARANOPEN term PARANCLOSE
    (18) expression -> . expression MINUS term
    (19) expression -> . ID MINUS EQUAL term
    (20) expression -> . MINUS term
    (21) expression -> . term MINUS expression
    (22) expression -> . term MINUS term
    (23) expression -> . ID MINUS ID
    (24) expression -> . term MINUS ID
    (25) expression -> . ID MINUS term
    (26) expression -> . term
    (39) expression -> . whileloop
    (40) expression -> . forloop
    (41) expression -> . forloop2
    (42) expression -> . whileloop2
    (91) expression -> . LEVEL2 ID EQUAL expression
    (92) expression -> . LEVEL2 ID EQUAL ID
    (93) expression -> . LEVEL2 ID EQUAL STR_CONST
    (94) expression -> . LEVEL1 ID EQUAL expression
    (95) expression -> . LEVEL1 ID EQUAL ID
    (96) expression -> . LEVEL1 ID EQUAL STR_CONST
    (97) expression -> . LEVEL1 ID EQUAL factor
    (98) expression -> . LEVEL1 ID PLUS EQUAL term
    (99) expression -> . LEVEL1 expression PLUS term
    (100) expression -> . LEVEL1 ID PLUS factor
    (101) expression -> . LEVEL1 factor PLUS ID
    (102) expression -> . LEVEL1 ID PLUS ID
    (103) expression -> . LEVEL1 expression PLUS ID
    (104) expression -> . LEVEL1 ID PLUS expression
    (105) expression -> . LEVEL1 factor PLUS factor
    (106) expression -> . LEVEL2 PRINT PARANOPEN STR_CONST PARANCLOSE
    (107) expression -> . LEVEL2 PRINT PARANOPEN ID PARANCLOSE
    (108) expression -> . LEVEL2 PRINT PARANOPEN term PARANCLOSE
    (109) expression -> . LEVEL1 PRINT PARANOPEN STR_CONST PARANCLOSE
    (110) expression -> . LEVEL1 PRINT PARANOPEN ID PARANCLOSE
    (111) expression -> . LEVEL1 PRINT PARANOPEN term PARANCLOSE
    (112) expression -> .
    (113) expression -> . HASH expression
    (114) expression -> . HASH ID
    (115) expression -> . HASH STR_CONST
    (36) factor -> . INT
    (37) factor -> . FLOAT
    (38) factor -> . PARANOPEN expression PARANCLOSE
    (27) term -> . term MULTIPLY factor
    (28) term -> . ID MULTIPLY ID
    (29) term -> . ID MULTIPLY factor
    (30) term -> . factor MULTIPLY ID
    (31) term -> . ID MULTIPLY term
    (32) term -> . term MULTIPLY ID
    (33) term -> . factor MULTIPLY factor
    (34) term -> . term DIVIDE factor
    (35) term -> . factor
    (62) whileloop -> . WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (63) whileloop -> . WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (64) whileloop -> . WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (65) whileloop -> . WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (66) whileloop -> . WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (67) whileloop -> . WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (68) whileloop -> . WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (69) whileloop -> . WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (70) whileloop -> . WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (71) whileloop -> . WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (72) whileloop -> . WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (73) whileloop -> . WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (74) whileloop -> . WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (75) whileloop -> . WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (76) whileloop -> . WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (77) whileloop -> . WHILE BOOL COLON
    (78) whileloop -> . WHILE STR_CONST COLON
    (79) whileloop -> . WHILE factor COLON
    (80) whileloop -> . WHILE ID COLON
    (86) forloop -> . FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (87) forloop -> . FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (88) forloop -> . FOR ID IN STR_CONST COLON
    (89) forloop -> . FOR ID IN ID COLON
    (90) forloop -> . FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (81) forloop2 -> . LEVEL1 FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (82) forloop2 -> . LEVEL1 FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (83) forloop2 -> . LEVEL1 FOR ID IN STR_CONST COLON
    (84) forloop2 -> . LEVEL1 FOR ID IN ID COLON
    (85) forloop2 -> . LEVEL1 FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (43) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (44) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (45) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (46) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (47) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (48) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (49) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (50) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (51) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (52) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (53) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (54) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (55) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (56) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (57) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (58) whileloop2 -> . LEVEL1 WHILE BOOL COLON
    (59) whileloop2 -> . LEVEL1 WHILE STR_CONST COLON
    (60) whileloop2 -> . LEVEL1 WHILE factor COLON
    (61) whileloop2 -> . LEVEL1 WHILE ID COLON

  ! shift/reduce conflict for MINUS resolved as shift
    ID              shift and go to state 2
    PRINT           shift and go to state 5
    MINUS           shift and go to state 7
    LEVEL2          shift and go to state 12
    LEVEL1          shift and go to state 13
    PARANCLOSE      reduce using rule 112 (expression -> .)
    PLUS            reduce using rule 112 (expression -> .)
    HASH            shift and go to state 14
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    PARANOPEN       shift and go to state 6
    WHILE           shift and go to state 17
    FOR             shift and go to state 18

  ! MINUS           [ reduce using rule 112 (expression -> .) ]

    expression                     shift and go to state 31
    term                           shift and go to state 3
    factor                         shift and go to state 4
    whileloop                      shift and go to state 8
    forloop                        shift and go to state 9
    forloop2                       shift and go to state 10
    whileloop2                     shift and go to state 11

state 7

    (20) expression -> MINUS . term
    (27) term -> . term MULTIPLY factor
    (28) term -> . ID MULTIPLY ID
    (29) term -> . ID MULTIPLY factor
    (30) term -> . factor MULTIPLY ID
    (31) term -> . ID MULTIPLY term
    (32) term -> . term MULTIPLY ID
    (33) term -> . factor MULTIPLY factor
    (34) term -> . term DIVIDE factor
    (35) term -> . factor
    (36) factor -> . INT
    (37) factor -> . FLOAT
    (38) factor -> . PARANOPEN expression PARANCLOSE

    ID              shift and go to state 34
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    PARANOPEN       shift and go to state 6

    term                           shift and go to state 32
    factor                         shift and go to state 33

state 8

    (39) expression -> whileloop .

    PLUS            reduce using rule 39 (expression -> whileloop .)
    MINUS           reduce using rule 39 (expression -> whileloop .)
    $end            reduce using rule 39 (expression -> whileloop .)
    PARANCLOSE      reduce using rule 39 (expression -> whileloop .)


state 9

    (40) expression -> forloop .

    PLUS            reduce using rule 40 (expression -> forloop .)
    MINUS           reduce using rule 40 (expression -> forloop .)
    $end            reduce using rule 40 (expression -> forloop .)
    PARANCLOSE      reduce using rule 40 (expression -> forloop .)


state 10

    (41) expression -> forloop2 .

    PLUS            reduce using rule 41 (expression -> forloop2 .)
    MINUS           reduce using rule 41 (expression -> forloop2 .)
    $end            reduce using rule 41 (expression -> forloop2 .)
    PARANCLOSE      reduce using rule 41 (expression -> forloop2 .)


state 11

    (42) expression -> whileloop2 .

    PLUS            reduce using rule 42 (expression -> whileloop2 .)
    MINUS           reduce using rule 42 (expression -> whileloop2 .)
    $end            reduce using rule 42 (expression -> whileloop2 .)
    PARANCLOSE      reduce using rule 42 (expression -> whileloop2 .)


state 12

    (91) expression -> LEVEL2 . ID EQUAL expression
    (92) expression -> LEVEL2 . ID EQUAL ID
    (93) expression -> LEVEL2 . ID EQUAL STR_CONST
    (106) expression -> LEVEL2 . PRINT PARANOPEN STR_CONST PARANCLOSE
    (107) expression -> LEVEL2 . PRINT PARANOPEN ID PARANCLOSE
    (108) expression -> LEVEL2 . PRINT PARANOPEN term PARANCLOSE

    ID              shift and go to state 35
    PRINT           shift and go to state 36


state 13

    (94) expression -> LEVEL1 . ID EQUAL expression
    (95) expression -> LEVEL1 . ID EQUAL ID
    (96) expression -> LEVEL1 . ID EQUAL STR_CONST
    (97) expression -> LEVEL1 . ID EQUAL factor
    (98) expression -> LEVEL1 . ID PLUS EQUAL term
    (99) expression -> LEVEL1 . expression PLUS term
    (100) expression -> LEVEL1 . ID PLUS factor
    (101) expression -> LEVEL1 . factor PLUS ID
    (102) expression -> LEVEL1 . ID PLUS ID
    (103) expression -> LEVEL1 . expression PLUS ID
    (104) expression -> LEVEL1 . ID PLUS expression
    (105) expression -> LEVEL1 . factor PLUS factor
    (109) expression -> LEVEL1 . PRINT PARANOPEN STR_CONST PARANCLOSE
    (110) expression -> LEVEL1 . PRINT PARANOPEN ID PARANCLOSE
    (111) expression -> LEVEL1 . PRINT PARANOPEN term PARANCLOSE
    (81) forloop2 -> LEVEL1 . FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (82) forloop2 -> LEVEL1 . FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (83) forloop2 -> LEVEL1 . FOR ID IN STR_CONST COLON
    (84) forloop2 -> LEVEL1 . FOR ID IN ID COLON
    (85) forloop2 -> LEVEL1 . FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (43) whileloop2 -> LEVEL1 . WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (44) whileloop2 -> LEVEL1 . WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (45) whileloop2 -> LEVEL1 . WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (46) whileloop2 -> LEVEL1 . WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (47) whileloop2 -> LEVEL1 . WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (48) whileloop2 -> LEVEL1 . WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (49) whileloop2 -> LEVEL1 . WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (50) whileloop2 -> LEVEL1 . WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (51) whileloop2 -> LEVEL1 . WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (52) whileloop2 -> LEVEL1 . WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (53) whileloop2 -> LEVEL1 . WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (54) whileloop2 -> LEVEL1 . WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (55) whileloop2 -> LEVEL1 . WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (56) whileloop2 -> LEVEL1 . WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (57) whileloop2 -> LEVEL1 . WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (58) whileloop2 -> LEVEL1 . WHILE BOOL COLON
    (59) whileloop2 -> LEVEL1 . WHILE STR_CONST COLON
    (60) whileloop2 -> LEVEL1 . WHILE factor COLON
    (61) whileloop2 -> LEVEL1 . WHILE ID COLON
    (1) expression -> . ID EQUAL expression
    (2) expression -> . ID EQUAL EMP_LIST
    (3) expression -> . ID EQUAL EMP_TUPLE
    (4) expression -> . ID EQUAL EMP_SET
    (5) expression -> . ID EQUAL STR_CONST
    (6) expression -> . ID EQUAL ID
    (7) expression -> . ID PLUS EQUAL term
    (8) expression -> . factor PLUS factor
    (9) expression -> . expression PLUS term
    (10) expression -> . ID PLUS factor
    (11) expression -> . factor PLUS ID
    (12) expression -> . ID PLUS ID
    (13) expression -> . expression PLUS ID
    (14) expression -> . ID PLUS expression
    (15) expression -> . PRINT PARANOPEN STR_CONST PARANCLOSE
    (16) expression -> . PRINT PARANOPEN ID PARANCLOSE
    (17) expression -> . PRINT PARANOPEN term PARANCLOSE
    (18) expression -> . expression MINUS term
    (19) expression -> . ID MINUS EQUAL term
    (20) expression -> . MINUS term
    (21) expression -> . term MINUS expression
    (22) expression -> . term MINUS term
    (23) expression -> . ID MINUS ID
    (24) expression -> . term MINUS ID
    (25) expression -> . ID MINUS term
    (26) expression -> . term
    (39) expression -> . whileloop
    (40) expression -> . forloop
    (41) expression -> . forloop2
    (42) expression -> . whileloop2
    (91) expression -> . LEVEL2 ID EQUAL expression
    (92) expression -> . LEVEL2 ID EQUAL ID
    (93) expression -> . LEVEL2 ID EQUAL STR_CONST
    (94) expression -> . LEVEL1 ID EQUAL expression
    (95) expression -> . LEVEL1 ID EQUAL ID
    (96) expression -> . LEVEL1 ID EQUAL STR_CONST
    (97) expression -> . LEVEL1 ID EQUAL factor
    (98) expression -> . LEVEL1 ID PLUS EQUAL term
    (99) expression -> . LEVEL1 expression PLUS term
    (100) expression -> . LEVEL1 ID PLUS factor
    (101) expression -> . LEVEL1 factor PLUS ID
    (102) expression -> . LEVEL1 ID PLUS ID
    (103) expression -> . LEVEL1 expression PLUS ID
    (104) expression -> . LEVEL1 ID PLUS expression
    (105) expression -> . LEVEL1 factor PLUS factor
    (106) expression -> . LEVEL2 PRINT PARANOPEN STR_CONST PARANCLOSE
    (107) expression -> . LEVEL2 PRINT PARANOPEN ID PARANCLOSE
    (108) expression -> . LEVEL2 PRINT PARANOPEN term PARANCLOSE
    (109) expression -> . LEVEL1 PRINT PARANOPEN STR_CONST PARANCLOSE
    (110) expression -> . LEVEL1 PRINT PARANOPEN ID PARANCLOSE
    (111) expression -> . LEVEL1 PRINT PARANOPEN term PARANCLOSE
    (112) expression -> .
    (113) expression -> . HASH expression
    (114) expression -> . HASH ID
    (115) expression -> . HASH STR_CONST
    (36) factor -> . INT
    (37) factor -> . FLOAT
    (38) factor -> . PARANOPEN expression PARANCLOSE
    (27) term -> . term MULTIPLY factor
    (28) term -> . ID MULTIPLY ID
    (29) term -> . ID MULTIPLY factor
    (30) term -> . factor MULTIPLY ID
    (31) term -> . ID MULTIPLY term
    (32) term -> . term MULTIPLY ID
    (33) term -> . factor MULTIPLY factor
    (34) term -> . term DIVIDE factor
    (35) term -> . factor
    (62) whileloop -> . WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (63) whileloop -> . WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (64) whileloop -> . WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (65) whileloop -> . WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (66) whileloop -> . WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (67) whileloop -> . WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (68) whileloop -> . WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (69) whileloop -> . WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (70) whileloop -> . WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (71) whileloop -> . WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (72) whileloop -> . WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (73) whileloop -> . WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (74) whileloop -> . WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (75) whileloop -> . WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (76) whileloop -> . WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (77) whileloop -> . WHILE BOOL COLON
    (78) whileloop -> . WHILE STR_CONST COLON
    (79) whileloop -> . WHILE factor COLON
    (80) whileloop -> . WHILE ID COLON
    (86) forloop -> . FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (87) forloop -> . FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (88) forloop -> . FOR ID IN STR_CONST COLON
    (89) forloop -> . FOR ID IN ID COLON
    (90) forloop -> . FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (81) forloop2 -> . LEVEL1 FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (82) forloop2 -> . LEVEL1 FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (83) forloop2 -> . LEVEL1 FOR ID IN STR_CONST COLON
    (84) forloop2 -> . LEVEL1 FOR ID IN ID COLON
    (85) forloop2 -> . LEVEL1 FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (43) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (44) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (45) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (46) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (47) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (48) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (49) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (50) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (51) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (52) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (53) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (54) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (55) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (56) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (57) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (58) whileloop2 -> . LEVEL1 WHILE BOOL COLON
    (59) whileloop2 -> . LEVEL1 WHILE STR_CONST COLON
    (60) whileloop2 -> . LEVEL1 WHILE factor COLON
    (61) whileloop2 -> . LEVEL1 WHILE ID COLON

  ! shift/reduce conflict for MINUS resolved as shift
    ID              shift and go to state 37
    PRINT           shift and go to state 40
    FOR             shift and go to state 41
    WHILE           shift and go to state 42
    MINUS           shift and go to state 7
    LEVEL2          shift and go to state 12
    LEVEL1          shift and go to state 13
    PLUS            reduce using rule 112 (expression -> .)
    HASH            shift and go to state 14
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    PARANOPEN       shift and go to state 6

  ! MINUS           [ reduce using rule 112 (expression -> .) ]

    expression                     shift and go to state 38
    factor                         shift and go to state 39
    term                           shift and go to state 3
    whileloop                      shift and go to state 8
    forloop                        shift and go to state 9
    forloop2                       shift and go to state 10
    whileloop2                     shift and go to state 11

state 14

    (113) expression -> HASH . expression
    (114) expression -> HASH . ID
    (115) expression -> HASH . STR_CONST
    (1) expression -> . ID EQUAL expression
    (2) expression -> . ID EQUAL EMP_LIST
    (3) expression -> . ID EQUAL EMP_TUPLE
    (4) expression -> . ID EQUAL EMP_SET
    (5) expression -> . ID EQUAL STR_CONST
    (6) expression -> . ID EQUAL ID
    (7) expression -> . ID PLUS EQUAL term
    (8) expression -> . factor PLUS factor
    (9) expression -> . expression PLUS term
    (10) expression -> . ID PLUS factor
    (11) expression -> . factor PLUS ID
    (12) expression -> . ID PLUS ID
    (13) expression -> . expression PLUS ID
    (14) expression -> . ID PLUS expression
    (15) expression -> . PRINT PARANOPEN STR_CONST PARANCLOSE
    (16) expression -> . PRINT PARANOPEN ID PARANCLOSE
    (17) expression -> . PRINT PARANOPEN term PARANCLOSE
    (18) expression -> . expression MINUS term
    (19) expression -> . ID MINUS EQUAL term
    (20) expression -> . MINUS term
    (21) expression -> . term MINUS expression
    (22) expression -> . term MINUS term
    (23) expression -> . ID MINUS ID
    (24) expression -> . term MINUS ID
    (25) expression -> . ID MINUS term
    (26) expression -> . term
    (39) expression -> . whileloop
    (40) expression -> . forloop
    (41) expression -> . forloop2
    (42) expression -> . whileloop2
    (91) expression -> . LEVEL2 ID EQUAL expression
    (92) expression -> . LEVEL2 ID EQUAL ID
    (93) expression -> . LEVEL2 ID EQUAL STR_CONST
    (94) expression -> . LEVEL1 ID EQUAL expression
    (95) expression -> . LEVEL1 ID EQUAL ID
    (96) expression -> . LEVEL1 ID EQUAL STR_CONST
    (97) expression -> . LEVEL1 ID EQUAL factor
    (98) expression -> . LEVEL1 ID PLUS EQUAL term
    (99) expression -> . LEVEL1 expression PLUS term
    (100) expression -> . LEVEL1 ID PLUS factor
    (101) expression -> . LEVEL1 factor PLUS ID
    (102) expression -> . LEVEL1 ID PLUS ID
    (103) expression -> . LEVEL1 expression PLUS ID
    (104) expression -> . LEVEL1 ID PLUS expression
    (105) expression -> . LEVEL1 factor PLUS factor
    (106) expression -> . LEVEL2 PRINT PARANOPEN STR_CONST PARANCLOSE
    (107) expression -> . LEVEL2 PRINT PARANOPEN ID PARANCLOSE
    (108) expression -> . LEVEL2 PRINT PARANOPEN term PARANCLOSE
    (109) expression -> . LEVEL1 PRINT PARANOPEN STR_CONST PARANCLOSE
    (110) expression -> . LEVEL1 PRINT PARANOPEN ID PARANCLOSE
    (111) expression -> . LEVEL1 PRINT PARANOPEN term PARANCLOSE
    (112) expression -> .
    (113) expression -> . HASH expression
    (114) expression -> . HASH ID
    (115) expression -> . HASH STR_CONST
    (36) factor -> . INT
    (37) factor -> . FLOAT
    (38) factor -> . PARANOPEN expression PARANCLOSE
    (27) term -> . term MULTIPLY factor
    (28) term -> . ID MULTIPLY ID
    (29) term -> . ID MULTIPLY factor
    (30) term -> . factor MULTIPLY ID
    (31) term -> . ID MULTIPLY term
    (32) term -> . term MULTIPLY ID
    (33) term -> . factor MULTIPLY factor
    (34) term -> . term DIVIDE factor
    (35) term -> . factor
    (62) whileloop -> . WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (63) whileloop -> . WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (64) whileloop -> . WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (65) whileloop -> . WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (66) whileloop -> . WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (67) whileloop -> . WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (68) whileloop -> . WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (69) whileloop -> . WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (70) whileloop -> . WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (71) whileloop -> . WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (72) whileloop -> . WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (73) whileloop -> . WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (74) whileloop -> . WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (75) whileloop -> . WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (76) whileloop -> . WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (77) whileloop -> . WHILE BOOL COLON
    (78) whileloop -> . WHILE STR_CONST COLON
    (79) whileloop -> . WHILE factor COLON
    (80) whileloop -> . WHILE ID COLON
    (86) forloop -> . FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (87) forloop -> . FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (88) forloop -> . FOR ID IN STR_CONST COLON
    (89) forloop -> . FOR ID IN ID COLON
    (90) forloop -> . FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (81) forloop2 -> . LEVEL1 FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (82) forloop2 -> . LEVEL1 FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (83) forloop2 -> . LEVEL1 FOR ID IN STR_CONST COLON
    (84) forloop2 -> . LEVEL1 FOR ID IN ID COLON
    (85) forloop2 -> . LEVEL1 FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (43) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (44) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (45) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (46) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (47) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (48) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (49) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (50) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (51) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (52) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (53) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (54) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (55) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (56) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (57) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (58) whileloop2 -> . LEVEL1 WHILE BOOL COLON
    (59) whileloop2 -> . LEVEL1 WHILE STR_CONST COLON
    (60) whileloop2 -> . LEVEL1 WHILE factor COLON
    (61) whileloop2 -> . LEVEL1 WHILE ID COLON

  ! shift/reduce conflict for MINUS resolved as shift
    ID              shift and go to state 44
    STR_CONST       shift and go to state 45
    PRINT           shift and go to state 5
    MINUS           shift and go to state 7
    LEVEL2          shift and go to state 12
    LEVEL1          shift and go to state 13
    PLUS            reduce using rule 112 (expression -> .)
    $end            reduce using rule 112 (expression -> .)
    PARANCLOSE      reduce using rule 112 (expression -> .)
    HASH            shift and go to state 14
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    PARANOPEN       shift and go to state 6
    WHILE           shift and go to state 17
    FOR             shift and go to state 18

  ! MINUS           [ reduce using rule 112 (expression -> .) ]

    expression                     shift and go to state 43
    term                           shift and go to state 3
    factor                         shift and go to state 4
    whileloop                      shift and go to state 8
    forloop                        shift and go to state 9
    forloop2                       shift and go to state 10
    whileloop2                     shift and go to state 11

state 15

    (36) factor -> INT .

    PLUS            reduce using rule 36 (factor -> INT .)
    MULTIPLY        reduce using rule 36 (factor -> INT .)
    MINUS           reduce using rule 36 (factor -> INT .)
    DIVIDE          reduce using rule 36 (factor -> INT .)
    $end            reduce using rule 36 (factor -> INT .)
    PARANCLOSE      reduce using rule 36 (factor -> INT .)
    COLON           reduce using rule 36 (factor -> INT .)


state 16

    (37) factor -> FLOAT .

    PLUS            reduce using rule 37 (factor -> FLOAT .)
    MULTIPLY        reduce using rule 37 (factor -> FLOAT .)
    MINUS           reduce using rule 37 (factor -> FLOAT .)
    DIVIDE          reduce using rule 37 (factor -> FLOAT .)
    $end            reduce using rule 37 (factor -> FLOAT .)
    PARANCLOSE      reduce using rule 37 (factor -> FLOAT .)
    COLON           reduce using rule 37 (factor -> FLOAT .)


state 17

    (62) whileloop -> WHILE . PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (63) whileloop -> WHILE . PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (64) whileloop -> WHILE . PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (65) whileloop -> WHILE . PARANOPEN ID GREATER factor PARANCLOSE COLON
    (66) whileloop -> WHILE . PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (67) whileloop -> WHILE . PARANOPEN ID GREATER ID PARANCLOSE COLON
    (68) whileloop -> WHILE . PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (69) whileloop -> WHILE . PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (70) whileloop -> WHILE . PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (71) whileloop -> WHILE . PARANOPEN ID LESSER factor PARANCLOSE COLON
    (72) whileloop -> WHILE . PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (73) whileloop -> WHILE . PARANOPEN ID LESSER ID PARANCLOSE COLON
    (74) whileloop -> WHILE . PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (75) whileloop -> WHILE . PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (76) whileloop -> WHILE . PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (77) whileloop -> WHILE . BOOL COLON
    (78) whileloop -> WHILE . STR_CONST COLON
    (79) whileloop -> WHILE . factor COLON
    (80) whileloop -> WHILE . ID COLON
    (36) factor -> . INT
    (37) factor -> . FLOAT
    (38) factor -> . PARANOPEN expression PARANCLOSE

    PARANOPEN       shift and go to state 46
    BOOL            shift and go to state 50
    STR_CONST       shift and go to state 49
    ID              shift and go to state 47
    INT             shift and go to state 15
    FLOAT           shift and go to state 16

    factor                         shift and go to state 48

state 18

    (86) forloop -> FOR . ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (87) forloop -> FOR . ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (88) forloop -> FOR . ID IN STR_CONST COLON
    (89) forloop -> FOR . ID IN ID COLON
    (90) forloop -> FOR . ID IN PARANOPEN STR_CONST PARANCLOSE COLON

    ID              shift and go to state 51


state 19

    (9) expression -> expression PLUS . term
    (13) expression -> expression PLUS . ID
    (27) term -> . term MULTIPLY factor
    (28) term -> . ID MULTIPLY ID
    (29) term -> . ID MULTIPLY factor
    (30) term -> . factor MULTIPLY ID
    (31) term -> . ID MULTIPLY term
    (32) term -> . term MULTIPLY ID
    (33) term -> . factor MULTIPLY factor
    (34) term -> . term DIVIDE factor
    (35) term -> . factor
    (36) factor -> . INT
    (37) factor -> . FLOAT
    (38) factor -> . PARANOPEN expression PARANCLOSE

    ID              shift and go to state 53
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    PARANOPEN       shift and go to state 6

    term                           shift and go to state 52
    factor                         shift and go to state 33

state 20

    (18) expression -> expression MINUS . term
    (27) term -> . term MULTIPLY factor
    (28) term -> . ID MULTIPLY ID
    (29) term -> . ID MULTIPLY factor
    (30) term -> . factor MULTIPLY ID
    (31) term -> . ID MULTIPLY term
    (32) term -> . term MULTIPLY ID
    (33) term -> . factor MULTIPLY factor
    (34) term -> . term DIVIDE factor
    (35) term -> . factor
    (36) factor -> . INT
    (37) factor -> . FLOAT
    (38) factor -> . PARANOPEN expression PARANCLOSE

    ID              shift and go to state 34
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    PARANOPEN       shift and go to state 6

    term                           shift and go to state 54
    factor                         shift and go to state 33

state 21

    (1) expression -> ID EQUAL . expression
    (2) expression -> ID EQUAL . EMP_LIST
    (3) expression -> ID EQUAL . EMP_TUPLE
    (4) expression -> ID EQUAL . EMP_SET
    (5) expression -> ID EQUAL . STR_CONST
    (6) expression -> ID EQUAL . ID
    (1) expression -> . ID EQUAL expression
    (2) expression -> . ID EQUAL EMP_LIST
    (3) expression -> . ID EQUAL EMP_TUPLE
    (4) expression -> . ID EQUAL EMP_SET
    (5) expression -> . ID EQUAL STR_CONST
    (6) expression -> . ID EQUAL ID
    (7) expression -> . ID PLUS EQUAL term
    (8) expression -> . factor PLUS factor
    (9) expression -> . expression PLUS term
    (10) expression -> . ID PLUS factor
    (11) expression -> . factor PLUS ID
    (12) expression -> . ID PLUS ID
    (13) expression -> . expression PLUS ID
    (14) expression -> . ID PLUS expression
    (15) expression -> . PRINT PARANOPEN STR_CONST PARANCLOSE
    (16) expression -> . PRINT PARANOPEN ID PARANCLOSE
    (17) expression -> . PRINT PARANOPEN term PARANCLOSE
    (18) expression -> . expression MINUS term
    (19) expression -> . ID MINUS EQUAL term
    (20) expression -> . MINUS term
    (21) expression -> . term MINUS expression
    (22) expression -> . term MINUS term
    (23) expression -> . ID MINUS ID
    (24) expression -> . term MINUS ID
    (25) expression -> . ID MINUS term
    (26) expression -> . term
    (39) expression -> . whileloop
    (40) expression -> . forloop
    (41) expression -> . forloop2
    (42) expression -> . whileloop2
    (91) expression -> . LEVEL2 ID EQUAL expression
    (92) expression -> . LEVEL2 ID EQUAL ID
    (93) expression -> . LEVEL2 ID EQUAL STR_CONST
    (94) expression -> . LEVEL1 ID EQUAL expression
    (95) expression -> . LEVEL1 ID EQUAL ID
    (96) expression -> . LEVEL1 ID EQUAL STR_CONST
    (97) expression -> . LEVEL1 ID EQUAL factor
    (98) expression -> . LEVEL1 ID PLUS EQUAL term
    (99) expression -> . LEVEL1 expression PLUS term
    (100) expression -> . LEVEL1 ID PLUS factor
    (101) expression -> . LEVEL1 factor PLUS ID
    (102) expression -> . LEVEL1 ID PLUS ID
    (103) expression -> . LEVEL1 expression PLUS ID
    (104) expression -> . LEVEL1 ID PLUS expression
    (105) expression -> . LEVEL1 factor PLUS factor
    (106) expression -> . LEVEL2 PRINT PARANOPEN STR_CONST PARANCLOSE
    (107) expression -> . LEVEL2 PRINT PARANOPEN ID PARANCLOSE
    (108) expression -> . LEVEL2 PRINT PARANOPEN term PARANCLOSE
    (109) expression -> . LEVEL1 PRINT PARANOPEN STR_CONST PARANCLOSE
    (110) expression -> . LEVEL1 PRINT PARANOPEN ID PARANCLOSE
    (111) expression -> . LEVEL1 PRINT PARANOPEN term PARANCLOSE
    (112) expression -> .
    (113) expression -> . HASH expression
    (114) expression -> . HASH ID
    (115) expression -> . HASH STR_CONST
    (36) factor -> . INT
    (37) factor -> . FLOAT
    (38) factor -> . PARANOPEN expression PARANCLOSE
    (27) term -> . term MULTIPLY factor
    (28) term -> . ID MULTIPLY ID
    (29) term -> . ID MULTIPLY factor
    (30) term -> . factor MULTIPLY ID
    (31) term -> . ID MULTIPLY term
    (32) term -> . term MULTIPLY ID
    (33) term -> . factor MULTIPLY factor
    (34) term -> . term DIVIDE factor
    (35) term -> . factor
    (62) whileloop -> . WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (63) whileloop -> . WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (64) whileloop -> . WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (65) whileloop -> . WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (66) whileloop -> . WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (67) whileloop -> . WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (68) whileloop -> . WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (69) whileloop -> . WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (70) whileloop -> . WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (71) whileloop -> . WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (72) whileloop -> . WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (73) whileloop -> . WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (74) whileloop -> . WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (75) whileloop -> . WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (76) whileloop -> . WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (77) whileloop -> . WHILE BOOL COLON
    (78) whileloop -> . WHILE STR_CONST COLON
    (79) whileloop -> . WHILE factor COLON
    (80) whileloop -> . WHILE ID COLON
    (86) forloop -> . FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (87) forloop -> . FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (88) forloop -> . FOR ID IN STR_CONST COLON
    (89) forloop -> . FOR ID IN ID COLON
    (90) forloop -> . FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (81) forloop2 -> . LEVEL1 FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (82) forloop2 -> . LEVEL1 FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (83) forloop2 -> . LEVEL1 FOR ID IN STR_CONST COLON
    (84) forloop2 -> . LEVEL1 FOR ID IN ID COLON
    (85) forloop2 -> . LEVEL1 FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (43) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (44) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (45) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (46) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (47) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (48) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (49) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (50) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (51) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (52) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (53) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (54) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (55) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (56) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (57) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (58) whileloop2 -> . LEVEL1 WHILE BOOL COLON
    (59) whileloop2 -> . LEVEL1 WHILE STR_CONST COLON
    (60) whileloop2 -> . LEVEL1 WHILE factor COLON
    (61) whileloop2 -> . LEVEL1 WHILE ID COLON

  ! shift/reduce conflict for MINUS resolved as shift
    EMP_LIST        shift and go to state 57
    EMP_TUPLE       shift and go to state 58
    EMP_SET         shift and go to state 59
    STR_CONST       shift and go to state 60
    ID              shift and go to state 55
    PRINT           shift and go to state 5
    MINUS           shift and go to state 7
    LEVEL2          shift and go to state 12
    LEVEL1          shift and go to state 13
    PLUS            reduce using rule 112 (expression -> .)
    $end            reduce using rule 112 (expression -> .)
    PARANCLOSE      reduce using rule 112 (expression -> .)
    HASH            shift and go to state 14
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    PARANOPEN       shift and go to state 6
    WHILE           shift and go to state 17
    FOR             shift and go to state 18

  ! MINUS           [ reduce using rule 112 (expression -> .) ]

    expression                     shift and go to state 56
    term                           shift and go to state 3
    factor                         shift and go to state 4
    whileloop                      shift and go to state 8
    forloop                        shift and go to state 9
    forloop2                       shift and go to state 10
    whileloop2                     shift and go to state 11

state 22

    (7) expression -> ID PLUS . EQUAL term
    (10) expression -> ID PLUS . factor
    (12) expression -> ID PLUS . ID
    (14) expression -> ID PLUS . expression
    (36) factor -> . INT
    (37) factor -> . FLOAT
    (38) factor -> . PARANOPEN expression PARANCLOSE
    (1) expression -> . ID EQUAL expression
    (2) expression -> . ID EQUAL EMP_LIST
    (3) expression -> . ID EQUAL EMP_TUPLE
    (4) expression -> . ID EQUAL EMP_SET
    (5) expression -> . ID EQUAL STR_CONST
    (6) expression -> . ID EQUAL ID
    (7) expression -> . ID PLUS EQUAL term
    (8) expression -> . factor PLUS factor
    (9) expression -> . expression PLUS term
    (10) expression -> . ID PLUS factor
    (11) expression -> . factor PLUS ID
    (12) expression -> . ID PLUS ID
    (13) expression -> . expression PLUS ID
    (14) expression -> . ID PLUS expression
    (15) expression -> . PRINT PARANOPEN STR_CONST PARANCLOSE
    (16) expression -> . PRINT PARANOPEN ID PARANCLOSE
    (17) expression -> . PRINT PARANOPEN term PARANCLOSE
    (18) expression -> . expression MINUS term
    (19) expression -> . ID MINUS EQUAL term
    (20) expression -> . MINUS term
    (21) expression -> . term MINUS expression
    (22) expression -> . term MINUS term
    (23) expression -> . ID MINUS ID
    (24) expression -> . term MINUS ID
    (25) expression -> . ID MINUS term
    (26) expression -> . term
    (39) expression -> . whileloop
    (40) expression -> . forloop
    (41) expression -> . forloop2
    (42) expression -> . whileloop2
    (91) expression -> . LEVEL2 ID EQUAL expression
    (92) expression -> . LEVEL2 ID EQUAL ID
    (93) expression -> . LEVEL2 ID EQUAL STR_CONST
    (94) expression -> . LEVEL1 ID EQUAL expression
    (95) expression -> . LEVEL1 ID EQUAL ID
    (96) expression -> . LEVEL1 ID EQUAL STR_CONST
    (97) expression -> . LEVEL1 ID EQUAL factor
    (98) expression -> . LEVEL1 ID PLUS EQUAL term
    (99) expression -> . LEVEL1 expression PLUS term
    (100) expression -> . LEVEL1 ID PLUS factor
    (101) expression -> . LEVEL1 factor PLUS ID
    (102) expression -> . LEVEL1 ID PLUS ID
    (103) expression -> . LEVEL1 expression PLUS ID
    (104) expression -> . LEVEL1 ID PLUS expression
    (105) expression -> . LEVEL1 factor PLUS factor
    (106) expression -> . LEVEL2 PRINT PARANOPEN STR_CONST PARANCLOSE
    (107) expression -> . LEVEL2 PRINT PARANOPEN ID PARANCLOSE
    (108) expression -> . LEVEL2 PRINT PARANOPEN term PARANCLOSE
    (109) expression -> . LEVEL1 PRINT PARANOPEN STR_CONST PARANCLOSE
    (110) expression -> . LEVEL1 PRINT PARANOPEN ID PARANCLOSE
    (111) expression -> . LEVEL1 PRINT PARANOPEN term PARANCLOSE
    (112) expression -> .
    (113) expression -> . HASH expression
    (114) expression -> . HASH ID
    (115) expression -> . HASH STR_CONST
    (27) term -> . term MULTIPLY factor
    (28) term -> . ID MULTIPLY ID
    (29) term -> . ID MULTIPLY factor
    (30) term -> . factor MULTIPLY ID
    (31) term -> . ID MULTIPLY term
    (32) term -> . term MULTIPLY ID
    (33) term -> . factor MULTIPLY factor
    (34) term -> . term DIVIDE factor
    (35) term -> . factor
    (62) whileloop -> . WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (63) whileloop -> . WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (64) whileloop -> . WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (65) whileloop -> . WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (66) whileloop -> . WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (67) whileloop -> . WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (68) whileloop -> . WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (69) whileloop -> . WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (70) whileloop -> . WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (71) whileloop -> . WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (72) whileloop -> . WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (73) whileloop -> . WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (74) whileloop -> . WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (75) whileloop -> . WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (76) whileloop -> . WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (77) whileloop -> . WHILE BOOL COLON
    (78) whileloop -> . WHILE STR_CONST COLON
    (79) whileloop -> . WHILE factor COLON
    (80) whileloop -> . WHILE ID COLON
    (86) forloop -> . FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (87) forloop -> . FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (88) forloop -> . FOR ID IN STR_CONST COLON
    (89) forloop -> . FOR ID IN ID COLON
    (90) forloop -> . FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (81) forloop2 -> . LEVEL1 FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (82) forloop2 -> . LEVEL1 FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (83) forloop2 -> . LEVEL1 FOR ID IN STR_CONST COLON
    (84) forloop2 -> . LEVEL1 FOR ID IN ID COLON
    (85) forloop2 -> . LEVEL1 FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (43) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (44) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (45) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (46) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (47) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (48) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (49) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (50) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (51) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (52) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (53) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (54) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (55) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (56) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (57) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (58) whileloop2 -> . LEVEL1 WHILE BOOL COLON
    (59) whileloop2 -> . LEVEL1 WHILE STR_CONST COLON
    (60) whileloop2 -> . LEVEL1 WHILE factor COLON
    (61) whileloop2 -> . LEVEL1 WHILE ID COLON

  ! shift/reduce conflict for MINUS resolved as shift
    EQUAL           shift and go to state 62
    ID              shift and go to state 61
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    PARANOPEN       shift and go to state 6
    PRINT           shift and go to state 5
    MINUS           shift and go to state 7
    LEVEL2          shift and go to state 12
    LEVEL1          shift and go to state 13
    PLUS            reduce using rule 112 (expression -> .)
    $end            reduce using rule 112 (expression -> .)
    PARANCLOSE      reduce using rule 112 (expression -> .)
    HASH            shift and go to state 14
    WHILE           shift and go to state 17
    FOR             shift and go to state 18

  ! MINUS           [ reduce using rule 112 (expression -> .) ]

    term                           shift and go to state 3
    factor                         shift and go to state 63
    expression                     shift and go to state 64
    whileloop                      shift and go to state 8
    forloop                        shift and go to state 9
    forloop2                       shift and go to state 10
    whileloop2                     shift and go to state 11

state 23

    (19) expression -> ID MINUS . EQUAL term
    (23) expression -> ID MINUS . ID
    (25) expression -> ID MINUS . term
    (27) term -> . term MULTIPLY factor
    (28) term -> . ID MULTIPLY ID
    (29) term -> . ID MULTIPLY factor
    (30) term -> . factor MULTIPLY ID
    (31) term -> . ID MULTIPLY term
    (32) term -> . term MULTIPLY ID
    (33) term -> . factor MULTIPLY factor
    (34) term -> . term DIVIDE factor
    (35) term -> . factor
    (36) factor -> . INT
    (37) factor -> . FLOAT
    (38) factor -> . PARANOPEN expression PARANCLOSE

    EQUAL           shift and go to state 66
    ID              shift and go to state 65
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    PARANOPEN       shift and go to state 6

    term                           shift and go to state 67
    factor                         shift and go to state 33

state 24

    (28) term -> ID MULTIPLY . ID
    (29) term -> ID MULTIPLY . factor
    (31) term -> ID MULTIPLY . term
    (36) factor -> . INT
    (37) factor -> . FLOAT
    (38) factor -> . PARANOPEN expression PARANCLOSE
    (27) term -> . term MULTIPLY factor
    (28) term -> . ID MULTIPLY ID
    (29) term -> . ID MULTIPLY factor
    (30) term -> . factor MULTIPLY ID
    (31) term -> . ID MULTIPLY term
    (32) term -> . term MULTIPLY ID
    (33) term -> . factor MULTIPLY factor
    (34) term -> . term DIVIDE factor
    (35) term -> . factor

    ID              shift and go to state 68
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    PARANOPEN       shift and go to state 6

    factor                         shift and go to state 69
    term                           shift and go to state 70

state 25

    (21) expression -> term MINUS . expression
    (22) expression -> term MINUS . term
    (24) expression -> term MINUS . ID
    (1) expression -> . ID EQUAL expression
    (2) expression -> . ID EQUAL EMP_LIST
    (3) expression -> . ID EQUAL EMP_TUPLE
    (4) expression -> . ID EQUAL EMP_SET
    (5) expression -> . ID EQUAL STR_CONST
    (6) expression -> . ID EQUAL ID
    (7) expression -> . ID PLUS EQUAL term
    (8) expression -> . factor PLUS factor
    (9) expression -> . expression PLUS term
    (10) expression -> . ID PLUS factor
    (11) expression -> . factor PLUS ID
    (12) expression -> . ID PLUS ID
    (13) expression -> . expression PLUS ID
    (14) expression -> . ID PLUS expression
    (15) expression -> . PRINT PARANOPEN STR_CONST PARANCLOSE
    (16) expression -> . PRINT PARANOPEN ID PARANCLOSE
    (17) expression -> . PRINT PARANOPEN term PARANCLOSE
    (18) expression -> . expression MINUS term
    (19) expression -> . ID MINUS EQUAL term
    (20) expression -> . MINUS term
    (21) expression -> . term MINUS expression
    (22) expression -> . term MINUS term
    (23) expression -> . ID MINUS ID
    (24) expression -> . term MINUS ID
    (25) expression -> . ID MINUS term
    (26) expression -> . term
    (39) expression -> . whileloop
    (40) expression -> . forloop
    (41) expression -> . forloop2
    (42) expression -> . whileloop2
    (91) expression -> . LEVEL2 ID EQUAL expression
    (92) expression -> . LEVEL2 ID EQUAL ID
    (93) expression -> . LEVEL2 ID EQUAL STR_CONST
    (94) expression -> . LEVEL1 ID EQUAL expression
    (95) expression -> . LEVEL1 ID EQUAL ID
    (96) expression -> . LEVEL1 ID EQUAL STR_CONST
    (97) expression -> . LEVEL1 ID EQUAL factor
    (98) expression -> . LEVEL1 ID PLUS EQUAL term
    (99) expression -> . LEVEL1 expression PLUS term
    (100) expression -> . LEVEL1 ID PLUS factor
    (101) expression -> . LEVEL1 factor PLUS ID
    (102) expression -> . LEVEL1 ID PLUS ID
    (103) expression -> . LEVEL1 expression PLUS ID
    (104) expression -> . LEVEL1 ID PLUS expression
    (105) expression -> . LEVEL1 factor PLUS factor
    (106) expression -> . LEVEL2 PRINT PARANOPEN STR_CONST PARANCLOSE
    (107) expression -> . LEVEL2 PRINT PARANOPEN ID PARANCLOSE
    (108) expression -> . LEVEL2 PRINT PARANOPEN term PARANCLOSE
    (109) expression -> . LEVEL1 PRINT PARANOPEN STR_CONST PARANCLOSE
    (110) expression -> . LEVEL1 PRINT PARANOPEN ID PARANCLOSE
    (111) expression -> . LEVEL1 PRINT PARANOPEN term PARANCLOSE
    (112) expression -> .
    (113) expression -> . HASH expression
    (114) expression -> . HASH ID
    (115) expression -> . HASH STR_CONST
    (27) term -> . term MULTIPLY factor
    (28) term -> . ID MULTIPLY ID
    (29) term -> . ID MULTIPLY factor
    (30) term -> . factor MULTIPLY ID
    (31) term -> . ID MULTIPLY term
    (32) term -> . term MULTIPLY ID
    (33) term -> . factor MULTIPLY factor
    (34) term -> . term DIVIDE factor
    (35) term -> . factor
    (36) factor -> . INT
    (37) factor -> . FLOAT
    (38) factor -> . PARANOPEN expression PARANCLOSE
    (62) whileloop -> . WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (63) whileloop -> . WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (64) whileloop -> . WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (65) whileloop -> . WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (66) whileloop -> . WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (67) whileloop -> . WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (68) whileloop -> . WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (69) whileloop -> . WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (70) whileloop -> . WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (71) whileloop -> . WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (72) whileloop -> . WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (73) whileloop -> . WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (74) whileloop -> . WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (75) whileloop -> . WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (76) whileloop -> . WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (77) whileloop -> . WHILE BOOL COLON
    (78) whileloop -> . WHILE STR_CONST COLON
    (79) whileloop -> . WHILE factor COLON
    (80) whileloop -> . WHILE ID COLON
    (86) forloop -> . FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (87) forloop -> . FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (88) forloop -> . FOR ID IN STR_CONST COLON
    (89) forloop -> . FOR ID IN ID COLON
    (90) forloop -> . FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (81) forloop2 -> . LEVEL1 FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (82) forloop2 -> . LEVEL1 FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (83) forloop2 -> . LEVEL1 FOR ID IN STR_CONST COLON
    (84) forloop2 -> . LEVEL1 FOR ID IN ID COLON
    (85) forloop2 -> . LEVEL1 FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (43) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (44) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (45) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (46) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (47) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (48) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (49) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (50) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (51) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (52) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (53) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (54) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (55) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (56) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (57) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (58) whileloop2 -> . LEVEL1 WHILE BOOL COLON
    (59) whileloop2 -> . LEVEL1 WHILE STR_CONST COLON
    (60) whileloop2 -> . LEVEL1 WHILE factor COLON
    (61) whileloop2 -> . LEVEL1 WHILE ID COLON

  ! shift/reduce conflict for MINUS resolved as shift
    ID              shift and go to state 73
    PRINT           shift and go to state 5
    MINUS           shift and go to state 7
    LEVEL2          shift and go to state 12
    LEVEL1          shift and go to state 13
    PLUS            reduce using rule 112 (expression -> .)
    $end            reduce using rule 112 (expression -> .)
    PARANCLOSE      reduce using rule 112 (expression -> .)
    HASH            shift and go to state 14
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    PARANOPEN       shift and go to state 6
    WHILE           shift and go to state 17
    FOR             shift and go to state 18

  ! MINUS           [ reduce using rule 112 (expression -> .) ]

    term                           shift and go to state 71
    expression                     shift and go to state 72
    factor                         shift and go to state 4
    whileloop                      shift and go to state 8
    forloop                        shift and go to state 9
    forloop2                       shift and go to state 10
    whileloop2                     shift and go to state 11

state 26

    (27) term -> term MULTIPLY . factor
    (32) term -> term MULTIPLY . ID
    (36) factor -> . INT
    (37) factor -> . FLOAT
    (38) factor -> . PARANOPEN expression PARANCLOSE

    ID              shift and go to state 75
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    PARANOPEN       shift and go to state 6

    factor                         shift and go to state 74

state 27

    (34) term -> term DIVIDE . factor
    (36) factor -> . INT
    (37) factor -> . FLOAT
    (38) factor -> . PARANOPEN expression PARANCLOSE

    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    PARANOPEN       shift and go to state 6

    factor                         shift and go to state 76

state 28

    (8) expression -> factor PLUS . factor
    (11) expression -> factor PLUS . ID
    (36) factor -> . INT
    (37) factor -> . FLOAT
    (38) factor -> . PARANOPEN expression PARANCLOSE

    ID              shift and go to state 78
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    PARANOPEN       shift and go to state 6

    factor                         shift and go to state 77

state 29

    (30) term -> factor MULTIPLY . ID
    (33) term -> factor MULTIPLY . factor
    (36) factor -> . INT
    (37) factor -> . FLOAT
    (38) factor -> . PARANOPEN expression PARANCLOSE

    ID              shift and go to state 80
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    PARANOPEN       shift and go to state 6

    factor                         shift and go to state 79

state 30

    (15) expression -> PRINT PARANOPEN . STR_CONST PARANCLOSE
    (16) expression -> PRINT PARANOPEN . ID PARANCLOSE
    (17) expression -> PRINT PARANOPEN . term PARANCLOSE
    (27) term -> . term MULTIPLY factor
    (28) term -> . ID MULTIPLY ID
    (29) term -> . ID MULTIPLY factor
    (30) term -> . factor MULTIPLY ID
    (31) term -> . ID MULTIPLY term
    (32) term -> . term MULTIPLY ID
    (33) term -> . factor MULTIPLY factor
    (34) term -> . term DIVIDE factor
    (35) term -> . factor
    (36) factor -> . INT
    (37) factor -> . FLOAT
    (38) factor -> . PARANOPEN expression PARANCLOSE

    STR_CONST       shift and go to state 81
    ID              shift and go to state 82
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    PARANOPEN       shift and go to state 6

    term                           shift and go to state 83
    factor                         shift and go to state 33

state 31

    (38) factor -> PARANOPEN expression . PARANCLOSE
    (9) expression -> expression . PLUS term
    (13) expression -> expression . PLUS ID
    (18) expression -> expression . MINUS term

    PARANCLOSE      shift and go to state 84
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20


state 32

    (20) expression -> MINUS term .
    (27) term -> term . MULTIPLY factor
    (32) term -> term . MULTIPLY ID
    (34) term -> term . DIVIDE factor

    PLUS            reduce using rule 20 (expression -> MINUS term .)
    MINUS           reduce using rule 20 (expression -> MINUS term .)
    $end            reduce using rule 20 (expression -> MINUS term .)
    PARANCLOSE      reduce using rule 20 (expression -> MINUS term .)
    MULTIPLY        shift and go to state 26
    DIVIDE          shift and go to state 27


state 33

    (30) term -> factor . MULTIPLY ID
    (33) term -> factor . MULTIPLY factor
    (35) term -> factor .

  ! shift/reduce conflict for MULTIPLY resolved as shift
    MULTIPLY        shift and go to state 29
    DIVIDE          reduce using rule 35 (term -> factor .)
    PLUS            reduce using rule 35 (term -> factor .)
    MINUS           reduce using rule 35 (term -> factor .)
    $end            reduce using rule 35 (term -> factor .)
    PARANCLOSE      reduce using rule 35 (term -> factor .)

  ! MULTIPLY        [ reduce using rule 35 (term -> factor .) ]


state 34

    (28) term -> ID . MULTIPLY ID
    (29) term -> ID . MULTIPLY factor
    (31) term -> ID . MULTIPLY term

    MULTIPLY        shift and go to state 24


state 35

    (91) expression -> LEVEL2 ID . EQUAL expression
    (92) expression -> LEVEL2 ID . EQUAL ID
    (93) expression -> LEVEL2 ID . EQUAL STR_CONST

    EQUAL           shift and go to state 85


state 36

    (106) expression -> LEVEL2 PRINT . PARANOPEN STR_CONST PARANCLOSE
    (107) expression -> LEVEL2 PRINT . PARANOPEN ID PARANCLOSE
    (108) expression -> LEVEL2 PRINT . PARANOPEN term PARANCLOSE

    PARANOPEN       shift and go to state 86


state 37

    (94) expression -> LEVEL1 ID . EQUAL expression
    (95) expression -> LEVEL1 ID . EQUAL ID
    (96) expression -> LEVEL1 ID . EQUAL STR_CONST
    (97) expression -> LEVEL1 ID . EQUAL factor
    (98) expression -> LEVEL1 ID . PLUS EQUAL term
    (100) expression -> LEVEL1 ID . PLUS factor
    (102) expression -> LEVEL1 ID . PLUS ID
    (104) expression -> LEVEL1 ID . PLUS expression
    (1) expression -> ID . EQUAL expression
    (2) expression -> ID . EQUAL EMP_LIST
    (3) expression -> ID . EQUAL EMP_TUPLE
    (4) expression -> ID . EQUAL EMP_SET
    (5) expression -> ID . EQUAL STR_CONST
    (6) expression -> ID . EQUAL ID
    (7) expression -> ID . PLUS EQUAL term
    (10) expression -> ID . PLUS factor
    (12) expression -> ID . PLUS ID
    (14) expression -> ID . PLUS expression
    (19) expression -> ID . MINUS EQUAL term
    (23) expression -> ID . MINUS ID
    (25) expression -> ID . MINUS term
    (28) term -> ID . MULTIPLY ID
    (29) term -> ID . MULTIPLY factor
    (31) term -> ID . MULTIPLY term

    EQUAL           shift and go to state 87
    PLUS            shift and go to state 88
    MINUS           shift and go to state 23
    MULTIPLY        shift and go to state 24


state 38

    (99) expression -> LEVEL1 expression . PLUS term
    (103) expression -> LEVEL1 expression . PLUS ID
    (9) expression -> expression . PLUS term
    (13) expression -> expression . PLUS ID
    (18) expression -> expression . MINUS term

    PLUS            shift and go to state 89
    MINUS           shift and go to state 20


state 39

    (101) expression -> LEVEL1 factor . PLUS ID
    (105) expression -> LEVEL1 factor . PLUS factor
    (8) expression -> factor . PLUS factor
    (11) expression -> factor . PLUS ID
    (30) term -> factor . MULTIPLY ID
    (33) term -> factor . MULTIPLY factor
    (35) term -> factor .

  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
    PLUS            shift and go to state 90
    MULTIPLY        shift and go to state 29
    MINUS           reduce using rule 35 (term -> factor .)
    DIVIDE          reduce using rule 35 (term -> factor .)

  ! MULTIPLY        [ reduce using rule 35 (term -> factor .) ]
  ! PLUS            [ reduce using rule 35 (term -> factor .) ]


state 40

    (109) expression -> LEVEL1 PRINT . PARANOPEN STR_CONST PARANCLOSE
    (110) expression -> LEVEL1 PRINT . PARANOPEN ID PARANCLOSE
    (111) expression -> LEVEL1 PRINT . PARANOPEN term PARANCLOSE
    (15) expression -> PRINT . PARANOPEN STR_CONST PARANCLOSE
    (16) expression -> PRINT . PARANOPEN ID PARANCLOSE
    (17) expression -> PRINT . PARANOPEN term PARANCLOSE

    PARANOPEN       shift and go to state 91


state 41

    (81) forloop2 -> LEVEL1 FOR . ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (82) forloop2 -> LEVEL1 FOR . ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (83) forloop2 -> LEVEL1 FOR . ID IN STR_CONST COLON
    (84) forloop2 -> LEVEL1 FOR . ID IN ID COLON
    (85) forloop2 -> LEVEL1 FOR . ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (86) forloop -> FOR . ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (87) forloop -> FOR . ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (88) forloop -> FOR . ID IN STR_CONST COLON
    (89) forloop -> FOR . ID IN ID COLON
    (90) forloop -> FOR . ID IN PARANOPEN STR_CONST PARANCLOSE COLON

    ID              shift and go to state 92


state 42

    (43) whileloop2 -> LEVEL1 WHILE . PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (44) whileloop2 -> LEVEL1 WHILE . PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (45) whileloop2 -> LEVEL1 WHILE . PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (46) whileloop2 -> LEVEL1 WHILE . PARANOPEN ID GREATER factor PARANCLOSE COLON
    (47) whileloop2 -> LEVEL1 WHILE . PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (48) whileloop2 -> LEVEL1 WHILE . PARANOPEN ID GREATER ID PARANCLOSE COLON
    (49) whileloop2 -> LEVEL1 WHILE . PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (50) whileloop2 -> LEVEL1 WHILE . PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (51) whileloop2 -> LEVEL1 WHILE . PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (52) whileloop2 -> LEVEL1 WHILE . PARANOPEN ID LESSER factor PARANCLOSE COLON
    (53) whileloop2 -> LEVEL1 WHILE . PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (54) whileloop2 -> LEVEL1 WHILE . PARANOPEN ID LESSER ID PARANCLOSE COLON
    (55) whileloop2 -> LEVEL1 WHILE . PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (56) whileloop2 -> LEVEL1 WHILE . PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (57) whileloop2 -> LEVEL1 WHILE . PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (58) whileloop2 -> LEVEL1 WHILE . BOOL COLON
    (59) whileloop2 -> LEVEL1 WHILE . STR_CONST COLON
    (60) whileloop2 -> LEVEL1 WHILE . factor COLON
    (61) whileloop2 -> LEVEL1 WHILE . ID COLON
    (62) whileloop -> WHILE . PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (63) whileloop -> WHILE . PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (64) whileloop -> WHILE . PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (65) whileloop -> WHILE . PARANOPEN ID GREATER factor PARANCLOSE COLON
    (66) whileloop -> WHILE . PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (67) whileloop -> WHILE . PARANOPEN ID GREATER ID PARANCLOSE COLON
    (68) whileloop -> WHILE . PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (69) whileloop -> WHILE . PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (70) whileloop -> WHILE . PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (71) whileloop -> WHILE . PARANOPEN ID LESSER factor PARANCLOSE COLON
    (72) whileloop -> WHILE . PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (73) whileloop -> WHILE . PARANOPEN ID LESSER ID PARANCLOSE COLON
    (74) whileloop -> WHILE . PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (75) whileloop -> WHILE . PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (76) whileloop -> WHILE . PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (77) whileloop -> WHILE . BOOL COLON
    (78) whileloop -> WHILE . STR_CONST COLON
    (79) whileloop -> WHILE . factor COLON
    (80) whileloop -> WHILE . ID COLON
    (36) factor -> . INT
    (37) factor -> . FLOAT
    (38) factor -> . PARANOPEN expression PARANCLOSE

    PARANOPEN       shift and go to state 93
    BOOL            shift and go to state 97
    STR_CONST       shift and go to state 96
    ID              shift and go to state 94
    INT             shift and go to state 15
    FLOAT           shift and go to state 16

    factor                         shift and go to state 95

state 43

    (113) expression -> HASH expression .
    (9) expression -> expression . PLUS term
    (13) expression -> expression . PLUS ID
    (18) expression -> expression . MINUS term

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    $end            reduce using rule 113 (expression -> HASH expression .)
    PARANCLOSE      reduce using rule 113 (expression -> HASH expression .)
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20

  ! PLUS            [ reduce using rule 113 (expression -> HASH expression .) ]
  ! MINUS           [ reduce using rule 113 (expression -> HASH expression .) ]


state 44

    (114) expression -> HASH ID .
    (1) expression -> ID . EQUAL expression
    (2) expression -> ID . EQUAL EMP_LIST
    (3) expression -> ID . EQUAL EMP_TUPLE
    (4) expression -> ID . EQUAL EMP_SET
    (5) expression -> ID . EQUAL STR_CONST
    (6) expression -> ID . EQUAL ID
    (7) expression -> ID . PLUS EQUAL term
    (10) expression -> ID . PLUS factor
    (12) expression -> ID . PLUS ID
    (14) expression -> ID . PLUS expression
    (19) expression -> ID . MINUS EQUAL term
    (23) expression -> ID . MINUS ID
    (25) expression -> ID . MINUS term
    (28) term -> ID . MULTIPLY ID
    (29) term -> ID . MULTIPLY factor
    (31) term -> ID . MULTIPLY term

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    $end            reduce using rule 114 (expression -> HASH ID .)
    PARANCLOSE      reduce using rule 114 (expression -> HASH ID .)
    EQUAL           shift and go to state 21
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    MULTIPLY        shift and go to state 24

  ! PLUS            [ reduce using rule 114 (expression -> HASH ID .) ]
  ! MINUS           [ reduce using rule 114 (expression -> HASH ID .) ]


state 45

    (115) expression -> HASH STR_CONST .

    PLUS            reduce using rule 115 (expression -> HASH STR_CONST .)
    MINUS           reduce using rule 115 (expression -> HASH STR_CONST .)
    $end            reduce using rule 115 (expression -> HASH STR_CONST .)
    PARANCLOSE      reduce using rule 115 (expression -> HASH STR_CONST .)


state 46

    (62) whileloop -> WHILE PARANOPEN . ID EQUAL factor PARANCLOSE COLON
    (63) whileloop -> WHILE PARANOPEN . ID EQUAL STR_CONST PARANCLOSE COLON
    (64) whileloop -> WHILE PARANOPEN . ID EQUAL ID PARANCLOSE COLON
    (65) whileloop -> WHILE PARANOPEN . ID GREATER factor PARANCLOSE COLON
    (66) whileloop -> WHILE PARANOPEN . ID GREATER STR_CONST PARANCLOSE COLON
    (67) whileloop -> WHILE PARANOPEN . ID GREATER ID PARANCLOSE COLON
    (68) whileloop -> WHILE PARANOPEN . ID GREATEREQ factor PARANCLOSE COLON
    (69) whileloop -> WHILE PARANOPEN . ID GREATEREQ STR_CONST PARANCLOSE COLON
    (70) whileloop -> WHILE PARANOPEN . ID GREATEREQ ID PARANCLOSE COLON
    (71) whileloop -> WHILE PARANOPEN . ID LESSER factor PARANCLOSE COLON
    (72) whileloop -> WHILE PARANOPEN . ID LESSER STR_CONST PARANCLOSE COLON
    (73) whileloop -> WHILE PARANOPEN . ID LESSER ID PARANCLOSE COLON
    (74) whileloop -> WHILE PARANOPEN . ID LESSEREQ factor PARANCLOSE COLON
    (75) whileloop -> WHILE PARANOPEN . ID LESSEREQ STR_CONST PARANCLOSE COLON
    (76) whileloop -> WHILE PARANOPEN . ID LESSEREQ ID PARANCLOSE COLON
    (38) factor -> PARANOPEN . expression PARANCLOSE
    (1) expression -> . ID EQUAL expression
    (2) expression -> . ID EQUAL EMP_LIST
    (3) expression -> . ID EQUAL EMP_TUPLE
    (4) expression -> . ID EQUAL EMP_SET
    (5) expression -> . ID EQUAL STR_CONST
    (6) expression -> . ID EQUAL ID
    (7) expression -> . ID PLUS EQUAL term
    (8) expression -> . factor PLUS factor
    (9) expression -> . expression PLUS term
    (10) expression -> . ID PLUS factor
    (11) expression -> . factor PLUS ID
    (12) expression -> . ID PLUS ID
    (13) expression -> . expression PLUS ID
    (14) expression -> . ID PLUS expression
    (15) expression -> . PRINT PARANOPEN STR_CONST PARANCLOSE
    (16) expression -> . PRINT PARANOPEN ID PARANCLOSE
    (17) expression -> . PRINT PARANOPEN term PARANCLOSE
    (18) expression -> . expression MINUS term
    (19) expression -> . ID MINUS EQUAL term
    (20) expression -> . MINUS term
    (21) expression -> . term MINUS expression
    (22) expression -> . term MINUS term
    (23) expression -> . ID MINUS ID
    (24) expression -> . term MINUS ID
    (25) expression -> . ID MINUS term
    (26) expression -> . term
    (39) expression -> . whileloop
    (40) expression -> . forloop
    (41) expression -> . forloop2
    (42) expression -> . whileloop2
    (91) expression -> . LEVEL2 ID EQUAL expression
    (92) expression -> . LEVEL2 ID EQUAL ID
    (93) expression -> . LEVEL2 ID EQUAL STR_CONST
    (94) expression -> . LEVEL1 ID EQUAL expression
    (95) expression -> . LEVEL1 ID EQUAL ID
    (96) expression -> . LEVEL1 ID EQUAL STR_CONST
    (97) expression -> . LEVEL1 ID EQUAL factor
    (98) expression -> . LEVEL1 ID PLUS EQUAL term
    (99) expression -> . LEVEL1 expression PLUS term
    (100) expression -> . LEVEL1 ID PLUS factor
    (101) expression -> . LEVEL1 factor PLUS ID
    (102) expression -> . LEVEL1 ID PLUS ID
    (103) expression -> . LEVEL1 expression PLUS ID
    (104) expression -> . LEVEL1 ID PLUS expression
    (105) expression -> . LEVEL1 factor PLUS factor
    (106) expression -> . LEVEL2 PRINT PARANOPEN STR_CONST PARANCLOSE
    (107) expression -> . LEVEL2 PRINT PARANOPEN ID PARANCLOSE
    (108) expression -> . LEVEL2 PRINT PARANOPEN term PARANCLOSE
    (109) expression -> . LEVEL1 PRINT PARANOPEN STR_CONST PARANCLOSE
    (110) expression -> . LEVEL1 PRINT PARANOPEN ID PARANCLOSE
    (111) expression -> . LEVEL1 PRINT PARANOPEN term PARANCLOSE
    (112) expression -> .
    (113) expression -> . HASH expression
    (114) expression -> . HASH ID
    (115) expression -> . HASH STR_CONST
    (36) factor -> . INT
    (37) factor -> . FLOAT
    (38) factor -> . PARANOPEN expression PARANCLOSE
    (27) term -> . term MULTIPLY factor
    (28) term -> . ID MULTIPLY ID
    (29) term -> . ID MULTIPLY factor
    (30) term -> . factor MULTIPLY ID
    (31) term -> . ID MULTIPLY term
    (32) term -> . term MULTIPLY ID
    (33) term -> . factor MULTIPLY factor
    (34) term -> . term DIVIDE factor
    (35) term -> . factor
    (62) whileloop -> . WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (63) whileloop -> . WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (64) whileloop -> . WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (65) whileloop -> . WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (66) whileloop -> . WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (67) whileloop -> . WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (68) whileloop -> . WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (69) whileloop -> . WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (70) whileloop -> . WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (71) whileloop -> . WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (72) whileloop -> . WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (73) whileloop -> . WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (74) whileloop -> . WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (75) whileloop -> . WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (76) whileloop -> . WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (77) whileloop -> . WHILE BOOL COLON
    (78) whileloop -> . WHILE STR_CONST COLON
    (79) whileloop -> . WHILE factor COLON
    (80) whileloop -> . WHILE ID COLON
    (86) forloop -> . FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (87) forloop -> . FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (88) forloop -> . FOR ID IN STR_CONST COLON
    (89) forloop -> . FOR ID IN ID COLON
    (90) forloop -> . FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (81) forloop2 -> . LEVEL1 FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (82) forloop2 -> . LEVEL1 FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (83) forloop2 -> . LEVEL1 FOR ID IN STR_CONST COLON
    (84) forloop2 -> . LEVEL1 FOR ID IN ID COLON
    (85) forloop2 -> . LEVEL1 FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (43) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (44) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (45) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (46) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (47) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (48) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (49) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (50) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (51) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (52) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (53) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (54) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (55) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (56) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (57) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (58) whileloop2 -> . LEVEL1 WHILE BOOL COLON
    (59) whileloop2 -> . LEVEL1 WHILE STR_CONST COLON
    (60) whileloop2 -> . LEVEL1 WHILE factor COLON
    (61) whileloop2 -> . LEVEL1 WHILE ID COLON

  ! shift/reduce conflict for MINUS resolved as shift
    ID              shift and go to state 98
    PRINT           shift and go to state 5
    MINUS           shift and go to state 7
    LEVEL2          shift and go to state 12
    LEVEL1          shift and go to state 13
    PARANCLOSE      reduce using rule 112 (expression -> .)
    PLUS            reduce using rule 112 (expression -> .)
    HASH            shift and go to state 14
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    PARANOPEN       shift and go to state 6
    WHILE           shift and go to state 17
    FOR             shift and go to state 18

  ! MINUS           [ reduce using rule 112 (expression -> .) ]

    factor                         shift and go to state 4
    expression                     shift and go to state 31
    term                           shift and go to state 3
    whileloop                      shift and go to state 8
    forloop                        shift and go to state 9
    forloop2                       shift and go to state 10
    whileloop2                     shift and go to state 11

state 47

    (80) whileloop -> WHILE ID . COLON

    COLON           shift and go to state 99


state 48

    (79) whileloop -> WHILE factor . COLON

    COLON           shift and go to state 100


state 49

    (78) whileloop -> WHILE STR_CONST . COLON

    COLON           shift and go to state 101


state 50

    (77) whileloop -> WHILE BOOL . COLON

    COLON           shift and go to state 102


state 51

    (86) forloop -> FOR ID . IN RANGE PARANOPEN term PARANCLOSE COLON
    (87) forloop -> FOR ID . IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (88) forloop -> FOR ID . IN STR_CONST COLON
    (89) forloop -> FOR ID . IN ID COLON
    (90) forloop -> FOR ID . IN PARANOPEN STR_CONST PARANCLOSE COLON

    IN              shift and go to state 103


state 52

    (9) expression -> expression PLUS term .
    (27) term -> term . MULTIPLY factor
    (32) term -> term . MULTIPLY ID
    (34) term -> term . DIVIDE factor

    PLUS            reduce using rule 9 (expression -> expression PLUS term .)
    MINUS           reduce using rule 9 (expression -> expression PLUS term .)
    $end            reduce using rule 9 (expression -> expression PLUS term .)
    PARANCLOSE      reduce using rule 9 (expression -> expression PLUS term .)
    MULTIPLY        shift and go to state 26
    DIVIDE          shift and go to state 27


state 53

    (13) expression -> expression PLUS ID .
    (28) term -> ID . MULTIPLY ID
    (29) term -> ID . MULTIPLY factor
    (31) term -> ID . MULTIPLY term

    PLUS            reduce using rule 13 (expression -> expression PLUS ID .)
    MINUS           reduce using rule 13 (expression -> expression PLUS ID .)
    $end            reduce using rule 13 (expression -> expression PLUS ID .)
    PARANCLOSE      reduce using rule 13 (expression -> expression PLUS ID .)
    MULTIPLY        shift and go to state 24


state 54

    (18) expression -> expression MINUS term .
    (27) term -> term . MULTIPLY factor
    (32) term -> term . MULTIPLY ID
    (34) term -> term . DIVIDE factor

    PLUS            reduce using rule 18 (expression -> expression MINUS term .)
    MINUS           reduce using rule 18 (expression -> expression MINUS term .)
    $end            reduce using rule 18 (expression -> expression MINUS term .)
    PARANCLOSE      reduce using rule 18 (expression -> expression MINUS term .)
    MULTIPLY        shift and go to state 26
    DIVIDE          shift and go to state 27


state 55

    (6) expression -> ID EQUAL ID .
    (1) expression -> ID . EQUAL expression
    (2) expression -> ID . EQUAL EMP_LIST
    (3) expression -> ID . EQUAL EMP_TUPLE
    (4) expression -> ID . EQUAL EMP_SET
    (5) expression -> ID . EQUAL STR_CONST
    (6) expression -> ID . EQUAL ID
    (7) expression -> ID . PLUS EQUAL term
    (10) expression -> ID . PLUS factor
    (12) expression -> ID . PLUS ID
    (14) expression -> ID . PLUS expression
    (19) expression -> ID . MINUS EQUAL term
    (23) expression -> ID . MINUS ID
    (25) expression -> ID . MINUS term
    (28) term -> ID . MULTIPLY ID
    (29) term -> ID . MULTIPLY factor
    (31) term -> ID . MULTIPLY term

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    $end            reduce using rule 6 (expression -> ID EQUAL ID .)
    PARANCLOSE      reduce using rule 6 (expression -> ID EQUAL ID .)
    EQUAL           shift and go to state 21
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    MULTIPLY        shift and go to state 24

  ! PLUS            [ reduce using rule 6 (expression -> ID EQUAL ID .) ]
  ! MINUS           [ reduce using rule 6 (expression -> ID EQUAL ID .) ]


state 56

    (1) expression -> ID EQUAL expression .
    (9) expression -> expression . PLUS term
    (13) expression -> expression . PLUS ID
    (18) expression -> expression . MINUS term

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    $end            reduce using rule 1 (expression -> ID EQUAL expression .)
    PARANCLOSE      reduce using rule 1 (expression -> ID EQUAL expression .)
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20

  ! PLUS            [ reduce using rule 1 (expression -> ID EQUAL expression .) ]
  ! MINUS           [ reduce using rule 1 (expression -> ID EQUAL expression .) ]


state 57

    (2) expression -> ID EQUAL EMP_LIST .

    PLUS            reduce using rule 2 (expression -> ID EQUAL EMP_LIST .)
    MINUS           reduce using rule 2 (expression -> ID EQUAL EMP_LIST .)
    $end            reduce using rule 2 (expression -> ID EQUAL EMP_LIST .)
    PARANCLOSE      reduce using rule 2 (expression -> ID EQUAL EMP_LIST .)


state 58

    (3) expression -> ID EQUAL EMP_TUPLE .

    PLUS            reduce using rule 3 (expression -> ID EQUAL EMP_TUPLE .)
    MINUS           reduce using rule 3 (expression -> ID EQUAL EMP_TUPLE .)
    $end            reduce using rule 3 (expression -> ID EQUAL EMP_TUPLE .)
    PARANCLOSE      reduce using rule 3 (expression -> ID EQUAL EMP_TUPLE .)


state 59

    (4) expression -> ID EQUAL EMP_SET .

    PLUS            reduce using rule 4 (expression -> ID EQUAL EMP_SET .)
    MINUS           reduce using rule 4 (expression -> ID EQUAL EMP_SET .)
    $end            reduce using rule 4 (expression -> ID EQUAL EMP_SET .)
    PARANCLOSE      reduce using rule 4 (expression -> ID EQUAL EMP_SET .)


state 60

    (5) expression -> ID EQUAL STR_CONST .

    PLUS            reduce using rule 5 (expression -> ID EQUAL STR_CONST .)
    MINUS           reduce using rule 5 (expression -> ID EQUAL STR_CONST .)
    $end            reduce using rule 5 (expression -> ID EQUAL STR_CONST .)
    PARANCLOSE      reduce using rule 5 (expression -> ID EQUAL STR_CONST .)


state 61

    (12) expression -> ID PLUS ID .
    (1) expression -> ID . EQUAL expression
    (2) expression -> ID . EQUAL EMP_LIST
    (3) expression -> ID . EQUAL EMP_TUPLE
    (4) expression -> ID . EQUAL EMP_SET
    (5) expression -> ID . EQUAL STR_CONST
    (6) expression -> ID . EQUAL ID
    (7) expression -> ID . PLUS EQUAL term
    (10) expression -> ID . PLUS factor
    (12) expression -> ID . PLUS ID
    (14) expression -> ID . PLUS expression
    (19) expression -> ID . MINUS EQUAL term
    (23) expression -> ID . MINUS ID
    (25) expression -> ID . MINUS term
    (28) term -> ID . MULTIPLY ID
    (29) term -> ID . MULTIPLY factor
    (31) term -> ID . MULTIPLY term

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    $end            reduce using rule 12 (expression -> ID PLUS ID .)
    PARANCLOSE      reduce using rule 12 (expression -> ID PLUS ID .)
    EQUAL           shift and go to state 21
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    MULTIPLY        shift and go to state 24

  ! PLUS            [ reduce using rule 12 (expression -> ID PLUS ID .) ]
  ! MINUS           [ reduce using rule 12 (expression -> ID PLUS ID .) ]


state 62

    (7) expression -> ID PLUS EQUAL . term
    (27) term -> . term MULTIPLY factor
    (28) term -> . ID MULTIPLY ID
    (29) term -> . ID MULTIPLY factor
    (30) term -> . factor MULTIPLY ID
    (31) term -> . ID MULTIPLY term
    (32) term -> . term MULTIPLY ID
    (33) term -> . factor MULTIPLY factor
    (34) term -> . term DIVIDE factor
    (35) term -> . factor
    (36) factor -> . INT
    (37) factor -> . FLOAT
    (38) factor -> . PARANOPEN expression PARANCLOSE

    ID              shift and go to state 34
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    PARANOPEN       shift and go to state 6

    term                           shift and go to state 104
    factor                         shift and go to state 33

state 63

    (10) expression -> ID PLUS factor .
    (8) expression -> factor . PLUS factor
    (11) expression -> factor . PLUS ID
    (30) term -> factor . MULTIPLY ID
    (33) term -> factor . MULTIPLY factor
    (35) term -> factor .

  ! shift/reduce conflict for PLUS resolved as shift
  ! reduce/reduce conflict for MINUS resolved using rule 10 (expression -> ID PLUS factor .)
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 10 (expression -> ID PLUS factor .)
  ! reduce/reduce conflict for PARANCLOSE resolved using rule 10 (expression -> ID PLUS factor .)
    MINUS           reduce using rule 10 (expression -> ID PLUS factor .)
    $end            reduce using rule 10 (expression -> ID PLUS factor .)
    PARANCLOSE      reduce using rule 10 (expression -> ID PLUS factor .)
    PLUS            shift and go to state 28
    MULTIPLY        shift and go to state 29
    DIVIDE          reduce using rule 35 (term -> factor .)

  ! PLUS            [ reduce using rule 10 (expression -> ID PLUS factor .) ]
  ! MINUS           [ reduce using rule 35 (term -> factor .) ]
  ! MULTIPLY        [ reduce using rule 35 (term -> factor .) ]
  ! PLUS            [ reduce using rule 35 (term -> factor .) ]
  ! $end            [ reduce using rule 35 (term -> factor .) ]
  ! PARANCLOSE      [ reduce using rule 35 (term -> factor .) ]


state 64

    (14) expression -> ID PLUS expression .
    (9) expression -> expression . PLUS term
    (13) expression -> expression . PLUS ID
    (18) expression -> expression . MINUS term

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    $end            reduce using rule 14 (expression -> ID PLUS expression .)
    PARANCLOSE      reduce using rule 14 (expression -> ID PLUS expression .)
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20

  ! PLUS            [ reduce using rule 14 (expression -> ID PLUS expression .) ]
  ! MINUS           [ reduce using rule 14 (expression -> ID PLUS expression .) ]


state 65

    (23) expression -> ID MINUS ID .
    (28) term -> ID . MULTIPLY ID
    (29) term -> ID . MULTIPLY factor
    (31) term -> ID . MULTIPLY term

    PLUS            reduce using rule 23 (expression -> ID MINUS ID .)
    MINUS           reduce using rule 23 (expression -> ID MINUS ID .)
    $end            reduce using rule 23 (expression -> ID MINUS ID .)
    PARANCLOSE      reduce using rule 23 (expression -> ID MINUS ID .)
    MULTIPLY        shift and go to state 24


state 66

    (19) expression -> ID MINUS EQUAL . term
    (27) term -> . term MULTIPLY factor
    (28) term -> . ID MULTIPLY ID
    (29) term -> . ID MULTIPLY factor
    (30) term -> . factor MULTIPLY ID
    (31) term -> . ID MULTIPLY term
    (32) term -> . term MULTIPLY ID
    (33) term -> . factor MULTIPLY factor
    (34) term -> . term DIVIDE factor
    (35) term -> . factor
    (36) factor -> . INT
    (37) factor -> . FLOAT
    (38) factor -> . PARANOPEN expression PARANCLOSE

    ID              shift and go to state 34
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    PARANOPEN       shift and go to state 6

    term                           shift and go to state 105
    factor                         shift and go to state 33

state 67

    (25) expression -> ID MINUS term .
    (27) term -> term . MULTIPLY factor
    (32) term -> term . MULTIPLY ID
    (34) term -> term . DIVIDE factor

    PLUS            reduce using rule 25 (expression -> ID MINUS term .)
    MINUS           reduce using rule 25 (expression -> ID MINUS term .)
    $end            reduce using rule 25 (expression -> ID MINUS term .)
    PARANCLOSE      reduce using rule 25 (expression -> ID MINUS term .)
    MULTIPLY        shift and go to state 26
    DIVIDE          shift and go to state 27


state 68

    (28) term -> ID MULTIPLY ID .
    (28) term -> ID . MULTIPLY ID
    (29) term -> ID . MULTIPLY factor
    (31) term -> ID . MULTIPLY term

  ! shift/reduce conflict for MULTIPLY resolved as shift
    MINUS           reduce using rule 28 (term -> ID MULTIPLY ID .)
    DIVIDE          reduce using rule 28 (term -> ID MULTIPLY ID .)
    PLUS            reduce using rule 28 (term -> ID MULTIPLY ID .)
    $end            reduce using rule 28 (term -> ID MULTIPLY ID .)
    PARANCLOSE      reduce using rule 28 (term -> ID MULTIPLY ID .)
    MULTIPLY        shift and go to state 24

  ! MULTIPLY        [ reduce using rule 28 (term -> ID MULTIPLY ID .) ]


state 69

    (29) term -> ID MULTIPLY factor .
    (30) term -> factor . MULTIPLY ID
    (33) term -> factor . MULTIPLY factor
    (35) term -> factor .

  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! reduce/reduce conflict for DIVIDE resolved using rule 29 (term -> ID MULTIPLY factor .)
  ! reduce/reduce conflict for MINUS resolved using rule 29 (term -> ID MULTIPLY factor .)
  ! reduce/reduce conflict for PLUS resolved using rule 29 (term -> ID MULTIPLY factor .)
  ! reduce/reduce conflict for $end resolved using rule 29 (term -> ID MULTIPLY factor .)
  ! reduce/reduce conflict for PARANCLOSE resolved using rule 29 (term -> ID MULTIPLY factor .)
    MINUS           reduce using rule 29 (term -> ID MULTIPLY factor .)
    DIVIDE          reduce using rule 29 (term -> ID MULTIPLY factor .)
    PLUS            reduce using rule 29 (term -> ID MULTIPLY factor .)
    $end            reduce using rule 29 (term -> ID MULTIPLY factor .)
    PARANCLOSE      reduce using rule 29 (term -> ID MULTIPLY factor .)
    MULTIPLY        shift and go to state 29

  ! MULTIPLY        [ reduce using rule 29 (term -> ID MULTIPLY factor .) ]
  ! MULTIPLY        [ reduce using rule 35 (term -> factor .) ]
  ! DIVIDE          [ reduce using rule 35 (term -> factor .) ]
  ! MINUS           [ reduce using rule 35 (term -> factor .) ]
  ! PLUS            [ reduce using rule 35 (term -> factor .) ]
  ! $end            [ reduce using rule 35 (term -> factor .) ]
  ! PARANCLOSE      [ reduce using rule 35 (term -> factor .) ]


state 70

    (31) term -> ID MULTIPLY term .
    (27) term -> term . MULTIPLY factor
    (32) term -> term . MULTIPLY ID
    (34) term -> term . DIVIDE factor

  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    MINUS           reduce using rule 31 (term -> ID MULTIPLY term .)
    PLUS            reduce using rule 31 (term -> ID MULTIPLY term .)
    $end            reduce using rule 31 (term -> ID MULTIPLY term .)
    PARANCLOSE      reduce using rule 31 (term -> ID MULTIPLY term .)
    MULTIPLY        shift and go to state 26
    DIVIDE          shift and go to state 27

  ! MULTIPLY        [ reduce using rule 31 (term -> ID MULTIPLY term .) ]
  ! DIVIDE          [ reduce using rule 31 (term -> ID MULTIPLY term .) ]


state 71

    (22) expression -> term MINUS term .
    (21) expression -> term . MINUS expression
    (22) expression -> term . MINUS term
    (24) expression -> term . MINUS ID
    (26) expression -> term .
    (27) term -> term . MULTIPLY factor
    (32) term -> term . MULTIPLY ID
    (34) term -> term . DIVIDE factor

  ! shift/reduce conflict for MINUS resolved as shift
  ! reduce/reduce conflict for PLUS resolved using rule 22 (expression -> term MINUS term .)
  ! shift/reduce conflict for MINUS resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 22 (expression -> term MINUS term .)
  ! reduce/reduce conflict for PARANCLOSE resolved using rule 22 (expression -> term MINUS term .)
    PLUS            reduce using rule 22 (expression -> term MINUS term .)
    $end            reduce using rule 22 (expression -> term MINUS term .)
    PARANCLOSE      reduce using rule 22 (expression -> term MINUS term .)
    MINUS           shift and go to state 25
    MULTIPLY        shift and go to state 26
    DIVIDE          shift and go to state 27

  ! MINUS           [ reduce using rule 22 (expression -> term MINUS term .) ]
  ! PLUS            [ reduce using rule 26 (expression -> term .) ]
  ! MINUS           [ reduce using rule 26 (expression -> term .) ]
  ! $end            [ reduce using rule 26 (expression -> term .) ]
  ! PARANCLOSE      [ reduce using rule 26 (expression -> term .) ]


state 72

    (21) expression -> term MINUS expression .
    (9) expression -> expression . PLUS term
    (13) expression -> expression . PLUS ID
    (18) expression -> expression . MINUS term

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    $end            reduce using rule 21 (expression -> term MINUS expression .)
    PARANCLOSE      reduce using rule 21 (expression -> term MINUS expression .)
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20

  ! PLUS            [ reduce using rule 21 (expression -> term MINUS expression .) ]
  ! MINUS           [ reduce using rule 21 (expression -> term MINUS expression .) ]


state 73

    (24) expression -> term MINUS ID .
    (1) expression -> ID . EQUAL expression
    (2) expression -> ID . EQUAL EMP_LIST
    (3) expression -> ID . EQUAL EMP_TUPLE
    (4) expression -> ID . EQUAL EMP_SET
    (5) expression -> ID . EQUAL STR_CONST
    (6) expression -> ID . EQUAL ID
    (7) expression -> ID . PLUS EQUAL term
    (10) expression -> ID . PLUS factor
    (12) expression -> ID . PLUS ID
    (14) expression -> ID . PLUS expression
    (19) expression -> ID . MINUS EQUAL term
    (23) expression -> ID . MINUS ID
    (25) expression -> ID . MINUS term
    (28) term -> ID . MULTIPLY ID
    (29) term -> ID . MULTIPLY factor
    (31) term -> ID . MULTIPLY term

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    $end            reduce using rule 24 (expression -> term MINUS ID .)
    PARANCLOSE      reduce using rule 24 (expression -> term MINUS ID .)
    EQUAL           shift and go to state 21
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    MULTIPLY        shift and go to state 24

  ! PLUS            [ reduce using rule 24 (expression -> term MINUS ID .) ]
  ! MINUS           [ reduce using rule 24 (expression -> term MINUS ID .) ]


state 74

    (27) term -> term MULTIPLY factor .

    MINUS           reduce using rule 27 (term -> term MULTIPLY factor .)
    MULTIPLY        reduce using rule 27 (term -> term MULTIPLY factor .)
    DIVIDE          reduce using rule 27 (term -> term MULTIPLY factor .)
    PLUS            reduce using rule 27 (term -> term MULTIPLY factor .)
    $end            reduce using rule 27 (term -> term MULTIPLY factor .)
    PARANCLOSE      reduce using rule 27 (term -> term MULTIPLY factor .)


state 75

    (32) term -> term MULTIPLY ID .

    MINUS           reduce using rule 32 (term -> term MULTIPLY ID .)
    MULTIPLY        reduce using rule 32 (term -> term MULTIPLY ID .)
    DIVIDE          reduce using rule 32 (term -> term MULTIPLY ID .)
    PLUS            reduce using rule 32 (term -> term MULTIPLY ID .)
    $end            reduce using rule 32 (term -> term MULTIPLY ID .)
    PARANCLOSE      reduce using rule 32 (term -> term MULTIPLY ID .)


state 76

    (34) term -> term DIVIDE factor .

    MINUS           reduce using rule 34 (term -> term DIVIDE factor .)
    MULTIPLY        reduce using rule 34 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 34 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 34 (term -> term DIVIDE factor .)
    $end            reduce using rule 34 (term -> term DIVIDE factor .)
    PARANCLOSE      reduce using rule 34 (term -> term DIVIDE factor .)


state 77

    (8) expression -> factor PLUS factor .

    PLUS            reduce using rule 8 (expression -> factor PLUS factor .)
    MINUS           reduce using rule 8 (expression -> factor PLUS factor .)
    $end            reduce using rule 8 (expression -> factor PLUS factor .)
    PARANCLOSE      reduce using rule 8 (expression -> factor PLUS factor .)


state 78

    (11) expression -> factor PLUS ID .

    PLUS            reduce using rule 11 (expression -> factor PLUS ID .)
    MINUS           reduce using rule 11 (expression -> factor PLUS ID .)
    $end            reduce using rule 11 (expression -> factor PLUS ID .)
    PARANCLOSE      reduce using rule 11 (expression -> factor PLUS ID .)


state 79

    (33) term -> factor MULTIPLY factor .

    MINUS           reduce using rule 33 (term -> factor MULTIPLY factor .)
    MULTIPLY        reduce using rule 33 (term -> factor MULTIPLY factor .)
    DIVIDE          reduce using rule 33 (term -> factor MULTIPLY factor .)
    PLUS            reduce using rule 33 (term -> factor MULTIPLY factor .)
    $end            reduce using rule 33 (term -> factor MULTIPLY factor .)
    PARANCLOSE      reduce using rule 33 (term -> factor MULTIPLY factor .)


state 80

    (30) term -> factor MULTIPLY ID .

    MINUS           reduce using rule 30 (term -> factor MULTIPLY ID .)
    MULTIPLY        reduce using rule 30 (term -> factor MULTIPLY ID .)
    DIVIDE          reduce using rule 30 (term -> factor MULTIPLY ID .)
    PLUS            reduce using rule 30 (term -> factor MULTIPLY ID .)
    $end            reduce using rule 30 (term -> factor MULTIPLY ID .)
    PARANCLOSE      reduce using rule 30 (term -> factor MULTIPLY ID .)


state 81

    (15) expression -> PRINT PARANOPEN STR_CONST . PARANCLOSE

    PARANCLOSE      shift and go to state 106


state 82

    (16) expression -> PRINT PARANOPEN ID . PARANCLOSE
    (28) term -> ID . MULTIPLY ID
    (29) term -> ID . MULTIPLY factor
    (31) term -> ID . MULTIPLY term

    PARANCLOSE      shift and go to state 107
    MULTIPLY        shift and go to state 24


state 83

    (17) expression -> PRINT PARANOPEN term . PARANCLOSE
    (27) term -> term . MULTIPLY factor
    (32) term -> term . MULTIPLY ID
    (34) term -> term . DIVIDE factor

    PARANCLOSE      shift and go to state 108
    MULTIPLY        shift and go to state 26
    DIVIDE          shift and go to state 27


state 84

    (38) factor -> PARANOPEN expression PARANCLOSE .

    PLUS            reduce using rule 38 (factor -> PARANOPEN expression PARANCLOSE .)
    MULTIPLY        reduce using rule 38 (factor -> PARANOPEN expression PARANCLOSE .)
    MINUS           reduce using rule 38 (factor -> PARANOPEN expression PARANCLOSE .)
    DIVIDE          reduce using rule 38 (factor -> PARANOPEN expression PARANCLOSE .)
    $end            reduce using rule 38 (factor -> PARANOPEN expression PARANCLOSE .)
    PARANCLOSE      reduce using rule 38 (factor -> PARANOPEN expression PARANCLOSE .)
    COLON           reduce using rule 38 (factor -> PARANOPEN expression PARANCLOSE .)


state 85

    (91) expression -> LEVEL2 ID EQUAL . expression
    (92) expression -> LEVEL2 ID EQUAL . ID
    (93) expression -> LEVEL2 ID EQUAL . STR_CONST
    (1) expression -> . ID EQUAL expression
    (2) expression -> . ID EQUAL EMP_LIST
    (3) expression -> . ID EQUAL EMP_TUPLE
    (4) expression -> . ID EQUAL EMP_SET
    (5) expression -> . ID EQUAL STR_CONST
    (6) expression -> . ID EQUAL ID
    (7) expression -> . ID PLUS EQUAL term
    (8) expression -> . factor PLUS factor
    (9) expression -> . expression PLUS term
    (10) expression -> . ID PLUS factor
    (11) expression -> . factor PLUS ID
    (12) expression -> . ID PLUS ID
    (13) expression -> . expression PLUS ID
    (14) expression -> . ID PLUS expression
    (15) expression -> . PRINT PARANOPEN STR_CONST PARANCLOSE
    (16) expression -> . PRINT PARANOPEN ID PARANCLOSE
    (17) expression -> . PRINT PARANOPEN term PARANCLOSE
    (18) expression -> . expression MINUS term
    (19) expression -> . ID MINUS EQUAL term
    (20) expression -> . MINUS term
    (21) expression -> . term MINUS expression
    (22) expression -> . term MINUS term
    (23) expression -> . ID MINUS ID
    (24) expression -> . term MINUS ID
    (25) expression -> . ID MINUS term
    (26) expression -> . term
    (39) expression -> . whileloop
    (40) expression -> . forloop
    (41) expression -> . forloop2
    (42) expression -> . whileloop2
    (91) expression -> . LEVEL2 ID EQUAL expression
    (92) expression -> . LEVEL2 ID EQUAL ID
    (93) expression -> . LEVEL2 ID EQUAL STR_CONST
    (94) expression -> . LEVEL1 ID EQUAL expression
    (95) expression -> . LEVEL1 ID EQUAL ID
    (96) expression -> . LEVEL1 ID EQUAL STR_CONST
    (97) expression -> . LEVEL1 ID EQUAL factor
    (98) expression -> . LEVEL1 ID PLUS EQUAL term
    (99) expression -> . LEVEL1 expression PLUS term
    (100) expression -> . LEVEL1 ID PLUS factor
    (101) expression -> . LEVEL1 factor PLUS ID
    (102) expression -> . LEVEL1 ID PLUS ID
    (103) expression -> . LEVEL1 expression PLUS ID
    (104) expression -> . LEVEL1 ID PLUS expression
    (105) expression -> . LEVEL1 factor PLUS factor
    (106) expression -> . LEVEL2 PRINT PARANOPEN STR_CONST PARANCLOSE
    (107) expression -> . LEVEL2 PRINT PARANOPEN ID PARANCLOSE
    (108) expression -> . LEVEL2 PRINT PARANOPEN term PARANCLOSE
    (109) expression -> . LEVEL1 PRINT PARANOPEN STR_CONST PARANCLOSE
    (110) expression -> . LEVEL1 PRINT PARANOPEN ID PARANCLOSE
    (111) expression -> . LEVEL1 PRINT PARANOPEN term PARANCLOSE
    (112) expression -> .
    (113) expression -> . HASH expression
    (114) expression -> . HASH ID
    (115) expression -> . HASH STR_CONST
    (36) factor -> . INT
    (37) factor -> . FLOAT
    (38) factor -> . PARANOPEN expression PARANCLOSE
    (27) term -> . term MULTIPLY factor
    (28) term -> . ID MULTIPLY ID
    (29) term -> . ID MULTIPLY factor
    (30) term -> . factor MULTIPLY ID
    (31) term -> . ID MULTIPLY term
    (32) term -> . term MULTIPLY ID
    (33) term -> . factor MULTIPLY factor
    (34) term -> . term DIVIDE factor
    (35) term -> . factor
    (62) whileloop -> . WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (63) whileloop -> . WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (64) whileloop -> . WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (65) whileloop -> . WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (66) whileloop -> . WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (67) whileloop -> . WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (68) whileloop -> . WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (69) whileloop -> . WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (70) whileloop -> . WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (71) whileloop -> . WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (72) whileloop -> . WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (73) whileloop -> . WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (74) whileloop -> . WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (75) whileloop -> . WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (76) whileloop -> . WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (77) whileloop -> . WHILE BOOL COLON
    (78) whileloop -> . WHILE STR_CONST COLON
    (79) whileloop -> . WHILE factor COLON
    (80) whileloop -> . WHILE ID COLON
    (86) forloop -> . FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (87) forloop -> . FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (88) forloop -> . FOR ID IN STR_CONST COLON
    (89) forloop -> . FOR ID IN ID COLON
    (90) forloop -> . FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (81) forloop2 -> . LEVEL1 FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (82) forloop2 -> . LEVEL1 FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (83) forloop2 -> . LEVEL1 FOR ID IN STR_CONST COLON
    (84) forloop2 -> . LEVEL1 FOR ID IN ID COLON
    (85) forloop2 -> . LEVEL1 FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (43) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (44) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (45) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (46) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (47) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (48) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (49) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (50) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (51) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (52) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (53) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (54) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (55) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (56) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (57) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (58) whileloop2 -> . LEVEL1 WHILE BOOL COLON
    (59) whileloop2 -> . LEVEL1 WHILE STR_CONST COLON
    (60) whileloop2 -> . LEVEL1 WHILE factor COLON
    (61) whileloop2 -> . LEVEL1 WHILE ID COLON

  ! shift/reduce conflict for MINUS resolved as shift
    ID              shift and go to state 109
    STR_CONST       shift and go to state 111
    PRINT           shift and go to state 5
    MINUS           shift and go to state 7
    LEVEL2          shift and go to state 12
    LEVEL1          shift and go to state 13
    PLUS            reduce using rule 112 (expression -> .)
    $end            reduce using rule 112 (expression -> .)
    PARANCLOSE      reduce using rule 112 (expression -> .)
    HASH            shift and go to state 14
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    PARANOPEN       shift and go to state 6
    WHILE           shift and go to state 17
    FOR             shift and go to state 18

  ! MINUS           [ reduce using rule 112 (expression -> .) ]

    expression                     shift and go to state 110
    term                           shift and go to state 3
    factor                         shift and go to state 4
    whileloop                      shift and go to state 8
    forloop                        shift and go to state 9
    forloop2                       shift and go to state 10
    whileloop2                     shift and go to state 11

state 86

    (106) expression -> LEVEL2 PRINT PARANOPEN . STR_CONST PARANCLOSE
    (107) expression -> LEVEL2 PRINT PARANOPEN . ID PARANCLOSE
    (108) expression -> LEVEL2 PRINT PARANOPEN . term PARANCLOSE
    (27) term -> . term MULTIPLY factor
    (28) term -> . ID MULTIPLY ID
    (29) term -> . ID MULTIPLY factor
    (30) term -> . factor MULTIPLY ID
    (31) term -> . ID MULTIPLY term
    (32) term -> . term MULTIPLY ID
    (33) term -> . factor MULTIPLY factor
    (34) term -> . term DIVIDE factor
    (35) term -> . factor
    (36) factor -> . INT
    (37) factor -> . FLOAT
    (38) factor -> . PARANOPEN expression PARANCLOSE

    STR_CONST       shift and go to state 112
    ID              shift and go to state 113
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    PARANOPEN       shift and go to state 6

    term                           shift and go to state 114
    factor                         shift and go to state 33

state 87

    (94) expression -> LEVEL1 ID EQUAL . expression
    (95) expression -> LEVEL1 ID EQUAL . ID
    (96) expression -> LEVEL1 ID EQUAL . STR_CONST
    (97) expression -> LEVEL1 ID EQUAL . factor
    (1) expression -> ID EQUAL . expression
    (2) expression -> ID EQUAL . EMP_LIST
    (3) expression -> ID EQUAL . EMP_TUPLE
    (4) expression -> ID EQUAL . EMP_SET
    (5) expression -> ID EQUAL . STR_CONST
    (6) expression -> ID EQUAL . ID
    (1) expression -> . ID EQUAL expression
    (2) expression -> . ID EQUAL EMP_LIST
    (3) expression -> . ID EQUAL EMP_TUPLE
    (4) expression -> . ID EQUAL EMP_SET
    (5) expression -> . ID EQUAL STR_CONST
    (6) expression -> . ID EQUAL ID
    (7) expression -> . ID PLUS EQUAL term
    (8) expression -> . factor PLUS factor
    (9) expression -> . expression PLUS term
    (10) expression -> . ID PLUS factor
    (11) expression -> . factor PLUS ID
    (12) expression -> . ID PLUS ID
    (13) expression -> . expression PLUS ID
    (14) expression -> . ID PLUS expression
    (15) expression -> . PRINT PARANOPEN STR_CONST PARANCLOSE
    (16) expression -> . PRINT PARANOPEN ID PARANCLOSE
    (17) expression -> . PRINT PARANOPEN term PARANCLOSE
    (18) expression -> . expression MINUS term
    (19) expression -> . ID MINUS EQUAL term
    (20) expression -> . MINUS term
    (21) expression -> . term MINUS expression
    (22) expression -> . term MINUS term
    (23) expression -> . ID MINUS ID
    (24) expression -> . term MINUS ID
    (25) expression -> . ID MINUS term
    (26) expression -> . term
    (39) expression -> . whileloop
    (40) expression -> . forloop
    (41) expression -> . forloop2
    (42) expression -> . whileloop2
    (91) expression -> . LEVEL2 ID EQUAL expression
    (92) expression -> . LEVEL2 ID EQUAL ID
    (93) expression -> . LEVEL2 ID EQUAL STR_CONST
    (94) expression -> . LEVEL1 ID EQUAL expression
    (95) expression -> . LEVEL1 ID EQUAL ID
    (96) expression -> . LEVEL1 ID EQUAL STR_CONST
    (97) expression -> . LEVEL1 ID EQUAL factor
    (98) expression -> . LEVEL1 ID PLUS EQUAL term
    (99) expression -> . LEVEL1 expression PLUS term
    (100) expression -> . LEVEL1 ID PLUS factor
    (101) expression -> . LEVEL1 factor PLUS ID
    (102) expression -> . LEVEL1 ID PLUS ID
    (103) expression -> . LEVEL1 expression PLUS ID
    (104) expression -> . LEVEL1 ID PLUS expression
    (105) expression -> . LEVEL1 factor PLUS factor
    (106) expression -> . LEVEL2 PRINT PARANOPEN STR_CONST PARANCLOSE
    (107) expression -> . LEVEL2 PRINT PARANOPEN ID PARANCLOSE
    (108) expression -> . LEVEL2 PRINT PARANOPEN term PARANCLOSE
    (109) expression -> . LEVEL1 PRINT PARANOPEN STR_CONST PARANCLOSE
    (110) expression -> . LEVEL1 PRINT PARANOPEN ID PARANCLOSE
    (111) expression -> . LEVEL1 PRINT PARANOPEN term PARANCLOSE
    (112) expression -> .
    (113) expression -> . HASH expression
    (114) expression -> . HASH ID
    (115) expression -> . HASH STR_CONST
    (36) factor -> . INT
    (37) factor -> . FLOAT
    (38) factor -> . PARANOPEN expression PARANCLOSE
    (27) term -> . term MULTIPLY factor
    (28) term -> . ID MULTIPLY ID
    (29) term -> . ID MULTIPLY factor
    (30) term -> . factor MULTIPLY ID
    (31) term -> . ID MULTIPLY term
    (32) term -> . term MULTIPLY ID
    (33) term -> . factor MULTIPLY factor
    (34) term -> . term DIVIDE factor
    (35) term -> . factor
    (62) whileloop -> . WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (63) whileloop -> . WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (64) whileloop -> . WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (65) whileloop -> . WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (66) whileloop -> . WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (67) whileloop -> . WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (68) whileloop -> . WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (69) whileloop -> . WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (70) whileloop -> . WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (71) whileloop -> . WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (72) whileloop -> . WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (73) whileloop -> . WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (74) whileloop -> . WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (75) whileloop -> . WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (76) whileloop -> . WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (77) whileloop -> . WHILE BOOL COLON
    (78) whileloop -> . WHILE STR_CONST COLON
    (79) whileloop -> . WHILE factor COLON
    (80) whileloop -> . WHILE ID COLON
    (86) forloop -> . FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (87) forloop -> . FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (88) forloop -> . FOR ID IN STR_CONST COLON
    (89) forloop -> . FOR ID IN ID COLON
    (90) forloop -> . FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (81) forloop2 -> . LEVEL1 FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (82) forloop2 -> . LEVEL1 FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (83) forloop2 -> . LEVEL1 FOR ID IN STR_CONST COLON
    (84) forloop2 -> . LEVEL1 FOR ID IN ID COLON
    (85) forloop2 -> . LEVEL1 FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (43) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (44) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (45) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (46) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (47) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (48) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (49) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (50) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (51) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (52) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (53) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (54) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (55) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (56) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (57) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (58) whileloop2 -> . LEVEL1 WHILE BOOL COLON
    (59) whileloop2 -> . LEVEL1 WHILE STR_CONST COLON
    (60) whileloop2 -> . LEVEL1 WHILE factor COLON
    (61) whileloop2 -> . LEVEL1 WHILE ID COLON

  ! shift/reduce conflict for MINUS resolved as shift
    ID              shift and go to state 115
    STR_CONST       shift and go to state 117
    EMP_LIST        shift and go to state 57
    EMP_TUPLE       shift and go to state 58
    EMP_SET         shift and go to state 59
    PRINT           shift and go to state 5
    MINUS           shift and go to state 7
    LEVEL2          shift and go to state 12
    LEVEL1          shift and go to state 13
    PLUS            reduce using rule 112 (expression -> .)
    $end            reduce using rule 112 (expression -> .)
    PARANCLOSE      reduce using rule 112 (expression -> .)
    HASH            shift and go to state 14
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    PARANOPEN       shift and go to state 6
    WHILE           shift and go to state 17
    FOR             shift and go to state 18

  ! MINUS           [ reduce using rule 112 (expression -> .) ]

    expression                     shift and go to state 116
    factor                         shift and go to state 118
    term                           shift and go to state 3
    whileloop                      shift and go to state 8
    forloop                        shift and go to state 9
    forloop2                       shift and go to state 10
    whileloop2                     shift and go to state 11

state 88

    (98) expression -> LEVEL1 ID PLUS . EQUAL term
    (100) expression -> LEVEL1 ID PLUS . factor
    (102) expression -> LEVEL1 ID PLUS . ID
    (104) expression -> LEVEL1 ID PLUS . expression
    (7) expression -> ID PLUS . EQUAL term
    (10) expression -> ID PLUS . factor
    (12) expression -> ID PLUS . ID
    (14) expression -> ID PLUS . expression
    (36) factor -> . INT
    (37) factor -> . FLOAT
    (38) factor -> . PARANOPEN expression PARANCLOSE
    (1) expression -> . ID EQUAL expression
    (2) expression -> . ID EQUAL EMP_LIST
    (3) expression -> . ID EQUAL EMP_TUPLE
    (4) expression -> . ID EQUAL EMP_SET
    (5) expression -> . ID EQUAL STR_CONST
    (6) expression -> . ID EQUAL ID
    (7) expression -> . ID PLUS EQUAL term
    (8) expression -> . factor PLUS factor
    (9) expression -> . expression PLUS term
    (10) expression -> . ID PLUS factor
    (11) expression -> . factor PLUS ID
    (12) expression -> . ID PLUS ID
    (13) expression -> . expression PLUS ID
    (14) expression -> . ID PLUS expression
    (15) expression -> . PRINT PARANOPEN STR_CONST PARANCLOSE
    (16) expression -> . PRINT PARANOPEN ID PARANCLOSE
    (17) expression -> . PRINT PARANOPEN term PARANCLOSE
    (18) expression -> . expression MINUS term
    (19) expression -> . ID MINUS EQUAL term
    (20) expression -> . MINUS term
    (21) expression -> . term MINUS expression
    (22) expression -> . term MINUS term
    (23) expression -> . ID MINUS ID
    (24) expression -> . term MINUS ID
    (25) expression -> . ID MINUS term
    (26) expression -> . term
    (39) expression -> . whileloop
    (40) expression -> . forloop
    (41) expression -> . forloop2
    (42) expression -> . whileloop2
    (91) expression -> . LEVEL2 ID EQUAL expression
    (92) expression -> . LEVEL2 ID EQUAL ID
    (93) expression -> . LEVEL2 ID EQUAL STR_CONST
    (94) expression -> . LEVEL1 ID EQUAL expression
    (95) expression -> . LEVEL1 ID EQUAL ID
    (96) expression -> . LEVEL1 ID EQUAL STR_CONST
    (97) expression -> . LEVEL1 ID EQUAL factor
    (98) expression -> . LEVEL1 ID PLUS EQUAL term
    (99) expression -> . LEVEL1 expression PLUS term
    (100) expression -> . LEVEL1 ID PLUS factor
    (101) expression -> . LEVEL1 factor PLUS ID
    (102) expression -> . LEVEL1 ID PLUS ID
    (103) expression -> . LEVEL1 expression PLUS ID
    (104) expression -> . LEVEL1 ID PLUS expression
    (105) expression -> . LEVEL1 factor PLUS factor
    (106) expression -> . LEVEL2 PRINT PARANOPEN STR_CONST PARANCLOSE
    (107) expression -> . LEVEL2 PRINT PARANOPEN ID PARANCLOSE
    (108) expression -> . LEVEL2 PRINT PARANOPEN term PARANCLOSE
    (109) expression -> . LEVEL1 PRINT PARANOPEN STR_CONST PARANCLOSE
    (110) expression -> . LEVEL1 PRINT PARANOPEN ID PARANCLOSE
    (111) expression -> . LEVEL1 PRINT PARANOPEN term PARANCLOSE
    (112) expression -> .
    (113) expression -> . HASH expression
    (114) expression -> . HASH ID
    (115) expression -> . HASH STR_CONST
    (27) term -> . term MULTIPLY factor
    (28) term -> . ID MULTIPLY ID
    (29) term -> . ID MULTIPLY factor
    (30) term -> . factor MULTIPLY ID
    (31) term -> . ID MULTIPLY term
    (32) term -> . term MULTIPLY ID
    (33) term -> . factor MULTIPLY factor
    (34) term -> . term DIVIDE factor
    (35) term -> . factor
    (62) whileloop -> . WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (63) whileloop -> . WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (64) whileloop -> . WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (65) whileloop -> . WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (66) whileloop -> . WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (67) whileloop -> . WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (68) whileloop -> . WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (69) whileloop -> . WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (70) whileloop -> . WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (71) whileloop -> . WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (72) whileloop -> . WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (73) whileloop -> . WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (74) whileloop -> . WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (75) whileloop -> . WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (76) whileloop -> . WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (77) whileloop -> . WHILE BOOL COLON
    (78) whileloop -> . WHILE STR_CONST COLON
    (79) whileloop -> . WHILE factor COLON
    (80) whileloop -> . WHILE ID COLON
    (86) forloop -> . FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (87) forloop -> . FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (88) forloop -> . FOR ID IN STR_CONST COLON
    (89) forloop -> . FOR ID IN ID COLON
    (90) forloop -> . FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (81) forloop2 -> . LEVEL1 FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (82) forloop2 -> . LEVEL1 FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (83) forloop2 -> . LEVEL1 FOR ID IN STR_CONST COLON
    (84) forloop2 -> . LEVEL1 FOR ID IN ID COLON
    (85) forloop2 -> . LEVEL1 FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (43) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (44) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (45) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (46) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (47) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (48) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (49) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (50) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (51) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (52) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (53) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (54) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (55) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (56) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (57) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (58) whileloop2 -> . LEVEL1 WHILE BOOL COLON
    (59) whileloop2 -> . LEVEL1 WHILE STR_CONST COLON
    (60) whileloop2 -> . LEVEL1 WHILE factor COLON
    (61) whileloop2 -> . LEVEL1 WHILE ID COLON

  ! shift/reduce conflict for MINUS resolved as shift
    EQUAL           shift and go to state 120
    ID              shift and go to state 119
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    PARANOPEN       shift and go to state 6
    PRINT           shift and go to state 5
    MINUS           shift and go to state 7
    LEVEL2          shift and go to state 12
    LEVEL1          shift and go to state 13
    PLUS            reduce using rule 112 (expression -> .)
    $end            reduce using rule 112 (expression -> .)
    PARANCLOSE      reduce using rule 112 (expression -> .)
    HASH            shift and go to state 14
    WHILE           shift and go to state 17
    FOR             shift and go to state 18

  ! MINUS           [ reduce using rule 112 (expression -> .) ]

    term                           shift and go to state 3
    factor                         shift and go to state 121
    expression                     shift and go to state 122
    whileloop                      shift and go to state 8
    forloop                        shift and go to state 9
    forloop2                       shift and go to state 10
    whileloop2                     shift and go to state 11

state 89

    (99) expression -> LEVEL1 expression PLUS . term
    (103) expression -> LEVEL1 expression PLUS . ID
    (9) expression -> expression PLUS . term
    (13) expression -> expression PLUS . ID
    (27) term -> . term MULTIPLY factor
    (28) term -> . ID MULTIPLY ID
    (29) term -> . ID MULTIPLY factor
    (30) term -> . factor MULTIPLY ID
    (31) term -> . ID MULTIPLY term
    (32) term -> . term MULTIPLY ID
    (33) term -> . factor MULTIPLY factor
    (34) term -> . term DIVIDE factor
    (35) term -> . factor
    (36) factor -> . INT
    (37) factor -> . FLOAT
    (38) factor -> . PARANOPEN expression PARANCLOSE

    ID              shift and go to state 124
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    PARANOPEN       shift and go to state 6

    term                           shift and go to state 123
    factor                         shift and go to state 33

state 90

    (101) expression -> LEVEL1 factor PLUS . ID
    (105) expression -> LEVEL1 factor PLUS . factor
    (8) expression -> factor PLUS . factor
    (11) expression -> factor PLUS . ID
    (36) factor -> . INT
    (37) factor -> . FLOAT
    (38) factor -> . PARANOPEN expression PARANCLOSE

    ID              shift and go to state 126
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    PARANOPEN       shift and go to state 6

    factor                         shift and go to state 125

state 91

    (109) expression -> LEVEL1 PRINT PARANOPEN . STR_CONST PARANCLOSE
    (110) expression -> LEVEL1 PRINT PARANOPEN . ID PARANCLOSE
    (111) expression -> LEVEL1 PRINT PARANOPEN . term PARANCLOSE
    (15) expression -> PRINT PARANOPEN . STR_CONST PARANCLOSE
    (16) expression -> PRINT PARANOPEN . ID PARANCLOSE
    (17) expression -> PRINT PARANOPEN . term PARANCLOSE
    (27) term -> . term MULTIPLY factor
    (28) term -> . ID MULTIPLY ID
    (29) term -> . ID MULTIPLY factor
    (30) term -> . factor MULTIPLY ID
    (31) term -> . ID MULTIPLY term
    (32) term -> . term MULTIPLY ID
    (33) term -> . factor MULTIPLY factor
    (34) term -> . term DIVIDE factor
    (35) term -> . factor
    (36) factor -> . INT
    (37) factor -> . FLOAT
    (38) factor -> . PARANOPEN expression PARANCLOSE

    STR_CONST       shift and go to state 127
    ID              shift and go to state 128
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    PARANOPEN       shift and go to state 6

    term                           shift and go to state 129
    factor                         shift and go to state 33

state 92

    (81) forloop2 -> LEVEL1 FOR ID . IN RANGE PARANOPEN term PARANCLOSE COLON
    (82) forloop2 -> LEVEL1 FOR ID . IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (83) forloop2 -> LEVEL1 FOR ID . IN STR_CONST COLON
    (84) forloop2 -> LEVEL1 FOR ID . IN ID COLON
    (85) forloop2 -> LEVEL1 FOR ID . IN PARANOPEN STR_CONST PARANCLOSE COLON
    (86) forloop -> FOR ID . IN RANGE PARANOPEN term PARANCLOSE COLON
    (87) forloop -> FOR ID . IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (88) forloop -> FOR ID . IN STR_CONST COLON
    (89) forloop -> FOR ID . IN ID COLON
    (90) forloop -> FOR ID . IN PARANOPEN STR_CONST PARANCLOSE COLON

    IN              shift and go to state 130


state 93

    (43) whileloop2 -> LEVEL1 WHILE PARANOPEN . ID EQUAL factor PARANCLOSE COLON
    (44) whileloop2 -> LEVEL1 WHILE PARANOPEN . ID EQUAL STR_CONST PARANCLOSE COLON
    (45) whileloop2 -> LEVEL1 WHILE PARANOPEN . ID EQUAL ID PARANCLOSE COLON
    (46) whileloop2 -> LEVEL1 WHILE PARANOPEN . ID GREATER factor PARANCLOSE COLON
    (47) whileloop2 -> LEVEL1 WHILE PARANOPEN . ID GREATER STR_CONST PARANCLOSE COLON
    (48) whileloop2 -> LEVEL1 WHILE PARANOPEN . ID GREATER ID PARANCLOSE COLON
    (49) whileloop2 -> LEVEL1 WHILE PARANOPEN . ID GREATEREQ factor PARANCLOSE COLON
    (50) whileloop2 -> LEVEL1 WHILE PARANOPEN . ID GREATEREQ STR_CONST PARANCLOSE COLON
    (51) whileloop2 -> LEVEL1 WHILE PARANOPEN . ID GREATEREQ ID PARANCLOSE COLON
    (52) whileloop2 -> LEVEL1 WHILE PARANOPEN . ID LESSER factor PARANCLOSE COLON
    (53) whileloop2 -> LEVEL1 WHILE PARANOPEN . ID LESSER STR_CONST PARANCLOSE COLON
    (54) whileloop2 -> LEVEL1 WHILE PARANOPEN . ID LESSER ID PARANCLOSE COLON
    (55) whileloop2 -> LEVEL1 WHILE PARANOPEN . ID LESSEREQ factor PARANCLOSE COLON
    (56) whileloop2 -> LEVEL1 WHILE PARANOPEN . ID LESSEREQ STR_CONST PARANCLOSE COLON
    (57) whileloop2 -> LEVEL1 WHILE PARANOPEN . ID LESSEREQ ID PARANCLOSE COLON
    (62) whileloop -> WHILE PARANOPEN . ID EQUAL factor PARANCLOSE COLON
    (63) whileloop -> WHILE PARANOPEN . ID EQUAL STR_CONST PARANCLOSE COLON
    (64) whileloop -> WHILE PARANOPEN . ID EQUAL ID PARANCLOSE COLON
    (65) whileloop -> WHILE PARANOPEN . ID GREATER factor PARANCLOSE COLON
    (66) whileloop -> WHILE PARANOPEN . ID GREATER STR_CONST PARANCLOSE COLON
    (67) whileloop -> WHILE PARANOPEN . ID GREATER ID PARANCLOSE COLON
    (68) whileloop -> WHILE PARANOPEN . ID GREATEREQ factor PARANCLOSE COLON
    (69) whileloop -> WHILE PARANOPEN . ID GREATEREQ STR_CONST PARANCLOSE COLON
    (70) whileloop -> WHILE PARANOPEN . ID GREATEREQ ID PARANCLOSE COLON
    (71) whileloop -> WHILE PARANOPEN . ID LESSER factor PARANCLOSE COLON
    (72) whileloop -> WHILE PARANOPEN . ID LESSER STR_CONST PARANCLOSE COLON
    (73) whileloop -> WHILE PARANOPEN . ID LESSER ID PARANCLOSE COLON
    (74) whileloop -> WHILE PARANOPEN . ID LESSEREQ factor PARANCLOSE COLON
    (75) whileloop -> WHILE PARANOPEN . ID LESSEREQ STR_CONST PARANCLOSE COLON
    (76) whileloop -> WHILE PARANOPEN . ID LESSEREQ ID PARANCLOSE COLON
    (38) factor -> PARANOPEN . expression PARANCLOSE
    (1) expression -> . ID EQUAL expression
    (2) expression -> . ID EQUAL EMP_LIST
    (3) expression -> . ID EQUAL EMP_TUPLE
    (4) expression -> . ID EQUAL EMP_SET
    (5) expression -> . ID EQUAL STR_CONST
    (6) expression -> . ID EQUAL ID
    (7) expression -> . ID PLUS EQUAL term
    (8) expression -> . factor PLUS factor
    (9) expression -> . expression PLUS term
    (10) expression -> . ID PLUS factor
    (11) expression -> . factor PLUS ID
    (12) expression -> . ID PLUS ID
    (13) expression -> . expression PLUS ID
    (14) expression -> . ID PLUS expression
    (15) expression -> . PRINT PARANOPEN STR_CONST PARANCLOSE
    (16) expression -> . PRINT PARANOPEN ID PARANCLOSE
    (17) expression -> . PRINT PARANOPEN term PARANCLOSE
    (18) expression -> . expression MINUS term
    (19) expression -> . ID MINUS EQUAL term
    (20) expression -> . MINUS term
    (21) expression -> . term MINUS expression
    (22) expression -> . term MINUS term
    (23) expression -> . ID MINUS ID
    (24) expression -> . term MINUS ID
    (25) expression -> . ID MINUS term
    (26) expression -> . term
    (39) expression -> . whileloop
    (40) expression -> . forloop
    (41) expression -> . forloop2
    (42) expression -> . whileloop2
    (91) expression -> . LEVEL2 ID EQUAL expression
    (92) expression -> . LEVEL2 ID EQUAL ID
    (93) expression -> . LEVEL2 ID EQUAL STR_CONST
    (94) expression -> . LEVEL1 ID EQUAL expression
    (95) expression -> . LEVEL1 ID EQUAL ID
    (96) expression -> . LEVEL1 ID EQUAL STR_CONST
    (97) expression -> . LEVEL1 ID EQUAL factor
    (98) expression -> . LEVEL1 ID PLUS EQUAL term
    (99) expression -> . LEVEL1 expression PLUS term
    (100) expression -> . LEVEL1 ID PLUS factor
    (101) expression -> . LEVEL1 factor PLUS ID
    (102) expression -> . LEVEL1 ID PLUS ID
    (103) expression -> . LEVEL1 expression PLUS ID
    (104) expression -> . LEVEL1 ID PLUS expression
    (105) expression -> . LEVEL1 factor PLUS factor
    (106) expression -> . LEVEL2 PRINT PARANOPEN STR_CONST PARANCLOSE
    (107) expression -> . LEVEL2 PRINT PARANOPEN ID PARANCLOSE
    (108) expression -> . LEVEL2 PRINT PARANOPEN term PARANCLOSE
    (109) expression -> . LEVEL1 PRINT PARANOPEN STR_CONST PARANCLOSE
    (110) expression -> . LEVEL1 PRINT PARANOPEN ID PARANCLOSE
    (111) expression -> . LEVEL1 PRINT PARANOPEN term PARANCLOSE
    (112) expression -> .
    (113) expression -> . HASH expression
    (114) expression -> . HASH ID
    (115) expression -> . HASH STR_CONST
    (36) factor -> . INT
    (37) factor -> . FLOAT
    (38) factor -> . PARANOPEN expression PARANCLOSE
    (27) term -> . term MULTIPLY factor
    (28) term -> . ID MULTIPLY ID
    (29) term -> . ID MULTIPLY factor
    (30) term -> . factor MULTIPLY ID
    (31) term -> . ID MULTIPLY term
    (32) term -> . term MULTIPLY ID
    (33) term -> . factor MULTIPLY factor
    (34) term -> . term DIVIDE factor
    (35) term -> . factor
    (62) whileloop -> . WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (63) whileloop -> . WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (64) whileloop -> . WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (65) whileloop -> . WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (66) whileloop -> . WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (67) whileloop -> . WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (68) whileloop -> . WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (69) whileloop -> . WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (70) whileloop -> . WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (71) whileloop -> . WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (72) whileloop -> . WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (73) whileloop -> . WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (74) whileloop -> . WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (75) whileloop -> . WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (76) whileloop -> . WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (77) whileloop -> . WHILE BOOL COLON
    (78) whileloop -> . WHILE STR_CONST COLON
    (79) whileloop -> . WHILE factor COLON
    (80) whileloop -> . WHILE ID COLON
    (86) forloop -> . FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (87) forloop -> . FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (88) forloop -> . FOR ID IN STR_CONST COLON
    (89) forloop -> . FOR ID IN ID COLON
    (90) forloop -> . FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (81) forloop2 -> . LEVEL1 FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (82) forloop2 -> . LEVEL1 FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (83) forloop2 -> . LEVEL1 FOR ID IN STR_CONST COLON
    (84) forloop2 -> . LEVEL1 FOR ID IN ID COLON
    (85) forloop2 -> . LEVEL1 FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (43) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (44) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (45) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (46) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (47) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (48) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (49) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (50) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (51) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (52) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (53) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (54) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (55) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (56) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (57) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (58) whileloop2 -> . LEVEL1 WHILE BOOL COLON
    (59) whileloop2 -> . LEVEL1 WHILE STR_CONST COLON
    (60) whileloop2 -> . LEVEL1 WHILE factor COLON
    (61) whileloop2 -> . LEVEL1 WHILE ID COLON

  ! shift/reduce conflict for MINUS resolved as shift
    ID              shift and go to state 131
    PRINT           shift and go to state 5
    MINUS           shift and go to state 7
    LEVEL2          shift and go to state 12
    LEVEL1          shift and go to state 13
    PARANCLOSE      reduce using rule 112 (expression -> .)
    PLUS            reduce using rule 112 (expression -> .)
    HASH            shift and go to state 14
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    PARANOPEN       shift and go to state 6
    WHILE           shift and go to state 17
    FOR             shift and go to state 18

  ! MINUS           [ reduce using rule 112 (expression -> .) ]

    factor                         shift and go to state 4
    expression                     shift and go to state 31
    term                           shift and go to state 3
    whileloop                      shift and go to state 8
    forloop                        shift and go to state 9
    forloop2                       shift and go to state 10
    whileloop2                     shift and go to state 11

state 94

    (61) whileloop2 -> LEVEL1 WHILE ID . COLON
    (80) whileloop -> WHILE ID . COLON

    COLON           shift and go to state 132


state 95

    (60) whileloop2 -> LEVEL1 WHILE factor . COLON
    (79) whileloop -> WHILE factor . COLON

    COLON           shift and go to state 133


state 96

    (59) whileloop2 -> LEVEL1 WHILE STR_CONST . COLON
    (78) whileloop -> WHILE STR_CONST . COLON

    COLON           shift and go to state 134


state 97

    (58) whileloop2 -> LEVEL1 WHILE BOOL . COLON
    (77) whileloop -> WHILE BOOL . COLON

    COLON           shift and go to state 135


state 98

    (62) whileloop -> WHILE PARANOPEN ID . EQUAL factor PARANCLOSE COLON
    (63) whileloop -> WHILE PARANOPEN ID . EQUAL STR_CONST PARANCLOSE COLON
    (64) whileloop -> WHILE PARANOPEN ID . EQUAL ID PARANCLOSE COLON
    (65) whileloop -> WHILE PARANOPEN ID . GREATER factor PARANCLOSE COLON
    (66) whileloop -> WHILE PARANOPEN ID . GREATER STR_CONST PARANCLOSE COLON
    (67) whileloop -> WHILE PARANOPEN ID . GREATER ID PARANCLOSE COLON
    (68) whileloop -> WHILE PARANOPEN ID . GREATEREQ factor PARANCLOSE COLON
    (69) whileloop -> WHILE PARANOPEN ID . GREATEREQ STR_CONST PARANCLOSE COLON
    (70) whileloop -> WHILE PARANOPEN ID . GREATEREQ ID PARANCLOSE COLON
    (71) whileloop -> WHILE PARANOPEN ID . LESSER factor PARANCLOSE COLON
    (72) whileloop -> WHILE PARANOPEN ID . LESSER STR_CONST PARANCLOSE COLON
    (73) whileloop -> WHILE PARANOPEN ID . LESSER ID PARANCLOSE COLON
    (74) whileloop -> WHILE PARANOPEN ID . LESSEREQ factor PARANCLOSE COLON
    (75) whileloop -> WHILE PARANOPEN ID . LESSEREQ STR_CONST PARANCLOSE COLON
    (76) whileloop -> WHILE PARANOPEN ID . LESSEREQ ID PARANCLOSE COLON
    (1) expression -> ID . EQUAL expression
    (2) expression -> ID . EQUAL EMP_LIST
    (3) expression -> ID . EQUAL EMP_TUPLE
    (4) expression -> ID . EQUAL EMP_SET
    (5) expression -> ID . EQUAL STR_CONST
    (6) expression -> ID . EQUAL ID
    (7) expression -> ID . PLUS EQUAL term
    (10) expression -> ID . PLUS factor
    (12) expression -> ID . PLUS ID
    (14) expression -> ID . PLUS expression
    (19) expression -> ID . MINUS EQUAL term
    (23) expression -> ID . MINUS ID
    (25) expression -> ID . MINUS term
    (28) term -> ID . MULTIPLY ID
    (29) term -> ID . MULTIPLY factor
    (31) term -> ID . MULTIPLY term

    EQUAL           shift and go to state 136
    GREATER         shift and go to state 137
    GREATEREQ       shift and go to state 138
    LESSER          shift and go to state 139
    LESSEREQ        shift and go to state 140
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    MULTIPLY        shift and go to state 24


state 99

    (80) whileloop -> WHILE ID COLON .

    PLUS            reduce using rule 80 (whileloop -> WHILE ID COLON .)
    MINUS           reduce using rule 80 (whileloop -> WHILE ID COLON .)
    $end            reduce using rule 80 (whileloop -> WHILE ID COLON .)
    PARANCLOSE      reduce using rule 80 (whileloop -> WHILE ID COLON .)


state 100

    (79) whileloop -> WHILE factor COLON .

    PLUS            reduce using rule 79 (whileloop -> WHILE factor COLON .)
    MINUS           reduce using rule 79 (whileloop -> WHILE factor COLON .)
    $end            reduce using rule 79 (whileloop -> WHILE factor COLON .)
    PARANCLOSE      reduce using rule 79 (whileloop -> WHILE factor COLON .)


state 101

    (78) whileloop -> WHILE STR_CONST COLON .

    PLUS            reduce using rule 78 (whileloop -> WHILE STR_CONST COLON .)
    MINUS           reduce using rule 78 (whileloop -> WHILE STR_CONST COLON .)
    $end            reduce using rule 78 (whileloop -> WHILE STR_CONST COLON .)
    PARANCLOSE      reduce using rule 78 (whileloop -> WHILE STR_CONST COLON .)


state 102

    (77) whileloop -> WHILE BOOL COLON .

    PLUS            reduce using rule 77 (whileloop -> WHILE BOOL COLON .)
    MINUS           reduce using rule 77 (whileloop -> WHILE BOOL COLON .)
    $end            reduce using rule 77 (whileloop -> WHILE BOOL COLON .)
    PARANCLOSE      reduce using rule 77 (whileloop -> WHILE BOOL COLON .)


state 103

    (86) forloop -> FOR ID IN . RANGE PARANOPEN term PARANCLOSE COLON
    (87) forloop -> FOR ID IN . RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (88) forloop -> FOR ID IN . STR_CONST COLON
    (89) forloop -> FOR ID IN . ID COLON
    (90) forloop -> FOR ID IN . PARANOPEN STR_CONST PARANCLOSE COLON

    RANGE           shift and go to state 142
    STR_CONST       shift and go to state 144
    ID              shift and go to state 141
    PARANOPEN       shift and go to state 143


state 104

    (7) expression -> ID PLUS EQUAL term .
    (27) term -> term . MULTIPLY factor
    (32) term -> term . MULTIPLY ID
    (34) term -> term . DIVIDE factor

    PLUS            reduce using rule 7 (expression -> ID PLUS EQUAL term .)
    MINUS           reduce using rule 7 (expression -> ID PLUS EQUAL term .)
    $end            reduce using rule 7 (expression -> ID PLUS EQUAL term .)
    PARANCLOSE      reduce using rule 7 (expression -> ID PLUS EQUAL term .)
    MULTIPLY        shift and go to state 26
    DIVIDE          shift and go to state 27


state 105

    (19) expression -> ID MINUS EQUAL term .
    (27) term -> term . MULTIPLY factor
    (32) term -> term . MULTIPLY ID
    (34) term -> term . DIVIDE factor

    PLUS            reduce using rule 19 (expression -> ID MINUS EQUAL term .)
    MINUS           reduce using rule 19 (expression -> ID MINUS EQUAL term .)
    $end            reduce using rule 19 (expression -> ID MINUS EQUAL term .)
    PARANCLOSE      reduce using rule 19 (expression -> ID MINUS EQUAL term .)
    MULTIPLY        shift and go to state 26
    DIVIDE          shift and go to state 27


state 106

    (15) expression -> PRINT PARANOPEN STR_CONST PARANCLOSE .

    PLUS            reduce using rule 15 (expression -> PRINT PARANOPEN STR_CONST PARANCLOSE .)
    MINUS           reduce using rule 15 (expression -> PRINT PARANOPEN STR_CONST PARANCLOSE .)
    $end            reduce using rule 15 (expression -> PRINT PARANOPEN STR_CONST PARANCLOSE .)
    PARANCLOSE      reduce using rule 15 (expression -> PRINT PARANOPEN STR_CONST PARANCLOSE .)


state 107

    (16) expression -> PRINT PARANOPEN ID PARANCLOSE .

    PLUS            reduce using rule 16 (expression -> PRINT PARANOPEN ID PARANCLOSE .)
    MINUS           reduce using rule 16 (expression -> PRINT PARANOPEN ID PARANCLOSE .)
    $end            reduce using rule 16 (expression -> PRINT PARANOPEN ID PARANCLOSE .)
    PARANCLOSE      reduce using rule 16 (expression -> PRINT PARANOPEN ID PARANCLOSE .)


state 108

    (17) expression -> PRINT PARANOPEN term PARANCLOSE .

    PLUS            reduce using rule 17 (expression -> PRINT PARANOPEN term PARANCLOSE .)
    MINUS           reduce using rule 17 (expression -> PRINT PARANOPEN term PARANCLOSE .)
    $end            reduce using rule 17 (expression -> PRINT PARANOPEN term PARANCLOSE .)
    PARANCLOSE      reduce using rule 17 (expression -> PRINT PARANOPEN term PARANCLOSE .)


state 109

    (92) expression -> LEVEL2 ID EQUAL ID .
    (1) expression -> ID . EQUAL expression
    (2) expression -> ID . EQUAL EMP_LIST
    (3) expression -> ID . EQUAL EMP_TUPLE
    (4) expression -> ID . EQUAL EMP_SET
    (5) expression -> ID . EQUAL STR_CONST
    (6) expression -> ID . EQUAL ID
    (7) expression -> ID . PLUS EQUAL term
    (10) expression -> ID . PLUS factor
    (12) expression -> ID . PLUS ID
    (14) expression -> ID . PLUS expression
    (19) expression -> ID . MINUS EQUAL term
    (23) expression -> ID . MINUS ID
    (25) expression -> ID . MINUS term
    (28) term -> ID . MULTIPLY ID
    (29) term -> ID . MULTIPLY factor
    (31) term -> ID . MULTIPLY term

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    $end            reduce using rule 92 (expression -> LEVEL2 ID EQUAL ID .)
    PARANCLOSE      reduce using rule 92 (expression -> LEVEL2 ID EQUAL ID .)
    EQUAL           shift and go to state 21
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    MULTIPLY        shift and go to state 24

  ! PLUS            [ reduce using rule 92 (expression -> LEVEL2 ID EQUAL ID .) ]
  ! MINUS           [ reduce using rule 92 (expression -> LEVEL2 ID EQUAL ID .) ]


state 110

    (91) expression -> LEVEL2 ID EQUAL expression .
    (9) expression -> expression . PLUS term
    (13) expression -> expression . PLUS ID
    (18) expression -> expression . MINUS term

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    $end            reduce using rule 91 (expression -> LEVEL2 ID EQUAL expression .)
    PARANCLOSE      reduce using rule 91 (expression -> LEVEL2 ID EQUAL expression .)
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20

  ! PLUS            [ reduce using rule 91 (expression -> LEVEL2 ID EQUAL expression .) ]
  ! MINUS           [ reduce using rule 91 (expression -> LEVEL2 ID EQUAL expression .) ]


state 111

    (93) expression -> LEVEL2 ID EQUAL STR_CONST .

    PLUS            reduce using rule 93 (expression -> LEVEL2 ID EQUAL STR_CONST .)
    MINUS           reduce using rule 93 (expression -> LEVEL2 ID EQUAL STR_CONST .)
    $end            reduce using rule 93 (expression -> LEVEL2 ID EQUAL STR_CONST .)
    PARANCLOSE      reduce using rule 93 (expression -> LEVEL2 ID EQUAL STR_CONST .)


state 112

    (106) expression -> LEVEL2 PRINT PARANOPEN STR_CONST . PARANCLOSE

    PARANCLOSE      shift and go to state 145


state 113

    (107) expression -> LEVEL2 PRINT PARANOPEN ID . PARANCLOSE
    (28) term -> ID . MULTIPLY ID
    (29) term -> ID . MULTIPLY factor
    (31) term -> ID . MULTIPLY term

    PARANCLOSE      shift and go to state 146
    MULTIPLY        shift and go to state 24


state 114

    (108) expression -> LEVEL2 PRINT PARANOPEN term . PARANCLOSE
    (27) term -> term . MULTIPLY factor
    (32) term -> term . MULTIPLY ID
    (34) term -> term . DIVIDE factor

    PARANCLOSE      shift and go to state 147
    MULTIPLY        shift and go to state 26
    DIVIDE          shift and go to state 27


state 115

    (95) expression -> LEVEL1 ID EQUAL ID .
    (6) expression -> ID EQUAL ID .
    (1) expression -> ID . EQUAL expression
    (2) expression -> ID . EQUAL EMP_LIST
    (3) expression -> ID . EQUAL EMP_TUPLE
    (4) expression -> ID . EQUAL EMP_SET
    (5) expression -> ID . EQUAL STR_CONST
    (6) expression -> ID . EQUAL ID
    (7) expression -> ID . PLUS EQUAL term
    (10) expression -> ID . PLUS factor
    (12) expression -> ID . PLUS ID
    (14) expression -> ID . PLUS expression
    (19) expression -> ID . MINUS EQUAL term
    (23) expression -> ID . MINUS ID
    (25) expression -> ID . MINUS term
    (28) term -> ID . MULTIPLY ID
    (29) term -> ID . MULTIPLY factor
    (31) term -> ID . MULTIPLY term

  ! reduce/reduce conflict for PLUS resolved using rule 6 (expression -> ID EQUAL ID .)
  ! reduce/reduce conflict for MINUS resolved using rule 6 (expression -> ID EQUAL ID .)
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    $end            reduce using rule 95 (expression -> LEVEL1 ID EQUAL ID .)
    PARANCLOSE      reduce using rule 95 (expression -> LEVEL1 ID EQUAL ID .)
    EQUAL           shift and go to state 21
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    MULTIPLY        shift and go to state 24

  ! PLUS            [ reduce using rule 95 (expression -> LEVEL1 ID EQUAL ID .) ]
  ! MINUS           [ reduce using rule 95 (expression -> LEVEL1 ID EQUAL ID .) ]
  ! PLUS            [ reduce using rule 6 (expression -> ID EQUAL ID .) ]
  ! MINUS           [ reduce using rule 6 (expression -> ID EQUAL ID .) ]


state 116

    (94) expression -> LEVEL1 ID EQUAL expression .
    (1) expression -> ID EQUAL expression .
    (9) expression -> expression . PLUS term
    (13) expression -> expression . PLUS ID
    (18) expression -> expression . MINUS term

  ! reduce/reduce conflict for PLUS resolved using rule 1 (expression -> ID EQUAL expression .)
  ! reduce/reduce conflict for MINUS resolved using rule 1 (expression -> ID EQUAL expression .)
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    $end            reduce using rule 94 (expression -> LEVEL1 ID EQUAL expression .)
    PARANCLOSE      reduce using rule 94 (expression -> LEVEL1 ID EQUAL expression .)
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20

  ! PLUS            [ reduce using rule 94 (expression -> LEVEL1 ID EQUAL expression .) ]
  ! MINUS           [ reduce using rule 94 (expression -> LEVEL1 ID EQUAL expression .) ]
  ! PLUS            [ reduce using rule 1 (expression -> ID EQUAL expression .) ]
  ! MINUS           [ reduce using rule 1 (expression -> ID EQUAL expression .) ]


state 117

    (96) expression -> LEVEL1 ID EQUAL STR_CONST .
    (5) expression -> ID EQUAL STR_CONST .

  ! reduce/reduce conflict for PLUS resolved using rule 5 (expression -> ID EQUAL STR_CONST .)
  ! reduce/reduce conflict for MINUS resolved using rule 5 (expression -> ID EQUAL STR_CONST .)
    $end            reduce using rule 96 (expression -> LEVEL1 ID EQUAL STR_CONST .)
    PARANCLOSE      reduce using rule 96 (expression -> LEVEL1 ID EQUAL STR_CONST .)
    PLUS            reduce using rule 5 (expression -> ID EQUAL STR_CONST .)
    MINUS           reduce using rule 5 (expression -> ID EQUAL STR_CONST .)

  ! PLUS            [ reduce using rule 96 (expression -> LEVEL1 ID EQUAL STR_CONST .) ]
  ! MINUS           [ reduce using rule 96 (expression -> LEVEL1 ID EQUAL STR_CONST .) ]


state 118

    (97) expression -> LEVEL1 ID EQUAL factor .
    (8) expression -> factor . PLUS factor
    (11) expression -> factor . PLUS ID
    (30) term -> factor . MULTIPLY ID
    (33) term -> factor . MULTIPLY factor
    (35) term -> factor .

  ! shift/reduce conflict for PLUS resolved as shift
  ! reduce/reduce conflict for MINUS resolved using rule 35 (term -> factor .)
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 35 (term -> factor .)
  ! reduce/reduce conflict for PARANCLOSE resolved using rule 35 (term -> factor .)
    PLUS            shift and go to state 28
    MULTIPLY        shift and go to state 29
    MINUS           reduce using rule 35 (term -> factor .)
    DIVIDE          reduce using rule 35 (term -> factor .)
    $end            reduce using rule 35 (term -> factor .)
    PARANCLOSE      reduce using rule 35 (term -> factor .)

  ! PLUS            [ reduce using rule 97 (expression -> LEVEL1 ID EQUAL factor .) ]
  ! MINUS           [ reduce using rule 97 (expression -> LEVEL1 ID EQUAL factor .) ]
  ! $end            [ reduce using rule 97 (expression -> LEVEL1 ID EQUAL factor .) ]
  ! PARANCLOSE      [ reduce using rule 97 (expression -> LEVEL1 ID EQUAL factor .) ]
  ! MULTIPLY        [ reduce using rule 35 (term -> factor .) ]
  ! PLUS            [ reduce using rule 35 (term -> factor .) ]


state 119

    (102) expression -> LEVEL1 ID PLUS ID .
    (12) expression -> ID PLUS ID .
    (1) expression -> ID . EQUAL expression
    (2) expression -> ID . EQUAL EMP_LIST
    (3) expression -> ID . EQUAL EMP_TUPLE
    (4) expression -> ID . EQUAL EMP_SET
    (5) expression -> ID . EQUAL STR_CONST
    (6) expression -> ID . EQUAL ID
    (7) expression -> ID . PLUS EQUAL term
    (10) expression -> ID . PLUS factor
    (12) expression -> ID . PLUS ID
    (14) expression -> ID . PLUS expression
    (19) expression -> ID . MINUS EQUAL term
    (23) expression -> ID . MINUS ID
    (25) expression -> ID . MINUS term
    (28) term -> ID . MULTIPLY ID
    (29) term -> ID . MULTIPLY factor
    (31) term -> ID . MULTIPLY term

  ! reduce/reduce conflict for PLUS resolved using rule 12 (expression -> ID PLUS ID .)
  ! reduce/reduce conflict for MINUS resolved using rule 12 (expression -> ID PLUS ID .)
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    $end            reduce using rule 102 (expression -> LEVEL1 ID PLUS ID .)
    PARANCLOSE      reduce using rule 102 (expression -> LEVEL1 ID PLUS ID .)
    EQUAL           shift and go to state 21
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    MULTIPLY        shift and go to state 24

  ! PLUS            [ reduce using rule 102 (expression -> LEVEL1 ID PLUS ID .) ]
  ! MINUS           [ reduce using rule 102 (expression -> LEVEL1 ID PLUS ID .) ]
  ! PLUS            [ reduce using rule 12 (expression -> ID PLUS ID .) ]
  ! MINUS           [ reduce using rule 12 (expression -> ID PLUS ID .) ]


state 120

    (98) expression -> LEVEL1 ID PLUS EQUAL . term
    (7) expression -> ID PLUS EQUAL . term
    (27) term -> . term MULTIPLY factor
    (28) term -> . ID MULTIPLY ID
    (29) term -> . ID MULTIPLY factor
    (30) term -> . factor MULTIPLY ID
    (31) term -> . ID MULTIPLY term
    (32) term -> . term MULTIPLY ID
    (33) term -> . factor MULTIPLY factor
    (34) term -> . term DIVIDE factor
    (35) term -> . factor
    (36) factor -> . INT
    (37) factor -> . FLOAT
    (38) factor -> . PARANOPEN expression PARANCLOSE

    ID              shift and go to state 34
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    PARANOPEN       shift and go to state 6

    term                           shift and go to state 148
    factor                         shift and go to state 33

state 121

    (100) expression -> LEVEL1 ID PLUS factor .
    (10) expression -> ID PLUS factor .
    (8) expression -> factor . PLUS factor
    (11) expression -> factor . PLUS ID
    (30) term -> factor . MULTIPLY ID
    (33) term -> factor . MULTIPLY factor
    (35) term -> factor .

  ! reduce/reduce conflict for PLUS resolved using rule 10 (expression -> ID PLUS factor .)
  ! reduce/reduce conflict for MINUS resolved using rule 10 (expression -> ID PLUS factor .)
  ! shift/reduce conflict for PLUS resolved as shift
  ! reduce/reduce conflict for MINUS resolved using rule 10 (expression -> ID PLUS factor .)
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! reduce/reduce conflict for $end resolved using rule 35 (term -> factor .)
  ! reduce/reduce conflict for PARANCLOSE resolved using rule 35 (term -> factor .)
    MINUS           reduce using rule 10 (expression -> ID PLUS factor .)
    PLUS            shift and go to state 28
    MULTIPLY        shift and go to state 29
    DIVIDE          reduce using rule 35 (term -> factor .)
    $end            reduce using rule 35 (term -> factor .)
    PARANCLOSE      reduce using rule 35 (term -> factor .)

  ! PLUS            [ reduce using rule 100 (expression -> LEVEL1 ID PLUS factor .) ]
  ! MINUS           [ reduce using rule 100 (expression -> LEVEL1 ID PLUS factor .) ]
  ! $end            [ reduce using rule 100 (expression -> LEVEL1 ID PLUS factor .) ]
  ! PARANCLOSE      [ reduce using rule 100 (expression -> LEVEL1 ID PLUS factor .) ]
  ! PLUS            [ reduce using rule 10 (expression -> ID PLUS factor .) ]
  ! MINUS           [ reduce using rule 35 (term -> factor .) ]
  ! MULTIPLY        [ reduce using rule 35 (term -> factor .) ]
  ! PLUS            [ reduce using rule 35 (term -> factor .) ]


state 122

    (104) expression -> LEVEL1 ID PLUS expression .
    (14) expression -> ID PLUS expression .
    (9) expression -> expression . PLUS term
    (13) expression -> expression . PLUS ID
    (18) expression -> expression . MINUS term

  ! reduce/reduce conflict for PLUS resolved using rule 14 (expression -> ID PLUS expression .)
  ! reduce/reduce conflict for MINUS resolved using rule 14 (expression -> ID PLUS expression .)
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    $end            reduce using rule 104 (expression -> LEVEL1 ID PLUS expression .)
    PARANCLOSE      reduce using rule 104 (expression -> LEVEL1 ID PLUS expression .)
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20

  ! PLUS            [ reduce using rule 104 (expression -> LEVEL1 ID PLUS expression .) ]
  ! MINUS           [ reduce using rule 104 (expression -> LEVEL1 ID PLUS expression .) ]
  ! PLUS            [ reduce using rule 14 (expression -> ID PLUS expression .) ]
  ! MINUS           [ reduce using rule 14 (expression -> ID PLUS expression .) ]


state 123

    (99) expression -> LEVEL1 expression PLUS term .
    (9) expression -> expression PLUS term .
    (27) term -> term . MULTIPLY factor
    (32) term -> term . MULTIPLY ID
    (34) term -> term . DIVIDE factor

  ! reduce/reduce conflict for PLUS resolved using rule 9 (expression -> expression PLUS term .)
  ! reduce/reduce conflict for MINUS resolved using rule 9 (expression -> expression PLUS term .)
    $end            reduce using rule 99 (expression -> LEVEL1 expression PLUS term .)
    PARANCLOSE      reduce using rule 99 (expression -> LEVEL1 expression PLUS term .)
    PLUS            reduce using rule 9 (expression -> expression PLUS term .)
    MINUS           reduce using rule 9 (expression -> expression PLUS term .)
    MULTIPLY        shift and go to state 26
    DIVIDE          shift and go to state 27

  ! PLUS            [ reduce using rule 99 (expression -> LEVEL1 expression PLUS term .) ]
  ! MINUS           [ reduce using rule 99 (expression -> LEVEL1 expression PLUS term .) ]


state 124

    (103) expression -> LEVEL1 expression PLUS ID .
    (13) expression -> expression PLUS ID .
    (28) term -> ID . MULTIPLY ID
    (29) term -> ID . MULTIPLY factor
    (31) term -> ID . MULTIPLY term

  ! reduce/reduce conflict for PLUS resolved using rule 13 (expression -> expression PLUS ID .)
  ! reduce/reduce conflict for MINUS resolved using rule 13 (expression -> expression PLUS ID .)
    $end            reduce using rule 103 (expression -> LEVEL1 expression PLUS ID .)
    PARANCLOSE      reduce using rule 103 (expression -> LEVEL1 expression PLUS ID .)
    PLUS            reduce using rule 13 (expression -> expression PLUS ID .)
    MINUS           reduce using rule 13 (expression -> expression PLUS ID .)
    MULTIPLY        shift and go to state 24

  ! PLUS            [ reduce using rule 103 (expression -> LEVEL1 expression PLUS ID .) ]
  ! MINUS           [ reduce using rule 103 (expression -> LEVEL1 expression PLUS ID .) ]


state 125

    (105) expression -> LEVEL1 factor PLUS factor .
    (8) expression -> factor PLUS factor .

  ! reduce/reduce conflict for PLUS resolved using rule 8 (expression -> factor PLUS factor .)
  ! reduce/reduce conflict for MINUS resolved using rule 8 (expression -> factor PLUS factor .)
    $end            reduce using rule 105 (expression -> LEVEL1 factor PLUS factor .)
    PARANCLOSE      reduce using rule 105 (expression -> LEVEL1 factor PLUS factor .)
    PLUS            reduce using rule 8 (expression -> factor PLUS factor .)
    MINUS           reduce using rule 8 (expression -> factor PLUS factor .)

  ! PLUS            [ reduce using rule 105 (expression -> LEVEL1 factor PLUS factor .) ]
  ! MINUS           [ reduce using rule 105 (expression -> LEVEL1 factor PLUS factor .) ]


state 126

    (101) expression -> LEVEL1 factor PLUS ID .
    (11) expression -> factor PLUS ID .

  ! reduce/reduce conflict for PLUS resolved using rule 11 (expression -> factor PLUS ID .)
  ! reduce/reduce conflict for MINUS resolved using rule 11 (expression -> factor PLUS ID .)
    $end            reduce using rule 101 (expression -> LEVEL1 factor PLUS ID .)
    PARANCLOSE      reduce using rule 101 (expression -> LEVEL1 factor PLUS ID .)
    PLUS            reduce using rule 11 (expression -> factor PLUS ID .)
    MINUS           reduce using rule 11 (expression -> factor PLUS ID .)

  ! PLUS            [ reduce using rule 101 (expression -> LEVEL1 factor PLUS ID .) ]
  ! MINUS           [ reduce using rule 101 (expression -> LEVEL1 factor PLUS ID .) ]


state 127

    (109) expression -> LEVEL1 PRINT PARANOPEN STR_CONST . PARANCLOSE
    (15) expression -> PRINT PARANOPEN STR_CONST . PARANCLOSE

    PARANCLOSE      shift and go to state 149


state 128

    (110) expression -> LEVEL1 PRINT PARANOPEN ID . PARANCLOSE
    (16) expression -> PRINT PARANOPEN ID . PARANCLOSE
    (28) term -> ID . MULTIPLY ID
    (29) term -> ID . MULTIPLY factor
    (31) term -> ID . MULTIPLY term

    PARANCLOSE      shift and go to state 150
    MULTIPLY        shift and go to state 24


state 129

    (111) expression -> LEVEL1 PRINT PARANOPEN term . PARANCLOSE
    (17) expression -> PRINT PARANOPEN term . PARANCLOSE
    (27) term -> term . MULTIPLY factor
    (32) term -> term . MULTIPLY ID
    (34) term -> term . DIVIDE factor

    PARANCLOSE      shift and go to state 151
    MULTIPLY        shift and go to state 26
    DIVIDE          shift and go to state 27


state 130

    (81) forloop2 -> LEVEL1 FOR ID IN . RANGE PARANOPEN term PARANCLOSE COLON
    (82) forloop2 -> LEVEL1 FOR ID IN . RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (83) forloop2 -> LEVEL1 FOR ID IN . STR_CONST COLON
    (84) forloop2 -> LEVEL1 FOR ID IN . ID COLON
    (85) forloop2 -> LEVEL1 FOR ID IN . PARANOPEN STR_CONST PARANCLOSE COLON
    (86) forloop -> FOR ID IN . RANGE PARANOPEN term PARANCLOSE COLON
    (87) forloop -> FOR ID IN . RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (88) forloop -> FOR ID IN . STR_CONST COLON
    (89) forloop -> FOR ID IN . ID COLON
    (90) forloop -> FOR ID IN . PARANOPEN STR_CONST PARANCLOSE COLON

    RANGE           shift and go to state 153
    STR_CONST       shift and go to state 155
    ID              shift and go to state 152
    PARANOPEN       shift and go to state 154


state 131

    (43) whileloop2 -> LEVEL1 WHILE PARANOPEN ID . EQUAL factor PARANCLOSE COLON
    (44) whileloop2 -> LEVEL1 WHILE PARANOPEN ID . EQUAL STR_CONST PARANCLOSE COLON
    (45) whileloop2 -> LEVEL1 WHILE PARANOPEN ID . EQUAL ID PARANCLOSE COLON
    (46) whileloop2 -> LEVEL1 WHILE PARANOPEN ID . GREATER factor PARANCLOSE COLON
    (47) whileloop2 -> LEVEL1 WHILE PARANOPEN ID . GREATER STR_CONST PARANCLOSE COLON
    (48) whileloop2 -> LEVEL1 WHILE PARANOPEN ID . GREATER ID PARANCLOSE COLON
    (49) whileloop2 -> LEVEL1 WHILE PARANOPEN ID . GREATEREQ factor PARANCLOSE COLON
    (50) whileloop2 -> LEVEL1 WHILE PARANOPEN ID . GREATEREQ STR_CONST PARANCLOSE COLON
    (51) whileloop2 -> LEVEL1 WHILE PARANOPEN ID . GREATEREQ ID PARANCLOSE COLON
    (52) whileloop2 -> LEVEL1 WHILE PARANOPEN ID . LESSER factor PARANCLOSE COLON
    (53) whileloop2 -> LEVEL1 WHILE PARANOPEN ID . LESSER STR_CONST PARANCLOSE COLON
    (54) whileloop2 -> LEVEL1 WHILE PARANOPEN ID . LESSER ID PARANCLOSE COLON
    (55) whileloop2 -> LEVEL1 WHILE PARANOPEN ID . LESSEREQ factor PARANCLOSE COLON
    (56) whileloop2 -> LEVEL1 WHILE PARANOPEN ID . LESSEREQ STR_CONST PARANCLOSE COLON
    (57) whileloop2 -> LEVEL1 WHILE PARANOPEN ID . LESSEREQ ID PARANCLOSE COLON
    (62) whileloop -> WHILE PARANOPEN ID . EQUAL factor PARANCLOSE COLON
    (63) whileloop -> WHILE PARANOPEN ID . EQUAL STR_CONST PARANCLOSE COLON
    (64) whileloop -> WHILE PARANOPEN ID . EQUAL ID PARANCLOSE COLON
    (65) whileloop -> WHILE PARANOPEN ID . GREATER factor PARANCLOSE COLON
    (66) whileloop -> WHILE PARANOPEN ID . GREATER STR_CONST PARANCLOSE COLON
    (67) whileloop -> WHILE PARANOPEN ID . GREATER ID PARANCLOSE COLON
    (68) whileloop -> WHILE PARANOPEN ID . GREATEREQ factor PARANCLOSE COLON
    (69) whileloop -> WHILE PARANOPEN ID . GREATEREQ STR_CONST PARANCLOSE COLON
    (70) whileloop -> WHILE PARANOPEN ID . GREATEREQ ID PARANCLOSE COLON
    (71) whileloop -> WHILE PARANOPEN ID . LESSER factor PARANCLOSE COLON
    (72) whileloop -> WHILE PARANOPEN ID . LESSER STR_CONST PARANCLOSE COLON
    (73) whileloop -> WHILE PARANOPEN ID . LESSER ID PARANCLOSE COLON
    (74) whileloop -> WHILE PARANOPEN ID . LESSEREQ factor PARANCLOSE COLON
    (75) whileloop -> WHILE PARANOPEN ID . LESSEREQ STR_CONST PARANCLOSE COLON
    (76) whileloop -> WHILE PARANOPEN ID . LESSEREQ ID PARANCLOSE COLON
    (1) expression -> ID . EQUAL expression
    (2) expression -> ID . EQUAL EMP_LIST
    (3) expression -> ID . EQUAL EMP_TUPLE
    (4) expression -> ID . EQUAL EMP_SET
    (5) expression -> ID . EQUAL STR_CONST
    (6) expression -> ID . EQUAL ID
    (7) expression -> ID . PLUS EQUAL term
    (10) expression -> ID . PLUS factor
    (12) expression -> ID . PLUS ID
    (14) expression -> ID . PLUS expression
    (19) expression -> ID . MINUS EQUAL term
    (23) expression -> ID . MINUS ID
    (25) expression -> ID . MINUS term
    (28) term -> ID . MULTIPLY ID
    (29) term -> ID . MULTIPLY factor
    (31) term -> ID . MULTIPLY term

    EQUAL           shift and go to state 156
    GREATER         shift and go to state 157
    GREATEREQ       shift and go to state 158
    LESSER          shift and go to state 159
    LESSEREQ        shift and go to state 160
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    MULTIPLY        shift and go to state 24


state 132

    (61) whileloop2 -> LEVEL1 WHILE ID COLON .
    (80) whileloop -> WHILE ID COLON .

  ! reduce/reduce conflict for PLUS resolved using rule 61 (whileloop2 -> LEVEL1 WHILE ID COLON .)
  ! reduce/reduce conflict for MINUS resolved using rule 61 (whileloop2 -> LEVEL1 WHILE ID COLON .)
    PLUS            reduce using rule 61 (whileloop2 -> LEVEL1 WHILE ID COLON .)
    MINUS           reduce using rule 61 (whileloop2 -> LEVEL1 WHILE ID COLON .)
    $end            reduce using rule 61 (whileloop2 -> LEVEL1 WHILE ID COLON .)
    PARANCLOSE      reduce using rule 61 (whileloop2 -> LEVEL1 WHILE ID COLON .)

  ! PLUS            [ reduce using rule 80 (whileloop -> WHILE ID COLON .) ]
  ! MINUS           [ reduce using rule 80 (whileloop -> WHILE ID COLON .) ]


state 133

    (60) whileloop2 -> LEVEL1 WHILE factor COLON .
    (79) whileloop -> WHILE factor COLON .

  ! reduce/reduce conflict for PLUS resolved using rule 60 (whileloop2 -> LEVEL1 WHILE factor COLON .)
  ! reduce/reduce conflict for MINUS resolved using rule 60 (whileloop2 -> LEVEL1 WHILE factor COLON .)
    PLUS            reduce using rule 60 (whileloop2 -> LEVEL1 WHILE factor COLON .)
    MINUS           reduce using rule 60 (whileloop2 -> LEVEL1 WHILE factor COLON .)
    $end            reduce using rule 60 (whileloop2 -> LEVEL1 WHILE factor COLON .)
    PARANCLOSE      reduce using rule 60 (whileloop2 -> LEVEL1 WHILE factor COLON .)

  ! PLUS            [ reduce using rule 79 (whileloop -> WHILE factor COLON .) ]
  ! MINUS           [ reduce using rule 79 (whileloop -> WHILE factor COLON .) ]


state 134

    (59) whileloop2 -> LEVEL1 WHILE STR_CONST COLON .
    (78) whileloop -> WHILE STR_CONST COLON .

  ! reduce/reduce conflict for PLUS resolved using rule 59 (whileloop2 -> LEVEL1 WHILE STR_CONST COLON .)
  ! reduce/reduce conflict for MINUS resolved using rule 59 (whileloop2 -> LEVEL1 WHILE STR_CONST COLON .)
    PLUS            reduce using rule 59 (whileloop2 -> LEVEL1 WHILE STR_CONST COLON .)
    MINUS           reduce using rule 59 (whileloop2 -> LEVEL1 WHILE STR_CONST COLON .)
    $end            reduce using rule 59 (whileloop2 -> LEVEL1 WHILE STR_CONST COLON .)
    PARANCLOSE      reduce using rule 59 (whileloop2 -> LEVEL1 WHILE STR_CONST COLON .)

  ! PLUS            [ reduce using rule 78 (whileloop -> WHILE STR_CONST COLON .) ]
  ! MINUS           [ reduce using rule 78 (whileloop -> WHILE STR_CONST COLON .) ]


state 135

    (58) whileloop2 -> LEVEL1 WHILE BOOL COLON .
    (77) whileloop -> WHILE BOOL COLON .

  ! reduce/reduce conflict for PLUS resolved using rule 58 (whileloop2 -> LEVEL1 WHILE BOOL COLON .)
  ! reduce/reduce conflict for MINUS resolved using rule 58 (whileloop2 -> LEVEL1 WHILE BOOL COLON .)
    PLUS            reduce using rule 58 (whileloop2 -> LEVEL1 WHILE BOOL COLON .)
    MINUS           reduce using rule 58 (whileloop2 -> LEVEL1 WHILE BOOL COLON .)
    $end            reduce using rule 58 (whileloop2 -> LEVEL1 WHILE BOOL COLON .)
    PARANCLOSE      reduce using rule 58 (whileloop2 -> LEVEL1 WHILE BOOL COLON .)

  ! PLUS            [ reduce using rule 77 (whileloop -> WHILE BOOL COLON .) ]
  ! MINUS           [ reduce using rule 77 (whileloop -> WHILE BOOL COLON .) ]


state 136

    (62) whileloop -> WHILE PARANOPEN ID EQUAL . factor PARANCLOSE COLON
    (63) whileloop -> WHILE PARANOPEN ID EQUAL . STR_CONST PARANCLOSE COLON
    (64) whileloop -> WHILE PARANOPEN ID EQUAL . ID PARANCLOSE COLON
    (1) expression -> ID EQUAL . expression
    (2) expression -> ID EQUAL . EMP_LIST
    (3) expression -> ID EQUAL . EMP_TUPLE
    (4) expression -> ID EQUAL . EMP_SET
    (5) expression -> ID EQUAL . STR_CONST
    (6) expression -> ID EQUAL . ID
    (36) factor -> . INT
    (37) factor -> . FLOAT
    (38) factor -> . PARANOPEN expression PARANCLOSE
    (1) expression -> . ID EQUAL expression
    (2) expression -> . ID EQUAL EMP_LIST
    (3) expression -> . ID EQUAL EMP_TUPLE
    (4) expression -> . ID EQUAL EMP_SET
    (5) expression -> . ID EQUAL STR_CONST
    (6) expression -> . ID EQUAL ID
    (7) expression -> . ID PLUS EQUAL term
    (8) expression -> . factor PLUS factor
    (9) expression -> . expression PLUS term
    (10) expression -> . ID PLUS factor
    (11) expression -> . factor PLUS ID
    (12) expression -> . ID PLUS ID
    (13) expression -> . expression PLUS ID
    (14) expression -> . ID PLUS expression
    (15) expression -> . PRINT PARANOPEN STR_CONST PARANCLOSE
    (16) expression -> . PRINT PARANOPEN ID PARANCLOSE
    (17) expression -> . PRINT PARANOPEN term PARANCLOSE
    (18) expression -> . expression MINUS term
    (19) expression -> . ID MINUS EQUAL term
    (20) expression -> . MINUS term
    (21) expression -> . term MINUS expression
    (22) expression -> . term MINUS term
    (23) expression -> . ID MINUS ID
    (24) expression -> . term MINUS ID
    (25) expression -> . ID MINUS term
    (26) expression -> . term
    (39) expression -> . whileloop
    (40) expression -> . forloop
    (41) expression -> . forloop2
    (42) expression -> . whileloop2
    (91) expression -> . LEVEL2 ID EQUAL expression
    (92) expression -> . LEVEL2 ID EQUAL ID
    (93) expression -> . LEVEL2 ID EQUAL STR_CONST
    (94) expression -> . LEVEL1 ID EQUAL expression
    (95) expression -> . LEVEL1 ID EQUAL ID
    (96) expression -> . LEVEL1 ID EQUAL STR_CONST
    (97) expression -> . LEVEL1 ID EQUAL factor
    (98) expression -> . LEVEL1 ID PLUS EQUAL term
    (99) expression -> . LEVEL1 expression PLUS term
    (100) expression -> . LEVEL1 ID PLUS factor
    (101) expression -> . LEVEL1 factor PLUS ID
    (102) expression -> . LEVEL1 ID PLUS ID
    (103) expression -> . LEVEL1 expression PLUS ID
    (104) expression -> . LEVEL1 ID PLUS expression
    (105) expression -> . LEVEL1 factor PLUS factor
    (106) expression -> . LEVEL2 PRINT PARANOPEN STR_CONST PARANCLOSE
    (107) expression -> . LEVEL2 PRINT PARANOPEN ID PARANCLOSE
    (108) expression -> . LEVEL2 PRINT PARANOPEN term PARANCLOSE
    (109) expression -> . LEVEL1 PRINT PARANOPEN STR_CONST PARANCLOSE
    (110) expression -> . LEVEL1 PRINT PARANOPEN ID PARANCLOSE
    (111) expression -> . LEVEL1 PRINT PARANOPEN term PARANCLOSE
    (112) expression -> .
    (113) expression -> . HASH expression
    (114) expression -> . HASH ID
    (115) expression -> . HASH STR_CONST
    (27) term -> . term MULTIPLY factor
    (28) term -> . ID MULTIPLY ID
    (29) term -> . ID MULTIPLY factor
    (30) term -> . factor MULTIPLY ID
    (31) term -> . ID MULTIPLY term
    (32) term -> . term MULTIPLY ID
    (33) term -> . factor MULTIPLY factor
    (34) term -> . term DIVIDE factor
    (35) term -> . factor
    (62) whileloop -> . WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (63) whileloop -> . WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (64) whileloop -> . WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (65) whileloop -> . WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (66) whileloop -> . WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (67) whileloop -> . WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (68) whileloop -> . WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (69) whileloop -> . WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (70) whileloop -> . WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (71) whileloop -> . WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (72) whileloop -> . WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (73) whileloop -> . WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (74) whileloop -> . WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (75) whileloop -> . WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (76) whileloop -> . WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (77) whileloop -> . WHILE BOOL COLON
    (78) whileloop -> . WHILE STR_CONST COLON
    (79) whileloop -> . WHILE factor COLON
    (80) whileloop -> . WHILE ID COLON
    (86) forloop -> . FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (87) forloop -> . FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (88) forloop -> . FOR ID IN STR_CONST COLON
    (89) forloop -> . FOR ID IN ID COLON
    (90) forloop -> . FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (81) forloop2 -> . LEVEL1 FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (82) forloop2 -> . LEVEL1 FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (83) forloop2 -> . LEVEL1 FOR ID IN STR_CONST COLON
    (84) forloop2 -> . LEVEL1 FOR ID IN ID COLON
    (85) forloop2 -> . LEVEL1 FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (43) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (44) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (45) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (46) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (47) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (48) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (49) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (50) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (51) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (52) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (53) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (54) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (55) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (56) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (57) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (58) whileloop2 -> . LEVEL1 WHILE BOOL COLON
    (59) whileloop2 -> . LEVEL1 WHILE STR_CONST COLON
    (60) whileloop2 -> . LEVEL1 WHILE factor COLON
    (61) whileloop2 -> . LEVEL1 WHILE ID COLON

  ! shift/reduce conflict for MINUS resolved as shift
    STR_CONST       shift and go to state 163
    ID              shift and go to state 161
    EMP_LIST        shift and go to state 57
    EMP_TUPLE       shift and go to state 58
    EMP_SET         shift and go to state 59
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    PARANOPEN       shift and go to state 6
    PRINT           shift and go to state 5
    MINUS           shift and go to state 7
    LEVEL2          shift and go to state 12
    LEVEL1          shift and go to state 13
    PLUS            reduce using rule 112 (expression -> .)
    PARANCLOSE      reduce using rule 112 (expression -> .)
    HASH            shift and go to state 14
    WHILE           shift and go to state 17
    FOR             shift and go to state 18

  ! MINUS           [ reduce using rule 112 (expression -> .) ]

    factor                         shift and go to state 162
    expression                     shift and go to state 56
    term                           shift and go to state 3
    whileloop                      shift and go to state 8
    forloop                        shift and go to state 9
    forloop2                       shift and go to state 10
    whileloop2                     shift and go to state 11

state 137

    (65) whileloop -> WHILE PARANOPEN ID GREATER . factor PARANCLOSE COLON
    (66) whileloop -> WHILE PARANOPEN ID GREATER . STR_CONST PARANCLOSE COLON
    (67) whileloop -> WHILE PARANOPEN ID GREATER . ID PARANCLOSE COLON
    (36) factor -> . INT
    (37) factor -> . FLOAT
    (38) factor -> . PARANOPEN expression PARANCLOSE

    STR_CONST       shift and go to state 166
    ID              shift and go to state 164
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    PARANOPEN       shift and go to state 6

    factor                         shift and go to state 165

state 138

    (68) whileloop -> WHILE PARANOPEN ID GREATEREQ . factor PARANCLOSE COLON
    (69) whileloop -> WHILE PARANOPEN ID GREATEREQ . STR_CONST PARANCLOSE COLON
    (70) whileloop -> WHILE PARANOPEN ID GREATEREQ . ID PARANCLOSE COLON
    (36) factor -> . INT
    (37) factor -> . FLOAT
    (38) factor -> . PARANOPEN expression PARANCLOSE

    STR_CONST       shift and go to state 169
    ID              shift and go to state 167
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    PARANOPEN       shift and go to state 6

    factor                         shift and go to state 168

state 139

    (71) whileloop -> WHILE PARANOPEN ID LESSER . factor PARANCLOSE COLON
    (72) whileloop -> WHILE PARANOPEN ID LESSER . STR_CONST PARANCLOSE COLON
    (73) whileloop -> WHILE PARANOPEN ID LESSER . ID PARANCLOSE COLON
    (36) factor -> . INT
    (37) factor -> . FLOAT
    (38) factor -> . PARANOPEN expression PARANCLOSE

    STR_CONST       shift and go to state 172
    ID              shift and go to state 170
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    PARANOPEN       shift and go to state 6

    factor                         shift and go to state 171

state 140

    (74) whileloop -> WHILE PARANOPEN ID LESSEREQ . factor PARANCLOSE COLON
    (75) whileloop -> WHILE PARANOPEN ID LESSEREQ . STR_CONST PARANCLOSE COLON
    (76) whileloop -> WHILE PARANOPEN ID LESSEREQ . ID PARANCLOSE COLON
    (36) factor -> . INT
    (37) factor -> . FLOAT
    (38) factor -> . PARANOPEN expression PARANCLOSE

    STR_CONST       shift and go to state 175
    ID              shift and go to state 173
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    PARANOPEN       shift and go to state 6

    factor                         shift and go to state 174

state 141

    (89) forloop -> FOR ID IN ID . COLON

    COLON           shift and go to state 176


state 142

    (86) forloop -> FOR ID IN RANGE . PARANOPEN term PARANCLOSE COLON
    (87) forloop -> FOR ID IN RANGE . PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON

    PARANOPEN       shift and go to state 177


state 143

    (90) forloop -> FOR ID IN PARANOPEN . STR_CONST PARANCLOSE COLON

    STR_CONST       shift and go to state 178


state 144

    (88) forloop -> FOR ID IN STR_CONST . COLON

    COLON           shift and go to state 179


state 145

    (106) expression -> LEVEL2 PRINT PARANOPEN STR_CONST PARANCLOSE .

    PLUS            reduce using rule 106 (expression -> LEVEL2 PRINT PARANOPEN STR_CONST PARANCLOSE .)
    MINUS           reduce using rule 106 (expression -> LEVEL2 PRINT PARANOPEN STR_CONST PARANCLOSE .)
    $end            reduce using rule 106 (expression -> LEVEL2 PRINT PARANOPEN STR_CONST PARANCLOSE .)
    PARANCLOSE      reduce using rule 106 (expression -> LEVEL2 PRINT PARANOPEN STR_CONST PARANCLOSE .)


state 146

    (107) expression -> LEVEL2 PRINT PARANOPEN ID PARANCLOSE .

    PLUS            reduce using rule 107 (expression -> LEVEL2 PRINT PARANOPEN ID PARANCLOSE .)
    MINUS           reduce using rule 107 (expression -> LEVEL2 PRINT PARANOPEN ID PARANCLOSE .)
    $end            reduce using rule 107 (expression -> LEVEL2 PRINT PARANOPEN ID PARANCLOSE .)
    PARANCLOSE      reduce using rule 107 (expression -> LEVEL2 PRINT PARANOPEN ID PARANCLOSE .)


state 147

    (108) expression -> LEVEL2 PRINT PARANOPEN term PARANCLOSE .

    PLUS            reduce using rule 108 (expression -> LEVEL2 PRINT PARANOPEN term PARANCLOSE .)
    MINUS           reduce using rule 108 (expression -> LEVEL2 PRINT PARANOPEN term PARANCLOSE .)
    $end            reduce using rule 108 (expression -> LEVEL2 PRINT PARANOPEN term PARANCLOSE .)
    PARANCLOSE      reduce using rule 108 (expression -> LEVEL2 PRINT PARANOPEN term PARANCLOSE .)


state 148

    (98) expression -> LEVEL1 ID PLUS EQUAL term .
    (7) expression -> ID PLUS EQUAL term .
    (27) term -> term . MULTIPLY factor
    (32) term -> term . MULTIPLY ID
    (34) term -> term . DIVIDE factor

  ! reduce/reduce conflict for PLUS resolved using rule 7 (expression -> ID PLUS EQUAL term .)
  ! reduce/reduce conflict for MINUS resolved using rule 7 (expression -> ID PLUS EQUAL term .)
    $end            reduce using rule 98 (expression -> LEVEL1 ID PLUS EQUAL term .)
    PARANCLOSE      reduce using rule 98 (expression -> LEVEL1 ID PLUS EQUAL term .)
    PLUS            reduce using rule 7 (expression -> ID PLUS EQUAL term .)
    MINUS           reduce using rule 7 (expression -> ID PLUS EQUAL term .)
    MULTIPLY        shift and go to state 26
    DIVIDE          shift and go to state 27

  ! PLUS            [ reduce using rule 98 (expression -> LEVEL1 ID PLUS EQUAL term .) ]
  ! MINUS           [ reduce using rule 98 (expression -> LEVEL1 ID PLUS EQUAL term .) ]


state 149

    (109) expression -> LEVEL1 PRINT PARANOPEN STR_CONST PARANCLOSE .
    (15) expression -> PRINT PARANOPEN STR_CONST PARANCLOSE .

  ! reduce/reduce conflict for PLUS resolved using rule 15 (expression -> PRINT PARANOPEN STR_CONST PARANCLOSE .)
  ! reduce/reduce conflict for MINUS resolved using rule 15 (expression -> PRINT PARANOPEN STR_CONST PARANCLOSE .)
    $end            reduce using rule 109 (expression -> LEVEL1 PRINT PARANOPEN STR_CONST PARANCLOSE .)
    PARANCLOSE      reduce using rule 109 (expression -> LEVEL1 PRINT PARANOPEN STR_CONST PARANCLOSE .)
    PLUS            reduce using rule 15 (expression -> PRINT PARANOPEN STR_CONST PARANCLOSE .)
    MINUS           reduce using rule 15 (expression -> PRINT PARANOPEN STR_CONST PARANCLOSE .)

  ! PLUS            [ reduce using rule 109 (expression -> LEVEL1 PRINT PARANOPEN STR_CONST PARANCLOSE .) ]
  ! MINUS           [ reduce using rule 109 (expression -> LEVEL1 PRINT PARANOPEN STR_CONST PARANCLOSE .) ]


state 150

    (110) expression -> LEVEL1 PRINT PARANOPEN ID PARANCLOSE .
    (16) expression -> PRINT PARANOPEN ID PARANCLOSE .

  ! reduce/reduce conflict for PLUS resolved using rule 16 (expression -> PRINT PARANOPEN ID PARANCLOSE .)
  ! reduce/reduce conflict for MINUS resolved using rule 16 (expression -> PRINT PARANOPEN ID PARANCLOSE .)
    $end            reduce using rule 110 (expression -> LEVEL1 PRINT PARANOPEN ID PARANCLOSE .)
    PARANCLOSE      reduce using rule 110 (expression -> LEVEL1 PRINT PARANOPEN ID PARANCLOSE .)
    PLUS            reduce using rule 16 (expression -> PRINT PARANOPEN ID PARANCLOSE .)
    MINUS           reduce using rule 16 (expression -> PRINT PARANOPEN ID PARANCLOSE .)

  ! PLUS            [ reduce using rule 110 (expression -> LEVEL1 PRINT PARANOPEN ID PARANCLOSE .) ]
  ! MINUS           [ reduce using rule 110 (expression -> LEVEL1 PRINT PARANOPEN ID PARANCLOSE .) ]


state 151

    (111) expression -> LEVEL1 PRINT PARANOPEN term PARANCLOSE .
    (17) expression -> PRINT PARANOPEN term PARANCLOSE .

  ! reduce/reduce conflict for PLUS resolved using rule 17 (expression -> PRINT PARANOPEN term PARANCLOSE .)
  ! reduce/reduce conflict for MINUS resolved using rule 17 (expression -> PRINT PARANOPEN term PARANCLOSE .)
    $end            reduce using rule 111 (expression -> LEVEL1 PRINT PARANOPEN term PARANCLOSE .)
    PARANCLOSE      reduce using rule 111 (expression -> LEVEL1 PRINT PARANOPEN term PARANCLOSE .)
    PLUS            reduce using rule 17 (expression -> PRINT PARANOPEN term PARANCLOSE .)
    MINUS           reduce using rule 17 (expression -> PRINT PARANOPEN term PARANCLOSE .)

  ! PLUS            [ reduce using rule 111 (expression -> LEVEL1 PRINT PARANOPEN term PARANCLOSE .) ]
  ! MINUS           [ reduce using rule 111 (expression -> LEVEL1 PRINT PARANOPEN term PARANCLOSE .) ]


state 152

    (84) forloop2 -> LEVEL1 FOR ID IN ID . COLON
    (89) forloop -> FOR ID IN ID . COLON

    COLON           shift and go to state 180


state 153

    (81) forloop2 -> LEVEL1 FOR ID IN RANGE . PARANOPEN term PARANCLOSE COLON
    (82) forloop2 -> LEVEL1 FOR ID IN RANGE . PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (86) forloop -> FOR ID IN RANGE . PARANOPEN term PARANCLOSE COLON
    (87) forloop -> FOR ID IN RANGE . PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON

    PARANOPEN       shift and go to state 181


state 154

    (85) forloop2 -> LEVEL1 FOR ID IN PARANOPEN . STR_CONST PARANCLOSE COLON
    (90) forloop -> FOR ID IN PARANOPEN . STR_CONST PARANCLOSE COLON

    STR_CONST       shift and go to state 182


state 155

    (83) forloop2 -> LEVEL1 FOR ID IN STR_CONST . COLON
    (88) forloop -> FOR ID IN STR_CONST . COLON

    COLON           shift and go to state 183


state 156

    (43) whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL . factor PARANCLOSE COLON
    (44) whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL . STR_CONST PARANCLOSE COLON
    (45) whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL . ID PARANCLOSE COLON
    (62) whileloop -> WHILE PARANOPEN ID EQUAL . factor PARANCLOSE COLON
    (63) whileloop -> WHILE PARANOPEN ID EQUAL . STR_CONST PARANCLOSE COLON
    (64) whileloop -> WHILE PARANOPEN ID EQUAL . ID PARANCLOSE COLON
    (1) expression -> ID EQUAL . expression
    (2) expression -> ID EQUAL . EMP_LIST
    (3) expression -> ID EQUAL . EMP_TUPLE
    (4) expression -> ID EQUAL . EMP_SET
    (5) expression -> ID EQUAL . STR_CONST
    (6) expression -> ID EQUAL . ID
    (36) factor -> . INT
    (37) factor -> . FLOAT
    (38) factor -> . PARANOPEN expression PARANCLOSE
    (1) expression -> . ID EQUAL expression
    (2) expression -> . ID EQUAL EMP_LIST
    (3) expression -> . ID EQUAL EMP_TUPLE
    (4) expression -> . ID EQUAL EMP_SET
    (5) expression -> . ID EQUAL STR_CONST
    (6) expression -> . ID EQUAL ID
    (7) expression -> . ID PLUS EQUAL term
    (8) expression -> . factor PLUS factor
    (9) expression -> . expression PLUS term
    (10) expression -> . ID PLUS factor
    (11) expression -> . factor PLUS ID
    (12) expression -> . ID PLUS ID
    (13) expression -> . expression PLUS ID
    (14) expression -> . ID PLUS expression
    (15) expression -> . PRINT PARANOPEN STR_CONST PARANCLOSE
    (16) expression -> . PRINT PARANOPEN ID PARANCLOSE
    (17) expression -> . PRINT PARANOPEN term PARANCLOSE
    (18) expression -> . expression MINUS term
    (19) expression -> . ID MINUS EQUAL term
    (20) expression -> . MINUS term
    (21) expression -> . term MINUS expression
    (22) expression -> . term MINUS term
    (23) expression -> . ID MINUS ID
    (24) expression -> . term MINUS ID
    (25) expression -> . ID MINUS term
    (26) expression -> . term
    (39) expression -> . whileloop
    (40) expression -> . forloop
    (41) expression -> . forloop2
    (42) expression -> . whileloop2
    (91) expression -> . LEVEL2 ID EQUAL expression
    (92) expression -> . LEVEL2 ID EQUAL ID
    (93) expression -> . LEVEL2 ID EQUAL STR_CONST
    (94) expression -> . LEVEL1 ID EQUAL expression
    (95) expression -> . LEVEL1 ID EQUAL ID
    (96) expression -> . LEVEL1 ID EQUAL STR_CONST
    (97) expression -> . LEVEL1 ID EQUAL factor
    (98) expression -> . LEVEL1 ID PLUS EQUAL term
    (99) expression -> . LEVEL1 expression PLUS term
    (100) expression -> . LEVEL1 ID PLUS factor
    (101) expression -> . LEVEL1 factor PLUS ID
    (102) expression -> . LEVEL1 ID PLUS ID
    (103) expression -> . LEVEL1 expression PLUS ID
    (104) expression -> . LEVEL1 ID PLUS expression
    (105) expression -> . LEVEL1 factor PLUS factor
    (106) expression -> . LEVEL2 PRINT PARANOPEN STR_CONST PARANCLOSE
    (107) expression -> . LEVEL2 PRINT PARANOPEN ID PARANCLOSE
    (108) expression -> . LEVEL2 PRINT PARANOPEN term PARANCLOSE
    (109) expression -> . LEVEL1 PRINT PARANOPEN STR_CONST PARANCLOSE
    (110) expression -> . LEVEL1 PRINT PARANOPEN ID PARANCLOSE
    (111) expression -> . LEVEL1 PRINT PARANOPEN term PARANCLOSE
    (112) expression -> .
    (113) expression -> . HASH expression
    (114) expression -> . HASH ID
    (115) expression -> . HASH STR_CONST
    (27) term -> . term MULTIPLY factor
    (28) term -> . ID MULTIPLY ID
    (29) term -> . ID MULTIPLY factor
    (30) term -> . factor MULTIPLY ID
    (31) term -> . ID MULTIPLY term
    (32) term -> . term MULTIPLY ID
    (33) term -> . factor MULTIPLY factor
    (34) term -> . term DIVIDE factor
    (35) term -> . factor
    (62) whileloop -> . WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (63) whileloop -> . WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (64) whileloop -> . WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (65) whileloop -> . WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (66) whileloop -> . WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (67) whileloop -> . WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (68) whileloop -> . WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (69) whileloop -> . WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (70) whileloop -> . WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (71) whileloop -> . WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (72) whileloop -> . WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (73) whileloop -> . WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (74) whileloop -> . WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (75) whileloop -> . WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (76) whileloop -> . WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (77) whileloop -> . WHILE BOOL COLON
    (78) whileloop -> . WHILE STR_CONST COLON
    (79) whileloop -> . WHILE factor COLON
    (80) whileloop -> . WHILE ID COLON
    (86) forloop -> . FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (87) forloop -> . FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (88) forloop -> . FOR ID IN STR_CONST COLON
    (89) forloop -> . FOR ID IN ID COLON
    (90) forloop -> . FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (81) forloop2 -> . LEVEL1 FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (82) forloop2 -> . LEVEL1 FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (83) forloop2 -> . LEVEL1 FOR ID IN STR_CONST COLON
    (84) forloop2 -> . LEVEL1 FOR ID IN ID COLON
    (85) forloop2 -> . LEVEL1 FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (43) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (44) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (45) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (46) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (47) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (48) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (49) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (50) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (51) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (52) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (53) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (54) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (55) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (56) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (57) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (58) whileloop2 -> . LEVEL1 WHILE BOOL COLON
    (59) whileloop2 -> . LEVEL1 WHILE STR_CONST COLON
    (60) whileloop2 -> . LEVEL1 WHILE factor COLON
    (61) whileloop2 -> . LEVEL1 WHILE ID COLON

  ! shift/reduce conflict for MINUS resolved as shift
    STR_CONST       shift and go to state 186
    ID              shift and go to state 184
    EMP_LIST        shift and go to state 57
    EMP_TUPLE       shift and go to state 58
    EMP_SET         shift and go to state 59
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    PARANOPEN       shift and go to state 6
    PRINT           shift and go to state 5
    MINUS           shift and go to state 7
    LEVEL2          shift and go to state 12
    LEVEL1          shift and go to state 13
    PLUS            reduce using rule 112 (expression -> .)
    PARANCLOSE      reduce using rule 112 (expression -> .)
    HASH            shift and go to state 14
    WHILE           shift and go to state 17
    FOR             shift and go to state 18

  ! MINUS           [ reduce using rule 112 (expression -> .) ]

    factor                         shift and go to state 185
    expression                     shift and go to state 56
    term                           shift and go to state 3
    whileloop                      shift and go to state 8
    forloop                        shift and go to state 9
    forloop2                       shift and go to state 10
    whileloop2                     shift and go to state 11

state 157

    (46) whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER . factor PARANCLOSE COLON
    (47) whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER . STR_CONST PARANCLOSE COLON
    (48) whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER . ID PARANCLOSE COLON
    (65) whileloop -> WHILE PARANOPEN ID GREATER . factor PARANCLOSE COLON
    (66) whileloop -> WHILE PARANOPEN ID GREATER . STR_CONST PARANCLOSE COLON
    (67) whileloop -> WHILE PARANOPEN ID GREATER . ID PARANCLOSE COLON
    (36) factor -> . INT
    (37) factor -> . FLOAT
    (38) factor -> . PARANOPEN expression PARANCLOSE

    STR_CONST       shift and go to state 189
    ID              shift and go to state 187
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    PARANOPEN       shift and go to state 6

    factor                         shift and go to state 188

state 158

    (49) whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ . factor PARANCLOSE COLON
    (50) whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ . STR_CONST PARANCLOSE COLON
    (51) whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ . ID PARANCLOSE COLON
    (68) whileloop -> WHILE PARANOPEN ID GREATEREQ . factor PARANCLOSE COLON
    (69) whileloop -> WHILE PARANOPEN ID GREATEREQ . STR_CONST PARANCLOSE COLON
    (70) whileloop -> WHILE PARANOPEN ID GREATEREQ . ID PARANCLOSE COLON
    (36) factor -> . INT
    (37) factor -> . FLOAT
    (38) factor -> . PARANOPEN expression PARANCLOSE

    STR_CONST       shift and go to state 192
    ID              shift and go to state 190
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    PARANOPEN       shift and go to state 6

    factor                         shift and go to state 191

state 159

    (52) whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER . factor PARANCLOSE COLON
    (53) whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER . STR_CONST PARANCLOSE COLON
    (54) whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER . ID PARANCLOSE COLON
    (71) whileloop -> WHILE PARANOPEN ID LESSER . factor PARANCLOSE COLON
    (72) whileloop -> WHILE PARANOPEN ID LESSER . STR_CONST PARANCLOSE COLON
    (73) whileloop -> WHILE PARANOPEN ID LESSER . ID PARANCLOSE COLON
    (36) factor -> . INT
    (37) factor -> . FLOAT
    (38) factor -> . PARANOPEN expression PARANCLOSE

    STR_CONST       shift and go to state 195
    ID              shift and go to state 193
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    PARANOPEN       shift and go to state 6

    factor                         shift and go to state 194

state 160

    (55) whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSEREQ . factor PARANCLOSE COLON
    (56) whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSEREQ . STR_CONST PARANCLOSE COLON
    (57) whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSEREQ . ID PARANCLOSE COLON
    (74) whileloop -> WHILE PARANOPEN ID LESSEREQ . factor PARANCLOSE COLON
    (75) whileloop -> WHILE PARANOPEN ID LESSEREQ . STR_CONST PARANCLOSE COLON
    (76) whileloop -> WHILE PARANOPEN ID LESSEREQ . ID PARANCLOSE COLON
    (36) factor -> . INT
    (37) factor -> . FLOAT
    (38) factor -> . PARANOPEN expression PARANCLOSE

    STR_CONST       shift and go to state 198
    ID              shift and go to state 196
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    PARANOPEN       shift and go to state 6

    factor                         shift and go to state 197

state 161

    (64) whileloop -> WHILE PARANOPEN ID EQUAL ID . PARANCLOSE COLON
    (6) expression -> ID EQUAL ID .
    (1) expression -> ID . EQUAL expression
    (2) expression -> ID . EQUAL EMP_LIST
    (3) expression -> ID . EQUAL EMP_TUPLE
    (4) expression -> ID . EQUAL EMP_SET
    (5) expression -> ID . EQUAL STR_CONST
    (6) expression -> ID . EQUAL ID
    (7) expression -> ID . PLUS EQUAL term
    (10) expression -> ID . PLUS factor
    (12) expression -> ID . PLUS ID
    (14) expression -> ID . PLUS expression
    (19) expression -> ID . MINUS EQUAL term
    (23) expression -> ID . MINUS ID
    (25) expression -> ID . MINUS term
    (28) term -> ID . MULTIPLY ID
    (29) term -> ID . MULTIPLY factor
    (31) term -> ID . MULTIPLY term

  ! shift/reduce conflict for PARANCLOSE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    PARANCLOSE      shift and go to state 199
    EQUAL           shift and go to state 21
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    MULTIPLY        shift and go to state 24

  ! PARANCLOSE      [ reduce using rule 6 (expression -> ID EQUAL ID .) ]
  ! PLUS            [ reduce using rule 6 (expression -> ID EQUAL ID .) ]
  ! MINUS           [ reduce using rule 6 (expression -> ID EQUAL ID .) ]


state 162

    (62) whileloop -> WHILE PARANOPEN ID EQUAL factor . PARANCLOSE COLON
    (8) expression -> factor . PLUS factor
    (11) expression -> factor . PLUS ID
    (30) term -> factor . MULTIPLY ID
    (33) term -> factor . MULTIPLY factor
    (35) term -> factor .

  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for PARANCLOSE resolved as shift
    PARANCLOSE      shift and go to state 200
    PLUS            shift and go to state 28
    MULTIPLY        shift and go to state 29
    MINUS           reduce using rule 35 (term -> factor .)
    DIVIDE          reduce using rule 35 (term -> factor .)

  ! MULTIPLY        [ reduce using rule 35 (term -> factor .) ]
  ! PLUS            [ reduce using rule 35 (term -> factor .) ]
  ! PARANCLOSE      [ reduce using rule 35 (term -> factor .) ]


state 163

    (63) whileloop -> WHILE PARANOPEN ID EQUAL STR_CONST . PARANCLOSE COLON
    (5) expression -> ID EQUAL STR_CONST .

  ! shift/reduce conflict for PARANCLOSE resolved as shift
    PARANCLOSE      shift and go to state 201
    PLUS            reduce using rule 5 (expression -> ID EQUAL STR_CONST .)
    MINUS           reduce using rule 5 (expression -> ID EQUAL STR_CONST .)

  ! PARANCLOSE      [ reduce using rule 5 (expression -> ID EQUAL STR_CONST .) ]


state 164

    (67) whileloop -> WHILE PARANOPEN ID GREATER ID . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 202


state 165

    (65) whileloop -> WHILE PARANOPEN ID GREATER factor . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 203


state 166

    (66) whileloop -> WHILE PARANOPEN ID GREATER STR_CONST . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 204


state 167

    (70) whileloop -> WHILE PARANOPEN ID GREATEREQ ID . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 205


state 168

    (68) whileloop -> WHILE PARANOPEN ID GREATEREQ factor . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 206


state 169

    (69) whileloop -> WHILE PARANOPEN ID GREATEREQ STR_CONST . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 207


state 170

    (73) whileloop -> WHILE PARANOPEN ID LESSER ID . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 208


state 171

    (71) whileloop -> WHILE PARANOPEN ID LESSER factor . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 209


state 172

    (72) whileloop -> WHILE PARANOPEN ID LESSER STR_CONST . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 210


state 173

    (76) whileloop -> WHILE PARANOPEN ID LESSEREQ ID . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 211


state 174

    (74) whileloop -> WHILE PARANOPEN ID LESSEREQ factor . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 212


state 175

    (75) whileloop -> WHILE PARANOPEN ID LESSEREQ STR_CONST . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 213


state 176

    (89) forloop -> FOR ID IN ID COLON .

    PLUS            reduce using rule 89 (forloop -> FOR ID IN ID COLON .)
    MINUS           reduce using rule 89 (forloop -> FOR ID IN ID COLON .)
    $end            reduce using rule 89 (forloop -> FOR ID IN ID COLON .)
    PARANCLOSE      reduce using rule 89 (forloop -> FOR ID IN ID COLON .)


state 177

    (86) forloop -> FOR ID IN RANGE PARANOPEN . term PARANCLOSE COLON
    (87) forloop -> FOR ID IN RANGE PARANOPEN . LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (27) term -> . term MULTIPLY factor
    (28) term -> . ID MULTIPLY ID
    (29) term -> . ID MULTIPLY factor
    (30) term -> . factor MULTIPLY ID
    (31) term -> . ID MULTIPLY term
    (32) term -> . term MULTIPLY ID
    (33) term -> . factor MULTIPLY factor
    (34) term -> . term DIVIDE factor
    (35) term -> . factor
    (36) factor -> . INT
    (37) factor -> . FLOAT
    (38) factor -> . PARANOPEN expression PARANCLOSE

    LEN             shift and go to state 215
    ID              shift and go to state 34
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    PARANOPEN       shift and go to state 6

    term                           shift and go to state 214
    factor                         shift and go to state 33

state 178

    (90) forloop -> FOR ID IN PARANOPEN STR_CONST . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 216


state 179

    (88) forloop -> FOR ID IN STR_CONST COLON .

    PLUS            reduce using rule 88 (forloop -> FOR ID IN STR_CONST COLON .)
    MINUS           reduce using rule 88 (forloop -> FOR ID IN STR_CONST COLON .)
    $end            reduce using rule 88 (forloop -> FOR ID IN STR_CONST COLON .)
    PARANCLOSE      reduce using rule 88 (forloop -> FOR ID IN STR_CONST COLON .)


state 180

    (84) forloop2 -> LEVEL1 FOR ID IN ID COLON .
    (89) forloop -> FOR ID IN ID COLON .

  ! reduce/reduce conflict for PLUS resolved using rule 84 (forloop2 -> LEVEL1 FOR ID IN ID COLON .)
  ! reduce/reduce conflict for MINUS resolved using rule 84 (forloop2 -> LEVEL1 FOR ID IN ID COLON .)
    PLUS            reduce using rule 84 (forloop2 -> LEVEL1 FOR ID IN ID COLON .)
    MINUS           reduce using rule 84 (forloop2 -> LEVEL1 FOR ID IN ID COLON .)
    $end            reduce using rule 84 (forloop2 -> LEVEL1 FOR ID IN ID COLON .)
    PARANCLOSE      reduce using rule 84 (forloop2 -> LEVEL1 FOR ID IN ID COLON .)

  ! PLUS            [ reduce using rule 89 (forloop -> FOR ID IN ID COLON .) ]
  ! MINUS           [ reduce using rule 89 (forloop -> FOR ID IN ID COLON .) ]


state 181

    (81) forloop2 -> LEVEL1 FOR ID IN RANGE PARANOPEN . term PARANCLOSE COLON
    (82) forloop2 -> LEVEL1 FOR ID IN RANGE PARANOPEN . LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (86) forloop -> FOR ID IN RANGE PARANOPEN . term PARANCLOSE COLON
    (87) forloop -> FOR ID IN RANGE PARANOPEN . LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (27) term -> . term MULTIPLY factor
    (28) term -> . ID MULTIPLY ID
    (29) term -> . ID MULTIPLY factor
    (30) term -> . factor MULTIPLY ID
    (31) term -> . ID MULTIPLY term
    (32) term -> . term MULTIPLY ID
    (33) term -> . factor MULTIPLY factor
    (34) term -> . term DIVIDE factor
    (35) term -> . factor
    (36) factor -> . INT
    (37) factor -> . FLOAT
    (38) factor -> . PARANOPEN expression PARANCLOSE

    LEN             shift and go to state 218
    ID              shift and go to state 34
    INT             shift and go to state 15
    FLOAT           shift and go to state 16
    PARANOPEN       shift and go to state 6

    term                           shift and go to state 217
    factor                         shift and go to state 33

state 182

    (85) forloop2 -> LEVEL1 FOR ID IN PARANOPEN STR_CONST . PARANCLOSE COLON
    (90) forloop -> FOR ID IN PARANOPEN STR_CONST . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 219


state 183

    (83) forloop2 -> LEVEL1 FOR ID IN STR_CONST COLON .
    (88) forloop -> FOR ID IN STR_CONST COLON .

  ! reduce/reduce conflict for PLUS resolved using rule 83 (forloop2 -> LEVEL1 FOR ID IN STR_CONST COLON .)
  ! reduce/reduce conflict for MINUS resolved using rule 83 (forloop2 -> LEVEL1 FOR ID IN STR_CONST COLON .)
    PLUS            reduce using rule 83 (forloop2 -> LEVEL1 FOR ID IN STR_CONST COLON .)
    MINUS           reduce using rule 83 (forloop2 -> LEVEL1 FOR ID IN STR_CONST COLON .)
    $end            reduce using rule 83 (forloop2 -> LEVEL1 FOR ID IN STR_CONST COLON .)
    PARANCLOSE      reduce using rule 83 (forloop2 -> LEVEL1 FOR ID IN STR_CONST COLON .)

  ! PLUS            [ reduce using rule 88 (forloop -> FOR ID IN STR_CONST COLON .) ]
  ! MINUS           [ reduce using rule 88 (forloop -> FOR ID IN STR_CONST COLON .) ]


state 184

    (45) whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL ID . PARANCLOSE COLON
    (64) whileloop -> WHILE PARANOPEN ID EQUAL ID . PARANCLOSE COLON
    (6) expression -> ID EQUAL ID .
    (1) expression -> ID . EQUAL expression
    (2) expression -> ID . EQUAL EMP_LIST
    (3) expression -> ID . EQUAL EMP_TUPLE
    (4) expression -> ID . EQUAL EMP_SET
    (5) expression -> ID . EQUAL STR_CONST
    (6) expression -> ID . EQUAL ID
    (7) expression -> ID . PLUS EQUAL term
    (10) expression -> ID . PLUS factor
    (12) expression -> ID . PLUS ID
    (14) expression -> ID . PLUS expression
    (19) expression -> ID . MINUS EQUAL term
    (23) expression -> ID . MINUS ID
    (25) expression -> ID . MINUS term
    (28) term -> ID . MULTIPLY ID
    (29) term -> ID . MULTIPLY factor
    (31) term -> ID . MULTIPLY term

  ! shift/reduce conflict for PARANCLOSE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    PARANCLOSE      shift and go to state 220
    EQUAL           shift and go to state 21
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23
    MULTIPLY        shift and go to state 24

  ! PARANCLOSE      [ reduce using rule 6 (expression -> ID EQUAL ID .) ]
  ! PLUS            [ reduce using rule 6 (expression -> ID EQUAL ID .) ]
  ! MINUS           [ reduce using rule 6 (expression -> ID EQUAL ID .) ]


state 185

    (43) whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL factor . PARANCLOSE COLON
    (62) whileloop -> WHILE PARANOPEN ID EQUAL factor . PARANCLOSE COLON
    (8) expression -> factor . PLUS factor
    (11) expression -> factor . PLUS ID
    (30) term -> factor . MULTIPLY ID
    (33) term -> factor . MULTIPLY factor
    (35) term -> factor .

  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for PARANCLOSE resolved as shift
    PARANCLOSE      shift and go to state 221
    PLUS            shift and go to state 28
    MULTIPLY        shift and go to state 29
    MINUS           reduce using rule 35 (term -> factor .)
    DIVIDE          reduce using rule 35 (term -> factor .)

  ! MULTIPLY        [ reduce using rule 35 (term -> factor .) ]
  ! PLUS            [ reduce using rule 35 (term -> factor .) ]
  ! PARANCLOSE      [ reduce using rule 35 (term -> factor .) ]


state 186

    (44) whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL STR_CONST . PARANCLOSE COLON
    (63) whileloop -> WHILE PARANOPEN ID EQUAL STR_CONST . PARANCLOSE COLON
    (5) expression -> ID EQUAL STR_CONST .

  ! shift/reduce conflict for PARANCLOSE resolved as shift
    PARANCLOSE      shift and go to state 222
    PLUS            reduce using rule 5 (expression -> ID EQUAL STR_CONST .)
    MINUS           reduce using rule 5 (expression -> ID EQUAL STR_CONST .)

  ! PARANCLOSE      [ reduce using rule 5 (expression -> ID EQUAL STR_CONST .) ]


state 187

    (48) whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER ID . PARANCLOSE COLON
    (67) whileloop -> WHILE PARANOPEN ID GREATER ID . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 223


state 188

    (46) whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER factor . PARANCLOSE COLON
    (65) whileloop -> WHILE PARANOPEN ID GREATER factor . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 224


state 189

    (47) whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER STR_CONST . PARANCLOSE COLON
    (66) whileloop -> WHILE PARANOPEN ID GREATER STR_CONST . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 225


state 190

    (51) whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ ID . PARANCLOSE COLON
    (70) whileloop -> WHILE PARANOPEN ID GREATEREQ ID . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 226


state 191

    (49) whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ factor . PARANCLOSE COLON
    (68) whileloop -> WHILE PARANOPEN ID GREATEREQ factor . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 227


state 192

    (50) whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ STR_CONST . PARANCLOSE COLON
    (69) whileloop -> WHILE PARANOPEN ID GREATEREQ STR_CONST . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 228


state 193

    (54) whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER ID . PARANCLOSE COLON
    (73) whileloop -> WHILE PARANOPEN ID LESSER ID . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 229


state 194

    (52) whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER factor . PARANCLOSE COLON
    (71) whileloop -> WHILE PARANOPEN ID LESSER factor . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 230


state 195

    (53) whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER STR_CONST . PARANCLOSE COLON
    (72) whileloop -> WHILE PARANOPEN ID LESSER STR_CONST . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 231


state 196

    (57) whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSEREQ ID . PARANCLOSE COLON
    (76) whileloop -> WHILE PARANOPEN ID LESSEREQ ID . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 232


state 197

    (55) whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSEREQ factor . PARANCLOSE COLON
    (74) whileloop -> WHILE PARANOPEN ID LESSEREQ factor . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 233


state 198

    (56) whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSEREQ STR_CONST . PARANCLOSE COLON
    (75) whileloop -> WHILE PARANOPEN ID LESSEREQ STR_CONST . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 234


state 199

    (64) whileloop -> WHILE PARANOPEN ID EQUAL ID PARANCLOSE . COLON

    COLON           shift and go to state 235


state 200

    (62) whileloop -> WHILE PARANOPEN ID EQUAL factor PARANCLOSE . COLON

    COLON           shift and go to state 236


state 201

    (63) whileloop -> WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE . COLON

    COLON           shift and go to state 237


state 202

    (67) whileloop -> WHILE PARANOPEN ID GREATER ID PARANCLOSE . COLON

    COLON           shift and go to state 238


state 203

    (65) whileloop -> WHILE PARANOPEN ID GREATER factor PARANCLOSE . COLON

    COLON           shift and go to state 239


state 204

    (66) whileloop -> WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE . COLON

    COLON           shift and go to state 240


state 205

    (70) whileloop -> WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE . COLON

    COLON           shift and go to state 241


state 206

    (68) whileloop -> WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE . COLON

    COLON           shift and go to state 242


state 207

    (69) whileloop -> WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE . COLON

    COLON           shift and go to state 243


state 208

    (73) whileloop -> WHILE PARANOPEN ID LESSER ID PARANCLOSE . COLON

    COLON           shift and go to state 244


state 209

    (71) whileloop -> WHILE PARANOPEN ID LESSER factor PARANCLOSE . COLON

    COLON           shift and go to state 245


state 210

    (72) whileloop -> WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE . COLON

    COLON           shift and go to state 246


state 211

    (76) whileloop -> WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE . COLON

    COLON           shift and go to state 247


state 212

    (74) whileloop -> WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE . COLON

    COLON           shift and go to state 248


state 213

    (75) whileloop -> WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE . COLON

    COLON           shift and go to state 249


state 214

    (86) forloop -> FOR ID IN RANGE PARANOPEN term . PARANCLOSE COLON
    (27) term -> term . MULTIPLY factor
    (32) term -> term . MULTIPLY ID
    (34) term -> term . DIVIDE factor

    PARANCLOSE      shift and go to state 250
    MULTIPLY        shift and go to state 26
    DIVIDE          shift and go to state 27


state 215

    (87) forloop -> FOR ID IN RANGE PARANOPEN LEN . PARANOPEN ID PARANCLOSE PARANCLOSE COLON

    PARANOPEN       shift and go to state 251


state 216

    (90) forloop -> FOR ID IN PARANOPEN STR_CONST PARANCLOSE . COLON

    COLON           shift and go to state 252


state 217

    (81) forloop2 -> LEVEL1 FOR ID IN RANGE PARANOPEN term . PARANCLOSE COLON
    (86) forloop -> FOR ID IN RANGE PARANOPEN term . PARANCLOSE COLON
    (27) term -> term . MULTIPLY factor
    (32) term -> term . MULTIPLY ID
    (34) term -> term . DIVIDE factor

    PARANCLOSE      shift and go to state 253
    MULTIPLY        shift and go to state 26
    DIVIDE          shift and go to state 27


state 218

    (82) forloop2 -> LEVEL1 FOR ID IN RANGE PARANOPEN LEN . PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (87) forloop -> FOR ID IN RANGE PARANOPEN LEN . PARANOPEN ID PARANCLOSE PARANCLOSE COLON

    PARANOPEN       shift and go to state 254


state 219

    (85) forloop2 -> LEVEL1 FOR ID IN PARANOPEN STR_CONST PARANCLOSE . COLON
    (90) forloop -> FOR ID IN PARANOPEN STR_CONST PARANCLOSE . COLON

    COLON           shift and go to state 255


state 220

    (45) whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL ID PARANCLOSE . COLON
    (64) whileloop -> WHILE PARANOPEN ID EQUAL ID PARANCLOSE . COLON

    COLON           shift and go to state 256


state 221

    (43) whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL factor PARANCLOSE . COLON
    (62) whileloop -> WHILE PARANOPEN ID EQUAL factor PARANCLOSE . COLON

    COLON           shift and go to state 257


state 222

    (44) whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE . COLON
    (63) whileloop -> WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE . COLON

    COLON           shift and go to state 258


state 223

    (48) whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER ID PARANCLOSE . COLON
    (67) whileloop -> WHILE PARANOPEN ID GREATER ID PARANCLOSE . COLON

    COLON           shift and go to state 259


state 224

    (46) whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER factor PARANCLOSE . COLON
    (65) whileloop -> WHILE PARANOPEN ID GREATER factor PARANCLOSE . COLON

    COLON           shift and go to state 260


state 225

    (47) whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE . COLON
    (66) whileloop -> WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE . COLON

    COLON           shift and go to state 261


state 226

    (51) whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE . COLON
    (70) whileloop -> WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE . COLON

    COLON           shift and go to state 262


state 227

    (49) whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE . COLON
    (68) whileloop -> WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE . COLON

    COLON           shift and go to state 263


state 228

    (50) whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE . COLON
    (69) whileloop -> WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE . COLON

    COLON           shift and go to state 264


state 229

    (54) whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER ID PARANCLOSE . COLON
    (73) whileloop -> WHILE PARANOPEN ID LESSER ID PARANCLOSE . COLON

    COLON           shift and go to state 265


state 230

    (52) whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER factor PARANCLOSE . COLON
    (71) whileloop -> WHILE PARANOPEN ID LESSER factor PARANCLOSE . COLON

    COLON           shift and go to state 266


state 231

    (53) whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE . COLON
    (72) whileloop -> WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE . COLON

    COLON           shift and go to state 267


state 232

    (57) whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE . COLON
    (76) whileloop -> WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE . COLON

    COLON           shift and go to state 268


state 233

    (55) whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE . COLON
    (74) whileloop -> WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE . COLON

    COLON           shift and go to state 269


state 234

    (56) whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE . COLON
    (75) whileloop -> WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE . COLON

    COLON           shift and go to state 270


state 235

    (64) whileloop -> WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON .

    PLUS            reduce using rule 64 (whileloop -> WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON .)
    MINUS           reduce using rule 64 (whileloop -> WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON .)
    $end            reduce using rule 64 (whileloop -> WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 64 (whileloop -> WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON .)


state 236

    (62) whileloop -> WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON .

    PLUS            reduce using rule 62 (whileloop -> WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON .)
    MINUS           reduce using rule 62 (whileloop -> WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON .)
    $end            reduce using rule 62 (whileloop -> WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 62 (whileloop -> WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON .)


state 237

    (63) whileloop -> WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON .

    PLUS            reduce using rule 63 (whileloop -> WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON .)
    MINUS           reduce using rule 63 (whileloop -> WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON .)
    $end            reduce using rule 63 (whileloop -> WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 63 (whileloop -> WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON .)


state 238

    (67) whileloop -> WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON .

    PLUS            reduce using rule 67 (whileloop -> WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON .)
    MINUS           reduce using rule 67 (whileloop -> WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON .)
    $end            reduce using rule 67 (whileloop -> WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 67 (whileloop -> WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON .)


state 239

    (65) whileloop -> WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON .

    PLUS            reduce using rule 65 (whileloop -> WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON .)
    MINUS           reduce using rule 65 (whileloop -> WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON .)
    $end            reduce using rule 65 (whileloop -> WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 65 (whileloop -> WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON .)


state 240

    (66) whileloop -> WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON .

    PLUS            reduce using rule 66 (whileloop -> WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON .)
    MINUS           reduce using rule 66 (whileloop -> WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON .)
    $end            reduce using rule 66 (whileloop -> WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 66 (whileloop -> WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON .)


state 241

    (70) whileloop -> WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON .

    PLUS            reduce using rule 70 (whileloop -> WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON .)
    MINUS           reduce using rule 70 (whileloop -> WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON .)
    $end            reduce using rule 70 (whileloop -> WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 70 (whileloop -> WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON .)


state 242

    (68) whileloop -> WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON .

    PLUS            reduce using rule 68 (whileloop -> WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON .)
    MINUS           reduce using rule 68 (whileloop -> WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON .)
    $end            reduce using rule 68 (whileloop -> WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 68 (whileloop -> WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON .)


state 243

    (69) whileloop -> WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON .

    PLUS            reduce using rule 69 (whileloop -> WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON .)
    MINUS           reduce using rule 69 (whileloop -> WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON .)
    $end            reduce using rule 69 (whileloop -> WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 69 (whileloop -> WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON .)


state 244

    (73) whileloop -> WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON .

    PLUS            reduce using rule 73 (whileloop -> WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON .)
    MINUS           reduce using rule 73 (whileloop -> WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON .)
    $end            reduce using rule 73 (whileloop -> WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 73 (whileloop -> WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON .)


state 245

    (71) whileloop -> WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON .

    PLUS            reduce using rule 71 (whileloop -> WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON .)
    MINUS           reduce using rule 71 (whileloop -> WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON .)
    $end            reduce using rule 71 (whileloop -> WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 71 (whileloop -> WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON .)


state 246

    (72) whileloop -> WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON .

    PLUS            reduce using rule 72 (whileloop -> WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON .)
    MINUS           reduce using rule 72 (whileloop -> WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON .)
    $end            reduce using rule 72 (whileloop -> WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 72 (whileloop -> WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON .)


state 247

    (76) whileloop -> WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON .

    PLUS            reduce using rule 76 (whileloop -> WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON .)
    MINUS           reduce using rule 76 (whileloop -> WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON .)
    $end            reduce using rule 76 (whileloop -> WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 76 (whileloop -> WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON .)


state 248

    (74) whileloop -> WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON .

    PLUS            reduce using rule 74 (whileloop -> WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON .)
    MINUS           reduce using rule 74 (whileloop -> WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON .)
    $end            reduce using rule 74 (whileloop -> WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 74 (whileloop -> WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON .)


state 249

    (75) whileloop -> WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON .

    PLUS            reduce using rule 75 (whileloop -> WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON .)
    MINUS           reduce using rule 75 (whileloop -> WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON .)
    $end            reduce using rule 75 (whileloop -> WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 75 (whileloop -> WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON .)


state 250

    (86) forloop -> FOR ID IN RANGE PARANOPEN term PARANCLOSE . COLON

    COLON           shift and go to state 271


state 251

    (87) forloop -> FOR ID IN RANGE PARANOPEN LEN PARANOPEN . ID PARANCLOSE PARANCLOSE COLON

    ID              shift and go to state 272


state 252

    (90) forloop -> FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON .

    PLUS            reduce using rule 90 (forloop -> FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON .)
    MINUS           reduce using rule 90 (forloop -> FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON .)
    $end            reduce using rule 90 (forloop -> FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 90 (forloop -> FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON .)


state 253

    (81) forloop2 -> LEVEL1 FOR ID IN RANGE PARANOPEN term PARANCLOSE . COLON
    (86) forloop -> FOR ID IN RANGE PARANOPEN term PARANCLOSE . COLON

    COLON           shift and go to state 273


state 254

    (82) forloop2 -> LEVEL1 FOR ID IN RANGE PARANOPEN LEN PARANOPEN . ID PARANCLOSE PARANCLOSE COLON
    (87) forloop -> FOR ID IN RANGE PARANOPEN LEN PARANOPEN . ID PARANCLOSE PARANCLOSE COLON

    ID              shift and go to state 274


state 255

    (85) forloop2 -> LEVEL1 FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON .
    (90) forloop -> FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON .

  ! reduce/reduce conflict for PLUS resolved using rule 85 (forloop2 -> LEVEL1 FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON .)
  ! reduce/reduce conflict for MINUS resolved using rule 85 (forloop2 -> LEVEL1 FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON .)
    PLUS            reduce using rule 85 (forloop2 -> LEVEL1 FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON .)
    MINUS           reduce using rule 85 (forloop2 -> LEVEL1 FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON .)
    $end            reduce using rule 85 (forloop2 -> LEVEL1 FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 85 (forloop2 -> LEVEL1 FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON .)

  ! PLUS            [ reduce using rule 90 (forloop -> FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON .) ]
  ! MINUS           [ reduce using rule 90 (forloop -> FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON .) ]


state 256

    (45) whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON .
    (64) whileloop -> WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON .

  ! reduce/reduce conflict for PLUS resolved using rule 45 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON .)
  ! reduce/reduce conflict for MINUS resolved using rule 45 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON .)
    PLUS            reduce using rule 45 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON .)
    MINUS           reduce using rule 45 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON .)
    $end            reduce using rule 45 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 45 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON .)

  ! PLUS            [ reduce using rule 64 (whileloop -> WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON .) ]
  ! MINUS           [ reduce using rule 64 (whileloop -> WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON .) ]


state 257

    (43) whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON .
    (62) whileloop -> WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON .

  ! reduce/reduce conflict for PLUS resolved using rule 43 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON .)
  ! reduce/reduce conflict for MINUS resolved using rule 43 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON .)
    PLUS            reduce using rule 43 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON .)
    MINUS           reduce using rule 43 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON .)
    $end            reduce using rule 43 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 43 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON .)

  ! PLUS            [ reduce using rule 62 (whileloop -> WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON .) ]
  ! MINUS           [ reduce using rule 62 (whileloop -> WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON .) ]


state 258

    (44) whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON .
    (63) whileloop -> WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON .

  ! reduce/reduce conflict for PLUS resolved using rule 44 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON .)
  ! reduce/reduce conflict for MINUS resolved using rule 44 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON .)
    PLUS            reduce using rule 44 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON .)
    MINUS           reduce using rule 44 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON .)
    $end            reduce using rule 44 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 44 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON .)

  ! PLUS            [ reduce using rule 63 (whileloop -> WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON .) ]
  ! MINUS           [ reduce using rule 63 (whileloop -> WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON .) ]


state 259

    (48) whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON .
    (67) whileloop -> WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON .

  ! reduce/reduce conflict for PLUS resolved using rule 48 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON .)
  ! reduce/reduce conflict for MINUS resolved using rule 48 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON .)
    PLUS            reduce using rule 48 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON .)
    MINUS           reduce using rule 48 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON .)
    $end            reduce using rule 48 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 48 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON .)

  ! PLUS            [ reduce using rule 67 (whileloop -> WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON .) ]
  ! MINUS           [ reduce using rule 67 (whileloop -> WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON .) ]


state 260

    (46) whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON .
    (65) whileloop -> WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON .

  ! reduce/reduce conflict for PLUS resolved using rule 46 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON .)
  ! reduce/reduce conflict for MINUS resolved using rule 46 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON .)
    PLUS            reduce using rule 46 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON .)
    MINUS           reduce using rule 46 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON .)
    $end            reduce using rule 46 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 46 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON .)

  ! PLUS            [ reduce using rule 65 (whileloop -> WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON .) ]
  ! MINUS           [ reduce using rule 65 (whileloop -> WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON .) ]


state 261

    (47) whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON .
    (66) whileloop -> WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON .

  ! reduce/reduce conflict for PLUS resolved using rule 47 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON .)
  ! reduce/reduce conflict for MINUS resolved using rule 47 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON .)
    PLUS            reduce using rule 47 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON .)
    MINUS           reduce using rule 47 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON .)
    $end            reduce using rule 47 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 47 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON .)

  ! PLUS            [ reduce using rule 66 (whileloop -> WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON .) ]
  ! MINUS           [ reduce using rule 66 (whileloop -> WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON .) ]


state 262

    (51) whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON .
    (70) whileloop -> WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON .

  ! reduce/reduce conflict for PLUS resolved using rule 51 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON .)
  ! reduce/reduce conflict for MINUS resolved using rule 51 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON .)
    PLUS            reduce using rule 51 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON .)
    MINUS           reduce using rule 51 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON .)
    $end            reduce using rule 51 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 51 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON .)

  ! PLUS            [ reduce using rule 70 (whileloop -> WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON .) ]
  ! MINUS           [ reduce using rule 70 (whileloop -> WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON .) ]


state 263

    (49) whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON .
    (68) whileloop -> WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON .

  ! reduce/reduce conflict for PLUS resolved using rule 49 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON .)
  ! reduce/reduce conflict for MINUS resolved using rule 49 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON .)
    PLUS            reduce using rule 49 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON .)
    MINUS           reduce using rule 49 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON .)
    $end            reduce using rule 49 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 49 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON .)

  ! PLUS            [ reduce using rule 68 (whileloop -> WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON .) ]
  ! MINUS           [ reduce using rule 68 (whileloop -> WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON .) ]


state 264

    (50) whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON .
    (69) whileloop -> WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON .

  ! reduce/reduce conflict for PLUS resolved using rule 50 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON .)
  ! reduce/reduce conflict for MINUS resolved using rule 50 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON .)
    PLUS            reduce using rule 50 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON .)
    MINUS           reduce using rule 50 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON .)
    $end            reduce using rule 50 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 50 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON .)

  ! PLUS            [ reduce using rule 69 (whileloop -> WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON .) ]
  ! MINUS           [ reduce using rule 69 (whileloop -> WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON .) ]


state 265

    (54) whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON .
    (73) whileloop -> WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON .

  ! reduce/reduce conflict for PLUS resolved using rule 54 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON .)
  ! reduce/reduce conflict for MINUS resolved using rule 54 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON .)
    PLUS            reduce using rule 54 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON .)
    MINUS           reduce using rule 54 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON .)
    $end            reduce using rule 54 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 54 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON .)

  ! PLUS            [ reduce using rule 73 (whileloop -> WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON .) ]
  ! MINUS           [ reduce using rule 73 (whileloop -> WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON .) ]


state 266

    (52) whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON .
    (71) whileloop -> WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON .

  ! reduce/reduce conflict for PLUS resolved using rule 52 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON .)
  ! reduce/reduce conflict for MINUS resolved using rule 52 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON .)
    PLUS            reduce using rule 52 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON .)
    MINUS           reduce using rule 52 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON .)
    $end            reduce using rule 52 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 52 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON .)

  ! PLUS            [ reduce using rule 71 (whileloop -> WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON .) ]
  ! MINUS           [ reduce using rule 71 (whileloop -> WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON .) ]


state 267

    (53) whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON .
    (72) whileloop -> WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON .

  ! reduce/reduce conflict for PLUS resolved using rule 53 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON .)
  ! reduce/reduce conflict for MINUS resolved using rule 53 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON .)
    PLUS            reduce using rule 53 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON .)
    MINUS           reduce using rule 53 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON .)
    $end            reduce using rule 53 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 53 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON .)

  ! PLUS            [ reduce using rule 72 (whileloop -> WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON .) ]
  ! MINUS           [ reduce using rule 72 (whileloop -> WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON .) ]


state 268

    (57) whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON .
    (76) whileloop -> WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON .

  ! reduce/reduce conflict for PLUS resolved using rule 57 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON .)
  ! reduce/reduce conflict for MINUS resolved using rule 57 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON .)
    PLUS            reduce using rule 57 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON .)
    MINUS           reduce using rule 57 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON .)
    $end            reduce using rule 57 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 57 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON .)

  ! PLUS            [ reduce using rule 76 (whileloop -> WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON .) ]
  ! MINUS           [ reduce using rule 76 (whileloop -> WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON .) ]


state 269

    (55) whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON .
    (74) whileloop -> WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON .

  ! reduce/reduce conflict for PLUS resolved using rule 55 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON .)
  ! reduce/reduce conflict for MINUS resolved using rule 55 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON .)
    PLUS            reduce using rule 55 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON .)
    MINUS           reduce using rule 55 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON .)
    $end            reduce using rule 55 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 55 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON .)

  ! PLUS            [ reduce using rule 74 (whileloop -> WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON .) ]
  ! MINUS           [ reduce using rule 74 (whileloop -> WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON .) ]


state 270

    (56) whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON .
    (75) whileloop -> WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON .

  ! reduce/reduce conflict for PLUS resolved using rule 56 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON .)
  ! reduce/reduce conflict for MINUS resolved using rule 56 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON .)
    PLUS            reduce using rule 56 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON .)
    MINUS           reduce using rule 56 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON .)
    $end            reduce using rule 56 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 56 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON .)

  ! PLUS            [ reduce using rule 75 (whileloop -> WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON .) ]
  ! MINUS           [ reduce using rule 75 (whileloop -> WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON .) ]


state 271

    (86) forloop -> FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON .

    PLUS            reduce using rule 86 (forloop -> FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON .)
    MINUS           reduce using rule 86 (forloop -> FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON .)
    $end            reduce using rule 86 (forloop -> FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 86 (forloop -> FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON .)


state 272

    (87) forloop -> FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID . PARANCLOSE PARANCLOSE COLON

    PARANCLOSE      shift and go to state 275


state 273

    (81) forloop2 -> LEVEL1 FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON .
    (86) forloop -> FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON .

  ! reduce/reduce conflict for PLUS resolved using rule 81 (forloop2 -> LEVEL1 FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON .)
  ! reduce/reduce conflict for MINUS resolved using rule 81 (forloop2 -> LEVEL1 FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON .)
    PLUS            reduce using rule 81 (forloop2 -> LEVEL1 FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON .)
    MINUS           reduce using rule 81 (forloop2 -> LEVEL1 FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON .)
    $end            reduce using rule 81 (forloop2 -> LEVEL1 FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 81 (forloop2 -> LEVEL1 FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON .)

  ! PLUS            [ reduce using rule 86 (forloop -> FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON .) ]
  ! MINUS           [ reduce using rule 86 (forloop -> FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON .) ]


state 274

    (82) forloop2 -> LEVEL1 FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID . PARANCLOSE PARANCLOSE COLON
    (87) forloop -> FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID . PARANCLOSE PARANCLOSE COLON

    PARANCLOSE      shift and go to state 276


state 275

    (87) forloop -> FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 277


state 276

    (82) forloop2 -> LEVEL1 FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE . PARANCLOSE COLON
    (87) forloop -> FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 278


state 277

    (87) forloop -> FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE . COLON

    COLON           shift and go to state 279


state 278

    (82) forloop2 -> LEVEL1 FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE . COLON
    (87) forloop -> FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE . COLON

    COLON           shift and go to state 280


state 279

    (87) forloop -> FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON .

    PLUS            reduce using rule 87 (forloop -> FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON .)
    MINUS           reduce using rule 87 (forloop -> FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON .)
    $end            reduce using rule 87 (forloop -> FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 87 (forloop -> FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON .)


state 280

    (82) forloop2 -> LEVEL1 FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON .
    (87) forloop -> FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON .

  ! reduce/reduce conflict for PLUS resolved using rule 82 (forloop2 -> LEVEL1 FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON .)
  ! reduce/reduce conflict for MINUS resolved using rule 82 (forloop2 -> LEVEL1 FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON .)
    PLUS            reduce using rule 82 (forloop2 -> LEVEL1 FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON .)
    MINUS           reduce using rule 82 (forloop2 -> LEVEL1 FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON .)
    $end            reduce using rule 82 (forloop2 -> LEVEL1 FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 82 (forloop2 -> LEVEL1 FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON .)

  ! PLUS            [ reduce using rule 87 (forloop -> FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON .) ]
  ! MINUS           [ reduce using rule 87 (forloop -> FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON .) ]

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MINUS in state 0 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 3 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 4 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 4 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 6 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 13 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 14 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 21 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 22 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 25 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 33 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 39 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 39 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 43 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 43 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 44 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 44 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 46 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 55 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 55 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 56 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 56 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 61 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 61 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 63 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 63 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 63 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 64 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 64 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 68 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 69 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 69 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 70 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 70 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 71 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 71 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 72 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 72 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 73 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 73 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 85 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 87 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 88 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 93 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 109 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 109 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 110 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 110 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 115 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 115 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 116 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 116 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 118 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 118 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 118 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 119 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 119 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 121 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 121 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 121 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 122 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 122 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 136 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 156 resolved as shift
WARNING: shift/reduce conflict for PARANCLOSE in state 161 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 161 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 161 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 162 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 162 resolved as shift
WARNING: shift/reduce conflict for PARANCLOSE in state 162 resolved as shift
WARNING: shift/reduce conflict for PARANCLOSE in state 163 resolved as shift
WARNING: shift/reduce conflict for PARANCLOSE in state 184 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 184 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 184 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 185 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 185 resolved as shift
WARNING: shift/reduce conflict for PARANCLOSE in state 185 resolved as shift
WARNING: shift/reduce conflict for PARANCLOSE in state 186 resolved as shift
WARNING: reduce/reduce conflict in state 63 resolved using rule (expression -> ID PLUS factor)
WARNING: rejected rule (term -> factor) in state 63
WARNING: reduce/reduce conflict in state 69 resolved using rule (term -> ID MULTIPLY factor)
WARNING: rejected rule (term -> factor) in state 69
WARNING: reduce/reduce conflict in state 71 resolved using rule (expression -> term MINUS term)
WARNING: rejected rule (expression -> term) in state 71
WARNING: reduce/reduce conflict in state 115 resolved using rule (expression -> ID EQUAL ID)
WARNING: rejected rule (expression -> LEVEL1 ID EQUAL ID) in state 115
WARNING: reduce/reduce conflict in state 116 resolved using rule (expression -> ID EQUAL expression)
WARNING: rejected rule (expression -> LEVEL1 ID EQUAL expression) in state 116
WARNING: reduce/reduce conflict in state 117 resolved using rule (expression -> ID EQUAL STR_CONST)
WARNING: rejected rule (expression -> LEVEL1 ID EQUAL STR_CONST) in state 117
WARNING: reduce/reduce conflict in state 118 resolved using rule (term -> factor)
WARNING: rejected rule (expression -> LEVEL1 ID EQUAL factor) in state 118
WARNING: reduce/reduce conflict in state 119 resolved using rule (expression -> ID PLUS ID)
WARNING: rejected rule (expression -> LEVEL1 ID PLUS ID) in state 119
WARNING: reduce/reduce conflict in state 121 resolved using rule (expression -> ID PLUS factor)
WARNING: rejected rule (expression -> LEVEL1 ID PLUS factor) in state 121
WARNING: reduce/reduce conflict in state 121 resolved using rule (expression -> ID PLUS factor)
WARNING: rejected rule (term -> factor) in state 121
WARNING: reduce/reduce conflict in state 121 resolved using rule (term -> factor)
WARNING: rejected rule (expression -> LEVEL1 ID PLUS factor) in state 121
WARNING: reduce/reduce conflict in state 122 resolved using rule (expression -> ID PLUS expression)
WARNING: rejected rule (expression -> LEVEL1 ID PLUS expression) in state 122
WARNING: reduce/reduce conflict in state 123 resolved using rule (expression -> expression PLUS term)
WARNING: rejected rule (expression -> LEVEL1 expression PLUS term) in state 123
WARNING: reduce/reduce conflict in state 124 resolved using rule (expression -> expression PLUS ID)
WARNING: rejected rule (expression -> LEVEL1 expression PLUS ID) in state 124
WARNING: reduce/reduce conflict in state 125 resolved using rule (expression -> factor PLUS factor)
WARNING: rejected rule (expression -> LEVEL1 factor PLUS factor) in state 125
WARNING: reduce/reduce conflict in state 126 resolved using rule (expression -> factor PLUS ID)
WARNING: rejected rule (expression -> LEVEL1 factor PLUS ID) in state 126
WARNING: reduce/reduce conflict in state 132 resolved using rule (whileloop2 -> LEVEL1 WHILE ID COLON)
WARNING: rejected rule (whileloop -> WHILE ID COLON) in state 132
WARNING: reduce/reduce conflict in state 133 resolved using rule (whileloop2 -> LEVEL1 WHILE factor COLON)
WARNING: rejected rule (whileloop -> WHILE factor COLON) in state 133
WARNING: reduce/reduce conflict in state 134 resolved using rule (whileloop2 -> LEVEL1 WHILE STR_CONST COLON)
WARNING: rejected rule (whileloop -> WHILE STR_CONST COLON) in state 134
WARNING: reduce/reduce conflict in state 135 resolved using rule (whileloop2 -> LEVEL1 WHILE BOOL COLON)
WARNING: rejected rule (whileloop -> WHILE BOOL COLON) in state 135
WARNING: reduce/reduce conflict in state 148 resolved using rule (expression -> ID PLUS EQUAL term)
WARNING: rejected rule (expression -> LEVEL1 ID PLUS EQUAL term) in state 148
WARNING: reduce/reduce conflict in state 149 resolved using rule (expression -> PRINT PARANOPEN STR_CONST PARANCLOSE)
WARNING: rejected rule (expression -> LEVEL1 PRINT PARANOPEN STR_CONST PARANCLOSE) in state 149
WARNING: reduce/reduce conflict in state 150 resolved using rule (expression -> PRINT PARANOPEN ID PARANCLOSE)
WARNING: rejected rule (expression -> LEVEL1 PRINT PARANOPEN ID PARANCLOSE) in state 150
WARNING: reduce/reduce conflict in state 151 resolved using rule (expression -> PRINT PARANOPEN term PARANCLOSE)
WARNING: rejected rule (expression -> LEVEL1 PRINT PARANOPEN term PARANCLOSE) in state 151
WARNING: reduce/reduce conflict in state 180 resolved using rule (forloop2 -> LEVEL1 FOR ID IN ID COLON)
WARNING: rejected rule (forloop -> FOR ID IN ID COLON) in state 180
WARNING: reduce/reduce conflict in state 183 resolved using rule (forloop2 -> LEVEL1 FOR ID IN STR_CONST COLON)
WARNING: rejected rule (forloop -> FOR ID IN STR_CONST COLON) in state 183
WARNING: reduce/reduce conflict in state 255 resolved using rule (forloop2 -> LEVEL1 FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON)
WARNING: rejected rule (forloop -> FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON) in state 255
WARNING: reduce/reduce conflict in state 256 resolved using rule (whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON)
WARNING: rejected rule (whileloop -> WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON) in state 256
WARNING: reduce/reduce conflict in state 257 resolved using rule (whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON)
WARNING: rejected rule (whileloop -> WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON) in state 257
WARNING: reduce/reduce conflict in state 258 resolved using rule (whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON)
WARNING: rejected rule (whileloop -> WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON) in state 258
WARNING: reduce/reduce conflict in state 259 resolved using rule (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON)
WARNING: rejected rule (whileloop -> WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON) in state 259
WARNING: reduce/reduce conflict in state 260 resolved using rule (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON)
WARNING: rejected rule (whileloop -> WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON) in state 260
WARNING: reduce/reduce conflict in state 261 resolved using rule (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON)
WARNING: rejected rule (whileloop -> WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON) in state 261
WARNING: reduce/reduce conflict in state 262 resolved using rule (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON)
WARNING: rejected rule (whileloop -> WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON) in state 262
WARNING: reduce/reduce conflict in state 263 resolved using rule (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON)
WARNING: rejected rule (whileloop -> WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON) in state 263
WARNING: reduce/reduce conflict in state 264 resolved using rule (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON)
WARNING: rejected rule (whileloop -> WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON) in state 264
WARNING: reduce/reduce conflict in state 265 resolved using rule (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON)
WARNING: rejected rule (whileloop -> WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON) in state 265
WARNING: reduce/reduce conflict in state 266 resolved using rule (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON)
WARNING: rejected rule (whileloop -> WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON) in state 266
WARNING: reduce/reduce conflict in state 267 resolved using rule (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON)
WARNING: rejected rule (whileloop -> WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON) in state 267
WARNING: reduce/reduce conflict in state 268 resolved using rule (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON)
WARNING: rejected rule (whileloop -> WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON) in state 268
WARNING: reduce/reduce conflict in state 269 resolved using rule (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON)
WARNING: rejected rule (whileloop -> WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON) in state 269
WARNING: reduce/reduce conflict in state 270 resolved using rule (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON)
WARNING: rejected rule (whileloop -> WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON) in state 270
WARNING: reduce/reduce conflict in state 273 resolved using rule (forloop2 -> LEVEL1 FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON)
WARNING: rejected rule (forloop -> FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON) in state 273
WARNING: reduce/reduce conflict in state 280 resolved using rule (forloop2 -> LEVEL1 FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON)
WARNING: rejected rule (forloop -> FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON) in state 280
WARNING: Rule (expression -> LEVEL1 ID EQUAL factor) is never reduced
WARNING: Rule (expression -> LEVEL1 ID PLUS factor) is never reduced
