Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    BIT_AND
    BIT_OR
    COMMA
    DEF
    EMP_LIST
    EMP_SET
    EMP_TUPLE
    EQEQ
    FLOWERCLOSE
    FLOWEROPEN
    IF
    LEVEL3
    MOD
    NAME
    NEWLINE
    NOTEQ
    OR

Grammar

Rule 0     S' -> expression
Rule 1     expression -> ID EQUAL expression
Rule 2     expression -> ID EQUAL STR_CONST
Rule 3     expression -> ID EQUAL ID
Rule 4     expression -> ID PLUS EQUAL INT
Rule 5     expression -> expression PLUS term
Rule 6     expression -> PRINT PARANOPEN STR_CONST PARANCLOSE
Rule 7     expression -> PRINT PARANOPEN ID PARANCLOSE
Rule 8     expression -> PRINT PARANOPEN term PARANCLOSE
Rule 9     expression -> expression MINUS term
Rule 10    expression -> ID MINUS EQUAL term
Rule 11    expression -> MINUS term
Rule 12    expression -> term
Rule 13    term -> term MULTIPLY factor
Rule 14    term -> term DIVIDE factor
Rule 15    term -> factor
Rule 16    factor -> INT
Rule 17    factor -> FLOAT
Rule 18    factor -> PARANOPEN expression PARANCLOSE
Rule 19    expression -> whileloop
Rule 20    expression -> forloop
Rule 21    expression -> forloop2
Rule 22    expression -> whileloop2
Rule 23    whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
Rule 24    whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
Rule 25    whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
Rule 26    whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
Rule 27    whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
Rule 28    whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
Rule 29    whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
Rule 30    whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
Rule 31    whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
Rule 32    whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
Rule 33    whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
Rule 34    whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
Rule 35    whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
Rule 36    whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
Rule 37    whileloop2 -> WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
Rule 38    whileloop2 -> LEVEL1 WHILE BOOL COLON
Rule 39    whileloop2 -> LEVEL1 WHILE STR_CONST COLON
Rule 40    whileloop2 -> LEVEL1 WHILE factor COLON
Rule 41    whileloop2 -> LEVEL1 WHILE ID COLON
Rule 42    whileloop -> WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
Rule 43    whileloop -> WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
Rule 44    whileloop -> WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
Rule 45    whileloop -> WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
Rule 46    whileloop -> WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
Rule 47    whileloop -> WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
Rule 48    whileloop -> WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
Rule 49    whileloop -> WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
Rule 50    whileloop -> WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
Rule 51    whileloop -> WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
Rule 52    whileloop -> WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
Rule 53    whileloop -> WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
Rule 54    whileloop -> WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
Rule 55    whileloop -> WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
Rule 56    whileloop -> WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
Rule 57    whileloop -> WHILE BOOL COLON
Rule 58    whileloop -> WHILE STR_CONST COLON
Rule 59    whileloop -> WHILE factor COLON
Rule 60    whileloop -> WHILE ID COLON
Rule 61    forloop2 -> LEVEL1 FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
Rule 62    forloop2 -> LEVEL1 FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
Rule 63    forloop2 -> LEVEL1 FOR ID IN STR_CONST COLON
Rule 64    forloop2 -> LEVEL1 FOR ID IN ID COLON
Rule 65    forloop2 -> LEVEL1 FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
Rule 66    forloop -> FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
Rule 67    forloop -> FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
Rule 68    forloop -> FOR ID IN STR_CONST COLON
Rule 69    forloop -> FOR ID IN ID COLON
Rule 70    forloop -> FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
Rule 71    expression -> LEVEL2 ID EQUAL INT
Rule 72    expression -> LEVEL1 ID EQUAL INT
Rule 73    expression -> LEVEL2 PRINT PARANOPEN STR_CONST PARANCLOSE
Rule 74    expression -> LEVEL2 PRINT PARANOPEN ID PARANCLOSE
Rule 75    expression -> LEVEL2 PRINT PARANOPEN term PARANCLOSE
Rule 76    expression -> LEVEL1 PRINT PARANOPEN STR_CONST PARANCLOSE
Rule 77    expression -> LEVEL1 PRINT PARANOPEN ID PARANCLOSE
Rule 78    expression -> LEVEL1 PRINT PARANOPEN term PARANCLOSE
Rule 79    expression -> <empty>
Rule 80    expression -> HASH expression
Rule 81    expression -> HASH ID
Rule 82    expression -> HASH STR_CONST

Terminals, with rules where they appear

AND                  : 
BIT_AND              : 
BIT_OR               : 
BOOL                 : 38 57
COLON                : 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70
COMMA                : 
DEF                  : 
DIVIDE               : 14
EMP_LIST             : 
EMP_SET              : 
EMP_TUPLE            : 
EQEQ                 : 
EQUAL                : 1 2 3 4 10 23 24 25 42 43 44 71 72
FLOAT                : 17
FLOWERCLOSE          : 
FLOWEROPEN           : 
FOR                  : 61 62 63 64 65 66 67 68 69 70
GREATER              : 26 27 28 45 46 47
GREATEREQ            : 29 30 31 48 49 50
HASH                 : 80 81 82
ID                   : 1 2 3 3 4 7 10 23 24 25 25 26 27 28 28 29 30 31 31 32 33 34 34 35 36 37 37 41 42 43 44 44 45 46 47 47 48 49 50 50 51 52 53 53 54 55 56 56 60 61 62 62 63 64 64 65 66 67 67 68 69 69 70 71 72 74 77 81
IF                   : 
IN                   : 61 62 63 64 65 66 67 68 69 70
INT                  : 4 16 71 72
LEN                  : 62 67
LESSER               : 32 33 34 51 52 53
LESSEREQ             : 35 36 37 54 55 56
LEVEL1               : 23 24 25 26 27 28 29 30 31 32 33 34 35 36 38 39 40 41 61 62 63 64 65 72 76 77 78
LEVEL2               : 71 73 74 75
LEVEL3               : 
MINUS                : 9 10 11
MOD                  : 
MULTIPLY             : 13
NAME                 : 
NEWLINE              : 
NOTEQ                : 
OR                   : 
PARANCLOSE           : 6 7 8 18 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 61 62 62 65 66 67 67 70 73 74 75 76 77 78
PARANOPEN            : 6 7 8 18 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 61 62 62 65 66 67 67 70 73 74 75 76 77 78
PLUS                 : 4 5
PRINT                : 6 7 8 73 74 75 76 77 78
RANGE                : 61 62 66 67
STR_CONST            : 2 6 24 27 30 33 36 39 43 46 49 52 55 58 63 65 68 70 73 76 82
WHILE                : 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60
error                : 

Nonterminals, with rules where they appear

expression           : 1 5 9 18 80 0
factor               : 13 14 15 23 26 29 32 35 40 42 45 48 51 54 59
forloop              : 20
forloop2             : 21
term                 : 5 8 9 10 11 12 13 14 61 66 75 78
whileloop            : 19
whileloop2           : 22

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . ID EQUAL expression
    (2) expression -> . ID EQUAL STR_CONST
    (3) expression -> . ID EQUAL ID
    (4) expression -> . ID PLUS EQUAL INT
    (5) expression -> . expression PLUS term
    (6) expression -> . PRINT PARANOPEN STR_CONST PARANCLOSE
    (7) expression -> . PRINT PARANOPEN ID PARANCLOSE
    (8) expression -> . PRINT PARANOPEN term PARANCLOSE
    (9) expression -> . expression MINUS term
    (10) expression -> . ID MINUS EQUAL term
    (11) expression -> . MINUS term
    (12) expression -> . term
    (19) expression -> . whileloop
    (20) expression -> . forloop
    (21) expression -> . forloop2
    (22) expression -> . whileloop2
    (71) expression -> . LEVEL2 ID EQUAL INT
    (72) expression -> . LEVEL1 ID EQUAL INT
    (73) expression -> . LEVEL2 PRINT PARANOPEN STR_CONST PARANCLOSE
    (74) expression -> . LEVEL2 PRINT PARANOPEN ID PARANCLOSE
    (75) expression -> . LEVEL2 PRINT PARANOPEN term PARANCLOSE
    (76) expression -> . LEVEL1 PRINT PARANOPEN STR_CONST PARANCLOSE
    (77) expression -> . LEVEL1 PRINT PARANOPEN ID PARANCLOSE
    (78) expression -> . LEVEL1 PRINT PARANOPEN term PARANCLOSE
    (79) expression -> .
    (80) expression -> . HASH expression
    (81) expression -> . HASH ID
    (82) expression -> . HASH STR_CONST
    (13) term -> . term MULTIPLY factor
    (14) term -> . term DIVIDE factor
    (15) term -> . factor
    (42) whileloop -> . WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (43) whileloop -> . WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (44) whileloop -> . WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (45) whileloop -> . WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (46) whileloop -> . WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (47) whileloop -> . WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (48) whileloop -> . WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (49) whileloop -> . WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (50) whileloop -> . WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (51) whileloop -> . WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (52) whileloop -> . WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (53) whileloop -> . WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (54) whileloop -> . WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (55) whileloop -> . WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (56) whileloop -> . WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (57) whileloop -> . WHILE BOOL COLON
    (58) whileloop -> . WHILE STR_CONST COLON
    (59) whileloop -> . WHILE factor COLON
    (60) whileloop -> . WHILE ID COLON
    (66) forloop -> . FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (67) forloop -> . FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (68) forloop -> . FOR ID IN STR_CONST COLON
    (69) forloop -> . FOR ID IN ID COLON
    (70) forloop -> . FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (61) forloop2 -> . LEVEL1 FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (62) forloop2 -> . LEVEL1 FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (63) forloop2 -> . LEVEL1 FOR ID IN STR_CONST COLON
    (64) forloop2 -> . LEVEL1 FOR ID IN ID COLON
    (65) forloop2 -> . LEVEL1 FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (23) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (24) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (25) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (26) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (27) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (28) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (29) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (30) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (31) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (32) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (33) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (34) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (35) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (36) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (37) whileloop2 -> . WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (38) whileloop2 -> . LEVEL1 WHILE BOOL COLON
    (39) whileloop2 -> . LEVEL1 WHILE STR_CONST COLON
    (40) whileloop2 -> . LEVEL1 WHILE factor COLON
    (41) whileloop2 -> . LEVEL1 WHILE ID COLON
    (16) factor -> . INT
    (17) factor -> . FLOAT
    (18) factor -> . PARANOPEN expression PARANCLOSE

  ! shift/reduce conflict for MINUS resolved as shift
    ID              shift and go to state 2
    PRINT           shift and go to state 5
    MINUS           shift and go to state 7
    LEVEL2          shift and go to state 12
    LEVEL1          shift and go to state 13
    PLUS            reduce using rule 79 (expression -> .)
    $end            reduce using rule 79 (expression -> .)
    HASH            shift and go to state 14
    WHILE           shift and go to state 16
    FOR             shift and go to state 17
    INT             shift and go to state 3
    FLOAT           shift and go to state 18
    PARANOPEN       shift and go to state 6

  ! MINUS           [ reduce using rule 79 (expression -> .) ]

    expression                     shift and go to state 1
    term                           shift and go to state 4
    whileloop                      shift and go to state 8
    forloop                        shift and go to state 9
    forloop2                       shift and go to state 10
    whileloop2                     shift and go to state 11
    factor                         shift and go to state 15

state 1

    (0) S' -> expression .
    (5) expression -> expression . PLUS term
    (9) expression -> expression . MINUS term

    PLUS            shift and go to state 19
    MINUS           shift and go to state 20


state 2

    (1) expression -> ID . EQUAL expression
    (2) expression -> ID . EQUAL STR_CONST
    (3) expression -> ID . EQUAL ID
    (4) expression -> ID . PLUS EQUAL INT
    (10) expression -> ID . MINUS EQUAL term

    EQUAL           shift and go to state 21
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23


state 3

    (16) factor -> INT .

    MULTIPLY        reduce using rule 16 (factor -> INT .)
    DIVIDE          reduce using rule 16 (factor -> INT .)
    PLUS            reduce using rule 16 (factor -> INT .)
    MINUS           reduce using rule 16 (factor -> INT .)
    $end            reduce using rule 16 (factor -> INT .)
    PARANCLOSE      reduce using rule 16 (factor -> INT .)
    COLON           reduce using rule 16 (factor -> INT .)


state 4

    (12) expression -> term .
    (13) term -> term . MULTIPLY factor
    (14) term -> term . DIVIDE factor

    PLUS            reduce using rule 12 (expression -> term .)
    MINUS           reduce using rule 12 (expression -> term .)
    $end            reduce using rule 12 (expression -> term .)
    PARANCLOSE      reduce using rule 12 (expression -> term .)
    MULTIPLY        shift and go to state 24
    DIVIDE          shift and go to state 25


state 5

    (6) expression -> PRINT . PARANOPEN STR_CONST PARANCLOSE
    (7) expression -> PRINT . PARANOPEN ID PARANCLOSE
    (8) expression -> PRINT . PARANOPEN term PARANCLOSE

    PARANOPEN       shift and go to state 26


state 6

    (18) factor -> PARANOPEN . expression PARANCLOSE
    (1) expression -> . ID EQUAL expression
    (2) expression -> . ID EQUAL STR_CONST
    (3) expression -> . ID EQUAL ID
    (4) expression -> . ID PLUS EQUAL INT
    (5) expression -> . expression PLUS term
    (6) expression -> . PRINT PARANOPEN STR_CONST PARANCLOSE
    (7) expression -> . PRINT PARANOPEN ID PARANCLOSE
    (8) expression -> . PRINT PARANOPEN term PARANCLOSE
    (9) expression -> . expression MINUS term
    (10) expression -> . ID MINUS EQUAL term
    (11) expression -> . MINUS term
    (12) expression -> . term
    (19) expression -> . whileloop
    (20) expression -> . forloop
    (21) expression -> . forloop2
    (22) expression -> . whileloop2
    (71) expression -> . LEVEL2 ID EQUAL INT
    (72) expression -> . LEVEL1 ID EQUAL INT
    (73) expression -> . LEVEL2 PRINT PARANOPEN STR_CONST PARANCLOSE
    (74) expression -> . LEVEL2 PRINT PARANOPEN ID PARANCLOSE
    (75) expression -> . LEVEL2 PRINT PARANOPEN term PARANCLOSE
    (76) expression -> . LEVEL1 PRINT PARANOPEN STR_CONST PARANCLOSE
    (77) expression -> . LEVEL1 PRINT PARANOPEN ID PARANCLOSE
    (78) expression -> . LEVEL1 PRINT PARANOPEN term PARANCLOSE
    (79) expression -> .
    (80) expression -> . HASH expression
    (81) expression -> . HASH ID
    (82) expression -> . HASH STR_CONST
    (13) term -> . term MULTIPLY factor
    (14) term -> . term DIVIDE factor
    (15) term -> . factor
    (42) whileloop -> . WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (43) whileloop -> . WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (44) whileloop -> . WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (45) whileloop -> . WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (46) whileloop -> . WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (47) whileloop -> . WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (48) whileloop -> . WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (49) whileloop -> . WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (50) whileloop -> . WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (51) whileloop -> . WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (52) whileloop -> . WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (53) whileloop -> . WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (54) whileloop -> . WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (55) whileloop -> . WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (56) whileloop -> . WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (57) whileloop -> . WHILE BOOL COLON
    (58) whileloop -> . WHILE STR_CONST COLON
    (59) whileloop -> . WHILE factor COLON
    (60) whileloop -> . WHILE ID COLON
    (66) forloop -> . FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (67) forloop -> . FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (68) forloop -> . FOR ID IN STR_CONST COLON
    (69) forloop -> . FOR ID IN ID COLON
    (70) forloop -> . FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (61) forloop2 -> . LEVEL1 FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (62) forloop2 -> . LEVEL1 FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (63) forloop2 -> . LEVEL1 FOR ID IN STR_CONST COLON
    (64) forloop2 -> . LEVEL1 FOR ID IN ID COLON
    (65) forloop2 -> . LEVEL1 FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (23) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (24) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (25) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (26) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (27) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (28) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (29) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (30) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (31) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (32) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (33) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (34) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (35) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (36) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (37) whileloop2 -> . WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (38) whileloop2 -> . LEVEL1 WHILE BOOL COLON
    (39) whileloop2 -> . LEVEL1 WHILE STR_CONST COLON
    (40) whileloop2 -> . LEVEL1 WHILE factor COLON
    (41) whileloop2 -> . LEVEL1 WHILE ID COLON
    (16) factor -> . INT
    (17) factor -> . FLOAT
    (18) factor -> . PARANOPEN expression PARANCLOSE

  ! shift/reduce conflict for MINUS resolved as shift
    ID              shift and go to state 2
    PRINT           shift and go to state 5
    MINUS           shift and go to state 7
    LEVEL2          shift and go to state 12
    LEVEL1          shift and go to state 13
    PARANCLOSE      reduce using rule 79 (expression -> .)
    PLUS            reduce using rule 79 (expression -> .)
    HASH            shift and go to state 14
    WHILE           shift and go to state 16
    FOR             shift and go to state 17
    INT             shift and go to state 3
    FLOAT           shift and go to state 18
    PARANOPEN       shift and go to state 6

  ! MINUS           [ reduce using rule 79 (expression -> .) ]

    expression                     shift and go to state 27
    term                           shift and go to state 4
    whileloop                      shift and go to state 8
    forloop                        shift and go to state 9
    forloop2                       shift and go to state 10
    whileloop2                     shift and go to state 11
    factor                         shift and go to state 15

state 7

    (11) expression -> MINUS . term
    (13) term -> . term MULTIPLY factor
    (14) term -> . term DIVIDE factor
    (15) term -> . factor
    (16) factor -> . INT
    (17) factor -> . FLOAT
    (18) factor -> . PARANOPEN expression PARANCLOSE

    INT             shift and go to state 3
    FLOAT           shift and go to state 18
    PARANOPEN       shift and go to state 6

    term                           shift and go to state 28
    factor                         shift and go to state 15

state 8

    (19) expression -> whileloop .

    PLUS            reduce using rule 19 (expression -> whileloop .)
    MINUS           reduce using rule 19 (expression -> whileloop .)
    $end            reduce using rule 19 (expression -> whileloop .)
    PARANCLOSE      reduce using rule 19 (expression -> whileloop .)


state 9

    (20) expression -> forloop .

    PLUS            reduce using rule 20 (expression -> forloop .)
    MINUS           reduce using rule 20 (expression -> forloop .)
    $end            reduce using rule 20 (expression -> forloop .)
    PARANCLOSE      reduce using rule 20 (expression -> forloop .)


state 10

    (21) expression -> forloop2 .

    PLUS            reduce using rule 21 (expression -> forloop2 .)
    MINUS           reduce using rule 21 (expression -> forloop2 .)
    $end            reduce using rule 21 (expression -> forloop2 .)
    PARANCLOSE      reduce using rule 21 (expression -> forloop2 .)


state 11

    (22) expression -> whileloop2 .

    PLUS            reduce using rule 22 (expression -> whileloop2 .)
    MINUS           reduce using rule 22 (expression -> whileloop2 .)
    $end            reduce using rule 22 (expression -> whileloop2 .)
    PARANCLOSE      reduce using rule 22 (expression -> whileloop2 .)


state 12

    (71) expression -> LEVEL2 . ID EQUAL INT
    (73) expression -> LEVEL2 . PRINT PARANOPEN STR_CONST PARANCLOSE
    (74) expression -> LEVEL2 . PRINT PARANOPEN ID PARANCLOSE
    (75) expression -> LEVEL2 . PRINT PARANOPEN term PARANCLOSE

    ID              shift and go to state 29
    PRINT           shift and go to state 30


state 13

    (72) expression -> LEVEL1 . ID EQUAL INT
    (76) expression -> LEVEL1 . PRINT PARANOPEN STR_CONST PARANCLOSE
    (77) expression -> LEVEL1 . PRINT PARANOPEN ID PARANCLOSE
    (78) expression -> LEVEL1 . PRINT PARANOPEN term PARANCLOSE
    (61) forloop2 -> LEVEL1 . FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (62) forloop2 -> LEVEL1 . FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (63) forloop2 -> LEVEL1 . FOR ID IN STR_CONST COLON
    (64) forloop2 -> LEVEL1 . FOR ID IN ID COLON
    (65) forloop2 -> LEVEL1 . FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (23) whileloop2 -> LEVEL1 . WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (24) whileloop2 -> LEVEL1 . WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (25) whileloop2 -> LEVEL1 . WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (26) whileloop2 -> LEVEL1 . WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (27) whileloop2 -> LEVEL1 . WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (28) whileloop2 -> LEVEL1 . WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (29) whileloop2 -> LEVEL1 . WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (30) whileloop2 -> LEVEL1 . WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (31) whileloop2 -> LEVEL1 . WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (32) whileloop2 -> LEVEL1 . WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (33) whileloop2 -> LEVEL1 . WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (34) whileloop2 -> LEVEL1 . WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (35) whileloop2 -> LEVEL1 . WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (36) whileloop2 -> LEVEL1 . WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (38) whileloop2 -> LEVEL1 . WHILE BOOL COLON
    (39) whileloop2 -> LEVEL1 . WHILE STR_CONST COLON
    (40) whileloop2 -> LEVEL1 . WHILE factor COLON
    (41) whileloop2 -> LEVEL1 . WHILE ID COLON

    ID              shift and go to state 31
    PRINT           shift and go to state 32
    FOR             shift and go to state 33
    WHILE           shift and go to state 34


state 14

    (80) expression -> HASH . expression
    (81) expression -> HASH . ID
    (82) expression -> HASH . STR_CONST
    (1) expression -> . ID EQUAL expression
    (2) expression -> . ID EQUAL STR_CONST
    (3) expression -> . ID EQUAL ID
    (4) expression -> . ID PLUS EQUAL INT
    (5) expression -> . expression PLUS term
    (6) expression -> . PRINT PARANOPEN STR_CONST PARANCLOSE
    (7) expression -> . PRINT PARANOPEN ID PARANCLOSE
    (8) expression -> . PRINT PARANOPEN term PARANCLOSE
    (9) expression -> . expression MINUS term
    (10) expression -> . ID MINUS EQUAL term
    (11) expression -> . MINUS term
    (12) expression -> . term
    (19) expression -> . whileloop
    (20) expression -> . forloop
    (21) expression -> . forloop2
    (22) expression -> . whileloop2
    (71) expression -> . LEVEL2 ID EQUAL INT
    (72) expression -> . LEVEL1 ID EQUAL INT
    (73) expression -> . LEVEL2 PRINT PARANOPEN STR_CONST PARANCLOSE
    (74) expression -> . LEVEL2 PRINT PARANOPEN ID PARANCLOSE
    (75) expression -> . LEVEL2 PRINT PARANOPEN term PARANCLOSE
    (76) expression -> . LEVEL1 PRINT PARANOPEN STR_CONST PARANCLOSE
    (77) expression -> . LEVEL1 PRINT PARANOPEN ID PARANCLOSE
    (78) expression -> . LEVEL1 PRINT PARANOPEN term PARANCLOSE
    (79) expression -> .
    (80) expression -> . HASH expression
    (81) expression -> . HASH ID
    (82) expression -> . HASH STR_CONST
    (13) term -> . term MULTIPLY factor
    (14) term -> . term DIVIDE factor
    (15) term -> . factor
    (42) whileloop -> . WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (43) whileloop -> . WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (44) whileloop -> . WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (45) whileloop -> . WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (46) whileloop -> . WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (47) whileloop -> . WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (48) whileloop -> . WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (49) whileloop -> . WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (50) whileloop -> . WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (51) whileloop -> . WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (52) whileloop -> . WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (53) whileloop -> . WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (54) whileloop -> . WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (55) whileloop -> . WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (56) whileloop -> . WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (57) whileloop -> . WHILE BOOL COLON
    (58) whileloop -> . WHILE STR_CONST COLON
    (59) whileloop -> . WHILE factor COLON
    (60) whileloop -> . WHILE ID COLON
    (66) forloop -> . FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (67) forloop -> . FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (68) forloop -> . FOR ID IN STR_CONST COLON
    (69) forloop -> . FOR ID IN ID COLON
    (70) forloop -> . FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (61) forloop2 -> . LEVEL1 FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (62) forloop2 -> . LEVEL1 FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (63) forloop2 -> . LEVEL1 FOR ID IN STR_CONST COLON
    (64) forloop2 -> . LEVEL1 FOR ID IN ID COLON
    (65) forloop2 -> . LEVEL1 FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (23) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (24) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (25) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (26) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (27) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (28) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (29) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (30) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (31) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (32) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (33) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (34) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (35) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (36) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (37) whileloop2 -> . WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (38) whileloop2 -> . LEVEL1 WHILE BOOL COLON
    (39) whileloop2 -> . LEVEL1 WHILE STR_CONST COLON
    (40) whileloop2 -> . LEVEL1 WHILE factor COLON
    (41) whileloop2 -> . LEVEL1 WHILE ID COLON
    (16) factor -> . INT
    (17) factor -> . FLOAT
    (18) factor -> . PARANOPEN expression PARANCLOSE

  ! shift/reduce conflict for MINUS resolved as shift
    ID              shift and go to state 36
    STR_CONST       shift and go to state 37
    PRINT           shift and go to state 5
    MINUS           shift and go to state 7
    LEVEL2          shift and go to state 12
    LEVEL1          shift and go to state 13
    PLUS            reduce using rule 79 (expression -> .)
    $end            reduce using rule 79 (expression -> .)
    PARANCLOSE      reduce using rule 79 (expression -> .)
    HASH            shift and go to state 14
    WHILE           shift and go to state 16
    FOR             shift and go to state 17
    INT             shift and go to state 3
    FLOAT           shift and go to state 18
    PARANOPEN       shift and go to state 6

  ! MINUS           [ reduce using rule 79 (expression -> .) ]

    expression                     shift and go to state 35
    term                           shift and go to state 4
    whileloop                      shift and go to state 8
    forloop                        shift and go to state 9
    forloop2                       shift and go to state 10
    whileloop2                     shift and go to state 11
    factor                         shift and go to state 15

state 15

    (15) term -> factor .

    MULTIPLY        reduce using rule 15 (term -> factor .)
    DIVIDE          reduce using rule 15 (term -> factor .)
    PLUS            reduce using rule 15 (term -> factor .)
    MINUS           reduce using rule 15 (term -> factor .)
    $end            reduce using rule 15 (term -> factor .)
    PARANCLOSE      reduce using rule 15 (term -> factor .)


state 16

    (42) whileloop -> WHILE . PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (43) whileloop -> WHILE . PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (44) whileloop -> WHILE . PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (45) whileloop -> WHILE . PARANOPEN ID GREATER factor PARANCLOSE COLON
    (46) whileloop -> WHILE . PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (47) whileloop -> WHILE . PARANOPEN ID GREATER ID PARANCLOSE COLON
    (48) whileloop -> WHILE . PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (49) whileloop -> WHILE . PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (50) whileloop -> WHILE . PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (51) whileloop -> WHILE . PARANOPEN ID LESSER factor PARANCLOSE COLON
    (52) whileloop -> WHILE . PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (53) whileloop -> WHILE . PARANOPEN ID LESSER ID PARANCLOSE COLON
    (54) whileloop -> WHILE . PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (55) whileloop -> WHILE . PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (56) whileloop -> WHILE . PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (57) whileloop -> WHILE . BOOL COLON
    (58) whileloop -> WHILE . STR_CONST COLON
    (59) whileloop -> WHILE . factor COLON
    (60) whileloop -> WHILE . ID COLON
    (37) whileloop2 -> WHILE . PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (16) factor -> . INT
    (17) factor -> . FLOAT
    (18) factor -> . PARANOPEN expression PARANCLOSE

    PARANOPEN       shift and go to state 38
    BOOL            shift and go to state 42
    STR_CONST       shift and go to state 41
    ID              shift and go to state 39
    INT             shift and go to state 3
    FLOAT           shift and go to state 18

    factor                         shift and go to state 40

state 17

    (66) forloop -> FOR . ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (67) forloop -> FOR . ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (68) forloop -> FOR . ID IN STR_CONST COLON
    (69) forloop -> FOR . ID IN ID COLON
    (70) forloop -> FOR . ID IN PARANOPEN STR_CONST PARANCLOSE COLON

    ID              shift and go to state 43


state 18

    (17) factor -> FLOAT .

    MULTIPLY        reduce using rule 17 (factor -> FLOAT .)
    DIVIDE          reduce using rule 17 (factor -> FLOAT .)
    PLUS            reduce using rule 17 (factor -> FLOAT .)
    MINUS           reduce using rule 17 (factor -> FLOAT .)
    $end            reduce using rule 17 (factor -> FLOAT .)
    PARANCLOSE      reduce using rule 17 (factor -> FLOAT .)
    COLON           reduce using rule 17 (factor -> FLOAT .)


state 19

    (5) expression -> expression PLUS . term
    (13) term -> . term MULTIPLY factor
    (14) term -> . term DIVIDE factor
    (15) term -> . factor
    (16) factor -> . INT
    (17) factor -> . FLOAT
    (18) factor -> . PARANOPEN expression PARANCLOSE

    INT             shift and go to state 3
    FLOAT           shift and go to state 18
    PARANOPEN       shift and go to state 6

    term                           shift and go to state 44
    factor                         shift and go to state 15

state 20

    (9) expression -> expression MINUS . term
    (13) term -> . term MULTIPLY factor
    (14) term -> . term DIVIDE factor
    (15) term -> . factor
    (16) factor -> . INT
    (17) factor -> . FLOAT
    (18) factor -> . PARANOPEN expression PARANCLOSE

    INT             shift and go to state 3
    FLOAT           shift and go to state 18
    PARANOPEN       shift and go to state 6

    term                           shift and go to state 45
    factor                         shift and go to state 15

state 21

    (1) expression -> ID EQUAL . expression
    (2) expression -> ID EQUAL . STR_CONST
    (3) expression -> ID EQUAL . ID
    (1) expression -> . ID EQUAL expression
    (2) expression -> . ID EQUAL STR_CONST
    (3) expression -> . ID EQUAL ID
    (4) expression -> . ID PLUS EQUAL INT
    (5) expression -> . expression PLUS term
    (6) expression -> . PRINT PARANOPEN STR_CONST PARANCLOSE
    (7) expression -> . PRINT PARANOPEN ID PARANCLOSE
    (8) expression -> . PRINT PARANOPEN term PARANCLOSE
    (9) expression -> . expression MINUS term
    (10) expression -> . ID MINUS EQUAL term
    (11) expression -> . MINUS term
    (12) expression -> . term
    (19) expression -> . whileloop
    (20) expression -> . forloop
    (21) expression -> . forloop2
    (22) expression -> . whileloop2
    (71) expression -> . LEVEL2 ID EQUAL INT
    (72) expression -> . LEVEL1 ID EQUAL INT
    (73) expression -> . LEVEL2 PRINT PARANOPEN STR_CONST PARANCLOSE
    (74) expression -> . LEVEL2 PRINT PARANOPEN ID PARANCLOSE
    (75) expression -> . LEVEL2 PRINT PARANOPEN term PARANCLOSE
    (76) expression -> . LEVEL1 PRINT PARANOPEN STR_CONST PARANCLOSE
    (77) expression -> . LEVEL1 PRINT PARANOPEN ID PARANCLOSE
    (78) expression -> . LEVEL1 PRINT PARANOPEN term PARANCLOSE
    (79) expression -> .
    (80) expression -> . HASH expression
    (81) expression -> . HASH ID
    (82) expression -> . HASH STR_CONST
    (13) term -> . term MULTIPLY factor
    (14) term -> . term DIVIDE factor
    (15) term -> . factor
    (42) whileloop -> . WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (43) whileloop -> . WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (44) whileloop -> . WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (45) whileloop -> . WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (46) whileloop -> . WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (47) whileloop -> . WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (48) whileloop -> . WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (49) whileloop -> . WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (50) whileloop -> . WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (51) whileloop -> . WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (52) whileloop -> . WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (53) whileloop -> . WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (54) whileloop -> . WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (55) whileloop -> . WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (56) whileloop -> . WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (57) whileloop -> . WHILE BOOL COLON
    (58) whileloop -> . WHILE STR_CONST COLON
    (59) whileloop -> . WHILE factor COLON
    (60) whileloop -> . WHILE ID COLON
    (66) forloop -> . FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (67) forloop -> . FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (68) forloop -> . FOR ID IN STR_CONST COLON
    (69) forloop -> . FOR ID IN ID COLON
    (70) forloop -> . FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (61) forloop2 -> . LEVEL1 FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (62) forloop2 -> . LEVEL1 FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (63) forloop2 -> . LEVEL1 FOR ID IN STR_CONST COLON
    (64) forloop2 -> . LEVEL1 FOR ID IN ID COLON
    (65) forloop2 -> . LEVEL1 FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (23) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (24) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (25) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (26) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (27) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (28) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (29) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (30) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (31) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (32) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (33) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (34) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (35) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (36) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (37) whileloop2 -> . WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (38) whileloop2 -> . LEVEL1 WHILE BOOL COLON
    (39) whileloop2 -> . LEVEL1 WHILE STR_CONST COLON
    (40) whileloop2 -> . LEVEL1 WHILE factor COLON
    (41) whileloop2 -> . LEVEL1 WHILE ID COLON
    (16) factor -> . INT
    (17) factor -> . FLOAT
    (18) factor -> . PARANOPEN expression PARANCLOSE

  ! shift/reduce conflict for MINUS resolved as shift
    STR_CONST       shift and go to state 48
    ID              shift and go to state 46
    PRINT           shift and go to state 5
    MINUS           shift and go to state 7
    LEVEL2          shift and go to state 12
    LEVEL1          shift and go to state 13
    PLUS            reduce using rule 79 (expression -> .)
    $end            reduce using rule 79 (expression -> .)
    PARANCLOSE      reduce using rule 79 (expression -> .)
    HASH            shift and go to state 14
    WHILE           shift and go to state 16
    FOR             shift and go to state 17
    INT             shift and go to state 3
    FLOAT           shift and go to state 18
    PARANOPEN       shift and go to state 6

  ! MINUS           [ reduce using rule 79 (expression -> .) ]

    expression                     shift and go to state 47
    term                           shift and go to state 4
    whileloop                      shift and go to state 8
    forloop                        shift and go to state 9
    forloop2                       shift and go to state 10
    whileloop2                     shift and go to state 11
    factor                         shift and go to state 15

state 22

    (4) expression -> ID PLUS . EQUAL INT

    EQUAL           shift and go to state 49


state 23

    (10) expression -> ID MINUS . EQUAL term

    EQUAL           shift and go to state 50


state 24

    (13) term -> term MULTIPLY . factor
    (16) factor -> . INT
    (17) factor -> . FLOAT
    (18) factor -> . PARANOPEN expression PARANCLOSE

    INT             shift and go to state 3
    FLOAT           shift and go to state 18
    PARANOPEN       shift and go to state 6

    factor                         shift and go to state 51

state 25

    (14) term -> term DIVIDE . factor
    (16) factor -> . INT
    (17) factor -> . FLOAT
    (18) factor -> . PARANOPEN expression PARANCLOSE

    INT             shift and go to state 3
    FLOAT           shift and go to state 18
    PARANOPEN       shift and go to state 6

    factor                         shift and go to state 52

state 26

    (6) expression -> PRINT PARANOPEN . STR_CONST PARANCLOSE
    (7) expression -> PRINT PARANOPEN . ID PARANCLOSE
    (8) expression -> PRINT PARANOPEN . term PARANCLOSE
    (13) term -> . term MULTIPLY factor
    (14) term -> . term DIVIDE factor
    (15) term -> . factor
    (16) factor -> . INT
    (17) factor -> . FLOAT
    (18) factor -> . PARANOPEN expression PARANCLOSE

    STR_CONST       shift and go to state 53
    ID              shift and go to state 54
    INT             shift and go to state 3
    FLOAT           shift and go to state 18
    PARANOPEN       shift and go to state 6

    term                           shift and go to state 55
    factor                         shift and go to state 15

state 27

    (18) factor -> PARANOPEN expression . PARANCLOSE
    (5) expression -> expression . PLUS term
    (9) expression -> expression . MINUS term

    PARANCLOSE      shift and go to state 56
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20


state 28

    (11) expression -> MINUS term .
    (13) term -> term . MULTIPLY factor
    (14) term -> term . DIVIDE factor

    PLUS            reduce using rule 11 (expression -> MINUS term .)
    MINUS           reduce using rule 11 (expression -> MINUS term .)
    $end            reduce using rule 11 (expression -> MINUS term .)
    PARANCLOSE      reduce using rule 11 (expression -> MINUS term .)
    MULTIPLY        shift and go to state 24
    DIVIDE          shift and go to state 25


state 29

    (71) expression -> LEVEL2 ID . EQUAL INT

    EQUAL           shift and go to state 57


state 30

    (73) expression -> LEVEL2 PRINT . PARANOPEN STR_CONST PARANCLOSE
    (74) expression -> LEVEL2 PRINT . PARANOPEN ID PARANCLOSE
    (75) expression -> LEVEL2 PRINT . PARANOPEN term PARANCLOSE

    PARANOPEN       shift and go to state 58


state 31

    (72) expression -> LEVEL1 ID . EQUAL INT

    EQUAL           shift and go to state 59


state 32

    (76) expression -> LEVEL1 PRINT . PARANOPEN STR_CONST PARANCLOSE
    (77) expression -> LEVEL1 PRINT . PARANOPEN ID PARANCLOSE
    (78) expression -> LEVEL1 PRINT . PARANOPEN term PARANCLOSE

    PARANOPEN       shift and go to state 60


state 33

    (61) forloop2 -> LEVEL1 FOR . ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (62) forloop2 -> LEVEL1 FOR . ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (63) forloop2 -> LEVEL1 FOR . ID IN STR_CONST COLON
    (64) forloop2 -> LEVEL1 FOR . ID IN ID COLON
    (65) forloop2 -> LEVEL1 FOR . ID IN PARANOPEN STR_CONST PARANCLOSE COLON

    ID              shift and go to state 61


state 34

    (23) whileloop2 -> LEVEL1 WHILE . PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (24) whileloop2 -> LEVEL1 WHILE . PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (25) whileloop2 -> LEVEL1 WHILE . PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (26) whileloop2 -> LEVEL1 WHILE . PARANOPEN ID GREATER factor PARANCLOSE COLON
    (27) whileloop2 -> LEVEL1 WHILE . PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (28) whileloop2 -> LEVEL1 WHILE . PARANOPEN ID GREATER ID PARANCLOSE COLON
    (29) whileloop2 -> LEVEL1 WHILE . PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (30) whileloop2 -> LEVEL1 WHILE . PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (31) whileloop2 -> LEVEL1 WHILE . PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (32) whileloop2 -> LEVEL1 WHILE . PARANOPEN ID LESSER factor PARANCLOSE COLON
    (33) whileloop2 -> LEVEL1 WHILE . PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (34) whileloop2 -> LEVEL1 WHILE . PARANOPEN ID LESSER ID PARANCLOSE COLON
    (35) whileloop2 -> LEVEL1 WHILE . PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (36) whileloop2 -> LEVEL1 WHILE . PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (38) whileloop2 -> LEVEL1 WHILE . BOOL COLON
    (39) whileloop2 -> LEVEL1 WHILE . STR_CONST COLON
    (40) whileloop2 -> LEVEL1 WHILE . factor COLON
    (41) whileloop2 -> LEVEL1 WHILE . ID COLON
    (16) factor -> . INT
    (17) factor -> . FLOAT
    (18) factor -> . PARANOPEN expression PARANCLOSE

    PARANOPEN       shift and go to state 62
    BOOL            shift and go to state 66
    STR_CONST       shift and go to state 65
    ID              shift and go to state 63
    INT             shift and go to state 3
    FLOAT           shift and go to state 18

    factor                         shift and go to state 64

state 35

    (80) expression -> HASH expression .
    (5) expression -> expression . PLUS term
    (9) expression -> expression . MINUS term

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    $end            reduce using rule 80 (expression -> HASH expression .)
    PARANCLOSE      reduce using rule 80 (expression -> HASH expression .)
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20

  ! PLUS            [ reduce using rule 80 (expression -> HASH expression .) ]
  ! MINUS           [ reduce using rule 80 (expression -> HASH expression .) ]


state 36

    (81) expression -> HASH ID .
    (1) expression -> ID . EQUAL expression
    (2) expression -> ID . EQUAL STR_CONST
    (3) expression -> ID . EQUAL ID
    (4) expression -> ID . PLUS EQUAL INT
    (10) expression -> ID . MINUS EQUAL term

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    $end            reduce using rule 81 (expression -> HASH ID .)
    PARANCLOSE      reduce using rule 81 (expression -> HASH ID .)
    EQUAL           shift and go to state 21
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23

  ! PLUS            [ reduce using rule 81 (expression -> HASH ID .) ]
  ! MINUS           [ reduce using rule 81 (expression -> HASH ID .) ]


state 37

    (82) expression -> HASH STR_CONST .

    PLUS            reduce using rule 82 (expression -> HASH STR_CONST .)
    MINUS           reduce using rule 82 (expression -> HASH STR_CONST .)
    $end            reduce using rule 82 (expression -> HASH STR_CONST .)
    PARANCLOSE      reduce using rule 82 (expression -> HASH STR_CONST .)


state 38

    (42) whileloop -> WHILE PARANOPEN . ID EQUAL factor PARANCLOSE COLON
    (43) whileloop -> WHILE PARANOPEN . ID EQUAL STR_CONST PARANCLOSE COLON
    (44) whileloop -> WHILE PARANOPEN . ID EQUAL ID PARANCLOSE COLON
    (45) whileloop -> WHILE PARANOPEN . ID GREATER factor PARANCLOSE COLON
    (46) whileloop -> WHILE PARANOPEN . ID GREATER STR_CONST PARANCLOSE COLON
    (47) whileloop -> WHILE PARANOPEN . ID GREATER ID PARANCLOSE COLON
    (48) whileloop -> WHILE PARANOPEN . ID GREATEREQ factor PARANCLOSE COLON
    (49) whileloop -> WHILE PARANOPEN . ID GREATEREQ STR_CONST PARANCLOSE COLON
    (50) whileloop -> WHILE PARANOPEN . ID GREATEREQ ID PARANCLOSE COLON
    (51) whileloop -> WHILE PARANOPEN . ID LESSER factor PARANCLOSE COLON
    (52) whileloop -> WHILE PARANOPEN . ID LESSER STR_CONST PARANCLOSE COLON
    (53) whileloop -> WHILE PARANOPEN . ID LESSER ID PARANCLOSE COLON
    (54) whileloop -> WHILE PARANOPEN . ID LESSEREQ factor PARANCLOSE COLON
    (55) whileloop -> WHILE PARANOPEN . ID LESSEREQ STR_CONST PARANCLOSE COLON
    (56) whileloop -> WHILE PARANOPEN . ID LESSEREQ ID PARANCLOSE COLON
    (37) whileloop2 -> WHILE PARANOPEN . ID LESSEREQ ID PARANCLOSE COLON
    (18) factor -> PARANOPEN . expression PARANCLOSE
    (1) expression -> . ID EQUAL expression
    (2) expression -> . ID EQUAL STR_CONST
    (3) expression -> . ID EQUAL ID
    (4) expression -> . ID PLUS EQUAL INT
    (5) expression -> . expression PLUS term
    (6) expression -> . PRINT PARANOPEN STR_CONST PARANCLOSE
    (7) expression -> . PRINT PARANOPEN ID PARANCLOSE
    (8) expression -> . PRINT PARANOPEN term PARANCLOSE
    (9) expression -> . expression MINUS term
    (10) expression -> . ID MINUS EQUAL term
    (11) expression -> . MINUS term
    (12) expression -> . term
    (19) expression -> . whileloop
    (20) expression -> . forloop
    (21) expression -> . forloop2
    (22) expression -> . whileloop2
    (71) expression -> . LEVEL2 ID EQUAL INT
    (72) expression -> . LEVEL1 ID EQUAL INT
    (73) expression -> . LEVEL2 PRINT PARANOPEN STR_CONST PARANCLOSE
    (74) expression -> . LEVEL2 PRINT PARANOPEN ID PARANCLOSE
    (75) expression -> . LEVEL2 PRINT PARANOPEN term PARANCLOSE
    (76) expression -> . LEVEL1 PRINT PARANOPEN STR_CONST PARANCLOSE
    (77) expression -> . LEVEL1 PRINT PARANOPEN ID PARANCLOSE
    (78) expression -> . LEVEL1 PRINT PARANOPEN term PARANCLOSE
    (79) expression -> .
    (80) expression -> . HASH expression
    (81) expression -> . HASH ID
    (82) expression -> . HASH STR_CONST
    (13) term -> . term MULTIPLY factor
    (14) term -> . term DIVIDE factor
    (15) term -> . factor
    (42) whileloop -> . WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (43) whileloop -> . WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (44) whileloop -> . WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (45) whileloop -> . WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (46) whileloop -> . WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (47) whileloop -> . WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (48) whileloop -> . WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (49) whileloop -> . WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (50) whileloop -> . WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (51) whileloop -> . WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (52) whileloop -> . WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (53) whileloop -> . WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (54) whileloop -> . WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (55) whileloop -> . WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (56) whileloop -> . WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (57) whileloop -> . WHILE BOOL COLON
    (58) whileloop -> . WHILE STR_CONST COLON
    (59) whileloop -> . WHILE factor COLON
    (60) whileloop -> . WHILE ID COLON
    (66) forloop -> . FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (67) forloop -> . FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (68) forloop -> . FOR ID IN STR_CONST COLON
    (69) forloop -> . FOR ID IN ID COLON
    (70) forloop -> . FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (61) forloop2 -> . LEVEL1 FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (62) forloop2 -> . LEVEL1 FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (63) forloop2 -> . LEVEL1 FOR ID IN STR_CONST COLON
    (64) forloop2 -> . LEVEL1 FOR ID IN ID COLON
    (65) forloop2 -> . LEVEL1 FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (23) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (24) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (25) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (26) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (27) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (28) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (29) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (30) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (31) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (32) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (33) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (34) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (35) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (36) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (37) whileloop2 -> . WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (38) whileloop2 -> . LEVEL1 WHILE BOOL COLON
    (39) whileloop2 -> . LEVEL1 WHILE STR_CONST COLON
    (40) whileloop2 -> . LEVEL1 WHILE factor COLON
    (41) whileloop2 -> . LEVEL1 WHILE ID COLON
    (16) factor -> . INT
    (17) factor -> . FLOAT
    (18) factor -> . PARANOPEN expression PARANCLOSE

  ! shift/reduce conflict for MINUS resolved as shift
    ID              shift and go to state 67
    PRINT           shift and go to state 5
    MINUS           shift and go to state 7
    LEVEL2          shift and go to state 12
    LEVEL1          shift and go to state 13
    PARANCLOSE      reduce using rule 79 (expression -> .)
    PLUS            reduce using rule 79 (expression -> .)
    HASH            shift and go to state 14
    WHILE           shift and go to state 16
    FOR             shift and go to state 17
    INT             shift and go to state 3
    FLOAT           shift and go to state 18
    PARANOPEN       shift and go to state 6

  ! MINUS           [ reduce using rule 79 (expression -> .) ]

    factor                         shift and go to state 15
    expression                     shift and go to state 27
    term                           shift and go to state 4
    whileloop                      shift and go to state 8
    forloop                        shift and go to state 9
    forloop2                       shift and go to state 10
    whileloop2                     shift and go to state 11

state 39

    (60) whileloop -> WHILE ID . COLON

    COLON           shift and go to state 68


state 40

    (59) whileloop -> WHILE factor . COLON

    COLON           shift and go to state 69


state 41

    (58) whileloop -> WHILE STR_CONST . COLON

    COLON           shift and go to state 70


state 42

    (57) whileloop -> WHILE BOOL . COLON

    COLON           shift and go to state 71


state 43

    (66) forloop -> FOR ID . IN RANGE PARANOPEN term PARANCLOSE COLON
    (67) forloop -> FOR ID . IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (68) forloop -> FOR ID . IN STR_CONST COLON
    (69) forloop -> FOR ID . IN ID COLON
    (70) forloop -> FOR ID . IN PARANOPEN STR_CONST PARANCLOSE COLON

    IN              shift and go to state 72


state 44

    (5) expression -> expression PLUS term .
    (13) term -> term . MULTIPLY factor
    (14) term -> term . DIVIDE factor

    PLUS            reduce using rule 5 (expression -> expression PLUS term .)
    MINUS           reduce using rule 5 (expression -> expression PLUS term .)
    $end            reduce using rule 5 (expression -> expression PLUS term .)
    PARANCLOSE      reduce using rule 5 (expression -> expression PLUS term .)
    MULTIPLY        shift and go to state 24
    DIVIDE          shift and go to state 25


state 45

    (9) expression -> expression MINUS term .
    (13) term -> term . MULTIPLY factor
    (14) term -> term . DIVIDE factor

    PLUS            reduce using rule 9 (expression -> expression MINUS term .)
    MINUS           reduce using rule 9 (expression -> expression MINUS term .)
    $end            reduce using rule 9 (expression -> expression MINUS term .)
    PARANCLOSE      reduce using rule 9 (expression -> expression MINUS term .)
    MULTIPLY        shift and go to state 24
    DIVIDE          shift and go to state 25


state 46

    (3) expression -> ID EQUAL ID .
    (1) expression -> ID . EQUAL expression
    (2) expression -> ID . EQUAL STR_CONST
    (3) expression -> ID . EQUAL ID
    (4) expression -> ID . PLUS EQUAL INT
    (10) expression -> ID . MINUS EQUAL term

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    $end            reduce using rule 3 (expression -> ID EQUAL ID .)
    PARANCLOSE      reduce using rule 3 (expression -> ID EQUAL ID .)
    EQUAL           shift and go to state 21
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23

  ! PLUS            [ reduce using rule 3 (expression -> ID EQUAL ID .) ]
  ! MINUS           [ reduce using rule 3 (expression -> ID EQUAL ID .) ]


state 47

    (1) expression -> ID EQUAL expression .
    (5) expression -> expression . PLUS term
    (9) expression -> expression . MINUS term

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    $end            reduce using rule 1 (expression -> ID EQUAL expression .)
    PARANCLOSE      reduce using rule 1 (expression -> ID EQUAL expression .)
    PLUS            shift and go to state 19
    MINUS           shift and go to state 20

  ! PLUS            [ reduce using rule 1 (expression -> ID EQUAL expression .) ]
  ! MINUS           [ reduce using rule 1 (expression -> ID EQUAL expression .) ]


state 48

    (2) expression -> ID EQUAL STR_CONST .

    PLUS            reduce using rule 2 (expression -> ID EQUAL STR_CONST .)
    MINUS           reduce using rule 2 (expression -> ID EQUAL STR_CONST .)
    $end            reduce using rule 2 (expression -> ID EQUAL STR_CONST .)
    PARANCLOSE      reduce using rule 2 (expression -> ID EQUAL STR_CONST .)


state 49

    (4) expression -> ID PLUS EQUAL . INT

    INT             shift and go to state 73


state 50

    (10) expression -> ID MINUS EQUAL . term
    (13) term -> . term MULTIPLY factor
    (14) term -> . term DIVIDE factor
    (15) term -> . factor
    (16) factor -> . INT
    (17) factor -> . FLOAT
    (18) factor -> . PARANOPEN expression PARANCLOSE

    INT             shift and go to state 3
    FLOAT           shift and go to state 18
    PARANOPEN       shift and go to state 6

    term                           shift and go to state 74
    factor                         shift and go to state 15

state 51

    (13) term -> term MULTIPLY factor .

    MULTIPLY        reduce using rule 13 (term -> term MULTIPLY factor .)
    DIVIDE          reduce using rule 13 (term -> term MULTIPLY factor .)
    PLUS            reduce using rule 13 (term -> term MULTIPLY factor .)
    MINUS           reduce using rule 13 (term -> term MULTIPLY factor .)
    $end            reduce using rule 13 (term -> term MULTIPLY factor .)
    PARANCLOSE      reduce using rule 13 (term -> term MULTIPLY factor .)


state 52

    (14) term -> term DIVIDE factor .

    MULTIPLY        reduce using rule 14 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 14 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 14 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 14 (term -> term DIVIDE factor .)
    $end            reduce using rule 14 (term -> term DIVIDE factor .)
    PARANCLOSE      reduce using rule 14 (term -> term DIVIDE factor .)


state 53

    (6) expression -> PRINT PARANOPEN STR_CONST . PARANCLOSE

    PARANCLOSE      shift and go to state 75


state 54

    (7) expression -> PRINT PARANOPEN ID . PARANCLOSE

    PARANCLOSE      shift and go to state 76


state 55

    (8) expression -> PRINT PARANOPEN term . PARANCLOSE
    (13) term -> term . MULTIPLY factor
    (14) term -> term . DIVIDE factor

    PARANCLOSE      shift and go to state 77
    MULTIPLY        shift and go to state 24
    DIVIDE          shift and go to state 25


state 56

    (18) factor -> PARANOPEN expression PARANCLOSE .

    MULTIPLY        reduce using rule 18 (factor -> PARANOPEN expression PARANCLOSE .)
    DIVIDE          reduce using rule 18 (factor -> PARANOPEN expression PARANCLOSE .)
    PLUS            reduce using rule 18 (factor -> PARANOPEN expression PARANCLOSE .)
    MINUS           reduce using rule 18 (factor -> PARANOPEN expression PARANCLOSE .)
    $end            reduce using rule 18 (factor -> PARANOPEN expression PARANCLOSE .)
    PARANCLOSE      reduce using rule 18 (factor -> PARANOPEN expression PARANCLOSE .)
    COLON           reduce using rule 18 (factor -> PARANOPEN expression PARANCLOSE .)


state 57

    (71) expression -> LEVEL2 ID EQUAL . INT

    INT             shift and go to state 78


state 58

    (73) expression -> LEVEL2 PRINT PARANOPEN . STR_CONST PARANCLOSE
    (74) expression -> LEVEL2 PRINT PARANOPEN . ID PARANCLOSE
    (75) expression -> LEVEL2 PRINT PARANOPEN . term PARANCLOSE
    (13) term -> . term MULTIPLY factor
    (14) term -> . term DIVIDE factor
    (15) term -> . factor
    (16) factor -> . INT
    (17) factor -> . FLOAT
    (18) factor -> . PARANOPEN expression PARANCLOSE

    STR_CONST       shift and go to state 79
    ID              shift and go to state 80
    INT             shift and go to state 3
    FLOAT           shift and go to state 18
    PARANOPEN       shift and go to state 6

    term                           shift and go to state 81
    factor                         shift and go to state 15

state 59

    (72) expression -> LEVEL1 ID EQUAL . INT

    INT             shift and go to state 82


state 60

    (76) expression -> LEVEL1 PRINT PARANOPEN . STR_CONST PARANCLOSE
    (77) expression -> LEVEL1 PRINT PARANOPEN . ID PARANCLOSE
    (78) expression -> LEVEL1 PRINT PARANOPEN . term PARANCLOSE
    (13) term -> . term MULTIPLY factor
    (14) term -> . term DIVIDE factor
    (15) term -> . factor
    (16) factor -> . INT
    (17) factor -> . FLOAT
    (18) factor -> . PARANOPEN expression PARANCLOSE

    STR_CONST       shift and go to state 83
    ID              shift and go to state 84
    INT             shift and go to state 3
    FLOAT           shift and go to state 18
    PARANOPEN       shift and go to state 6

    term                           shift and go to state 85
    factor                         shift and go to state 15

state 61

    (61) forloop2 -> LEVEL1 FOR ID . IN RANGE PARANOPEN term PARANCLOSE COLON
    (62) forloop2 -> LEVEL1 FOR ID . IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (63) forloop2 -> LEVEL1 FOR ID . IN STR_CONST COLON
    (64) forloop2 -> LEVEL1 FOR ID . IN ID COLON
    (65) forloop2 -> LEVEL1 FOR ID . IN PARANOPEN STR_CONST PARANCLOSE COLON

    IN              shift and go to state 86


state 62

    (23) whileloop2 -> LEVEL1 WHILE PARANOPEN . ID EQUAL factor PARANCLOSE COLON
    (24) whileloop2 -> LEVEL1 WHILE PARANOPEN . ID EQUAL STR_CONST PARANCLOSE COLON
    (25) whileloop2 -> LEVEL1 WHILE PARANOPEN . ID EQUAL ID PARANCLOSE COLON
    (26) whileloop2 -> LEVEL1 WHILE PARANOPEN . ID GREATER factor PARANCLOSE COLON
    (27) whileloop2 -> LEVEL1 WHILE PARANOPEN . ID GREATER STR_CONST PARANCLOSE COLON
    (28) whileloop2 -> LEVEL1 WHILE PARANOPEN . ID GREATER ID PARANCLOSE COLON
    (29) whileloop2 -> LEVEL1 WHILE PARANOPEN . ID GREATEREQ factor PARANCLOSE COLON
    (30) whileloop2 -> LEVEL1 WHILE PARANOPEN . ID GREATEREQ STR_CONST PARANCLOSE COLON
    (31) whileloop2 -> LEVEL1 WHILE PARANOPEN . ID GREATEREQ ID PARANCLOSE COLON
    (32) whileloop2 -> LEVEL1 WHILE PARANOPEN . ID LESSER factor PARANCLOSE COLON
    (33) whileloop2 -> LEVEL1 WHILE PARANOPEN . ID LESSER STR_CONST PARANCLOSE COLON
    (34) whileloop2 -> LEVEL1 WHILE PARANOPEN . ID LESSER ID PARANCLOSE COLON
    (35) whileloop2 -> LEVEL1 WHILE PARANOPEN . ID LESSEREQ factor PARANCLOSE COLON
    (36) whileloop2 -> LEVEL1 WHILE PARANOPEN . ID LESSEREQ STR_CONST PARANCLOSE COLON
    (18) factor -> PARANOPEN . expression PARANCLOSE
    (1) expression -> . ID EQUAL expression
    (2) expression -> . ID EQUAL STR_CONST
    (3) expression -> . ID EQUAL ID
    (4) expression -> . ID PLUS EQUAL INT
    (5) expression -> . expression PLUS term
    (6) expression -> . PRINT PARANOPEN STR_CONST PARANCLOSE
    (7) expression -> . PRINT PARANOPEN ID PARANCLOSE
    (8) expression -> . PRINT PARANOPEN term PARANCLOSE
    (9) expression -> . expression MINUS term
    (10) expression -> . ID MINUS EQUAL term
    (11) expression -> . MINUS term
    (12) expression -> . term
    (19) expression -> . whileloop
    (20) expression -> . forloop
    (21) expression -> . forloop2
    (22) expression -> . whileloop2
    (71) expression -> . LEVEL2 ID EQUAL INT
    (72) expression -> . LEVEL1 ID EQUAL INT
    (73) expression -> . LEVEL2 PRINT PARANOPEN STR_CONST PARANCLOSE
    (74) expression -> . LEVEL2 PRINT PARANOPEN ID PARANCLOSE
    (75) expression -> . LEVEL2 PRINT PARANOPEN term PARANCLOSE
    (76) expression -> . LEVEL1 PRINT PARANOPEN STR_CONST PARANCLOSE
    (77) expression -> . LEVEL1 PRINT PARANOPEN ID PARANCLOSE
    (78) expression -> . LEVEL1 PRINT PARANOPEN term PARANCLOSE
    (79) expression -> .
    (80) expression -> . HASH expression
    (81) expression -> . HASH ID
    (82) expression -> . HASH STR_CONST
    (13) term -> . term MULTIPLY factor
    (14) term -> . term DIVIDE factor
    (15) term -> . factor
    (42) whileloop -> . WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (43) whileloop -> . WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (44) whileloop -> . WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (45) whileloop -> . WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (46) whileloop -> . WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (47) whileloop -> . WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (48) whileloop -> . WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (49) whileloop -> . WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (50) whileloop -> . WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (51) whileloop -> . WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (52) whileloop -> . WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (53) whileloop -> . WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (54) whileloop -> . WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (55) whileloop -> . WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (56) whileloop -> . WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (57) whileloop -> . WHILE BOOL COLON
    (58) whileloop -> . WHILE STR_CONST COLON
    (59) whileloop -> . WHILE factor COLON
    (60) whileloop -> . WHILE ID COLON
    (66) forloop -> . FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (67) forloop -> . FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (68) forloop -> . FOR ID IN STR_CONST COLON
    (69) forloop -> . FOR ID IN ID COLON
    (70) forloop -> . FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (61) forloop2 -> . LEVEL1 FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (62) forloop2 -> . LEVEL1 FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (63) forloop2 -> . LEVEL1 FOR ID IN STR_CONST COLON
    (64) forloop2 -> . LEVEL1 FOR ID IN ID COLON
    (65) forloop2 -> . LEVEL1 FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (23) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (24) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (25) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (26) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (27) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (28) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (29) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (30) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (31) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (32) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (33) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (34) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (35) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (36) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (37) whileloop2 -> . WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (38) whileloop2 -> . LEVEL1 WHILE BOOL COLON
    (39) whileloop2 -> . LEVEL1 WHILE STR_CONST COLON
    (40) whileloop2 -> . LEVEL1 WHILE factor COLON
    (41) whileloop2 -> . LEVEL1 WHILE ID COLON
    (16) factor -> . INT
    (17) factor -> . FLOAT
    (18) factor -> . PARANOPEN expression PARANCLOSE

  ! shift/reduce conflict for MINUS resolved as shift
    ID              shift and go to state 87
    PRINT           shift and go to state 5
    MINUS           shift and go to state 7
    LEVEL2          shift and go to state 12
    LEVEL1          shift and go to state 13
    PARANCLOSE      reduce using rule 79 (expression -> .)
    PLUS            reduce using rule 79 (expression -> .)
    HASH            shift and go to state 14
    WHILE           shift and go to state 16
    FOR             shift and go to state 17
    INT             shift and go to state 3
    FLOAT           shift and go to state 18
    PARANOPEN       shift and go to state 6

  ! MINUS           [ reduce using rule 79 (expression -> .) ]

    factor                         shift and go to state 15
    expression                     shift and go to state 27
    term                           shift and go to state 4
    whileloop                      shift and go to state 8
    forloop                        shift and go to state 9
    forloop2                       shift and go to state 10
    whileloop2                     shift and go to state 11

state 63

    (41) whileloop2 -> LEVEL1 WHILE ID . COLON

    COLON           shift and go to state 88


state 64

    (40) whileloop2 -> LEVEL1 WHILE factor . COLON

    COLON           shift and go to state 89


state 65

    (39) whileloop2 -> LEVEL1 WHILE STR_CONST . COLON

    COLON           shift and go to state 90


state 66

    (38) whileloop2 -> LEVEL1 WHILE BOOL . COLON

    COLON           shift and go to state 91


state 67

    (42) whileloop -> WHILE PARANOPEN ID . EQUAL factor PARANCLOSE COLON
    (43) whileloop -> WHILE PARANOPEN ID . EQUAL STR_CONST PARANCLOSE COLON
    (44) whileloop -> WHILE PARANOPEN ID . EQUAL ID PARANCLOSE COLON
    (45) whileloop -> WHILE PARANOPEN ID . GREATER factor PARANCLOSE COLON
    (46) whileloop -> WHILE PARANOPEN ID . GREATER STR_CONST PARANCLOSE COLON
    (47) whileloop -> WHILE PARANOPEN ID . GREATER ID PARANCLOSE COLON
    (48) whileloop -> WHILE PARANOPEN ID . GREATEREQ factor PARANCLOSE COLON
    (49) whileloop -> WHILE PARANOPEN ID . GREATEREQ STR_CONST PARANCLOSE COLON
    (50) whileloop -> WHILE PARANOPEN ID . GREATEREQ ID PARANCLOSE COLON
    (51) whileloop -> WHILE PARANOPEN ID . LESSER factor PARANCLOSE COLON
    (52) whileloop -> WHILE PARANOPEN ID . LESSER STR_CONST PARANCLOSE COLON
    (53) whileloop -> WHILE PARANOPEN ID . LESSER ID PARANCLOSE COLON
    (54) whileloop -> WHILE PARANOPEN ID . LESSEREQ factor PARANCLOSE COLON
    (55) whileloop -> WHILE PARANOPEN ID . LESSEREQ STR_CONST PARANCLOSE COLON
    (56) whileloop -> WHILE PARANOPEN ID . LESSEREQ ID PARANCLOSE COLON
    (37) whileloop2 -> WHILE PARANOPEN ID . LESSEREQ ID PARANCLOSE COLON
    (1) expression -> ID . EQUAL expression
    (2) expression -> ID . EQUAL STR_CONST
    (3) expression -> ID . EQUAL ID
    (4) expression -> ID . PLUS EQUAL INT
    (10) expression -> ID . MINUS EQUAL term

    EQUAL           shift and go to state 92
    GREATER         shift and go to state 93
    GREATEREQ       shift and go to state 94
    LESSER          shift and go to state 95
    LESSEREQ        shift and go to state 96
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23


state 68

    (60) whileloop -> WHILE ID COLON .

    PLUS            reduce using rule 60 (whileloop -> WHILE ID COLON .)
    MINUS           reduce using rule 60 (whileloop -> WHILE ID COLON .)
    $end            reduce using rule 60 (whileloop -> WHILE ID COLON .)
    PARANCLOSE      reduce using rule 60 (whileloop -> WHILE ID COLON .)


state 69

    (59) whileloop -> WHILE factor COLON .

    PLUS            reduce using rule 59 (whileloop -> WHILE factor COLON .)
    MINUS           reduce using rule 59 (whileloop -> WHILE factor COLON .)
    $end            reduce using rule 59 (whileloop -> WHILE factor COLON .)
    PARANCLOSE      reduce using rule 59 (whileloop -> WHILE factor COLON .)


state 70

    (58) whileloop -> WHILE STR_CONST COLON .

    PLUS            reduce using rule 58 (whileloop -> WHILE STR_CONST COLON .)
    MINUS           reduce using rule 58 (whileloop -> WHILE STR_CONST COLON .)
    $end            reduce using rule 58 (whileloop -> WHILE STR_CONST COLON .)
    PARANCLOSE      reduce using rule 58 (whileloop -> WHILE STR_CONST COLON .)


state 71

    (57) whileloop -> WHILE BOOL COLON .

    PLUS            reduce using rule 57 (whileloop -> WHILE BOOL COLON .)
    MINUS           reduce using rule 57 (whileloop -> WHILE BOOL COLON .)
    $end            reduce using rule 57 (whileloop -> WHILE BOOL COLON .)
    PARANCLOSE      reduce using rule 57 (whileloop -> WHILE BOOL COLON .)


state 72

    (66) forloop -> FOR ID IN . RANGE PARANOPEN term PARANCLOSE COLON
    (67) forloop -> FOR ID IN . RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (68) forloop -> FOR ID IN . STR_CONST COLON
    (69) forloop -> FOR ID IN . ID COLON
    (70) forloop -> FOR ID IN . PARANOPEN STR_CONST PARANCLOSE COLON

    RANGE           shift and go to state 98
    STR_CONST       shift and go to state 100
    ID              shift and go to state 97
    PARANOPEN       shift and go to state 99


state 73

    (4) expression -> ID PLUS EQUAL INT .

    PLUS            reduce using rule 4 (expression -> ID PLUS EQUAL INT .)
    MINUS           reduce using rule 4 (expression -> ID PLUS EQUAL INT .)
    $end            reduce using rule 4 (expression -> ID PLUS EQUAL INT .)
    PARANCLOSE      reduce using rule 4 (expression -> ID PLUS EQUAL INT .)


state 74

    (10) expression -> ID MINUS EQUAL term .
    (13) term -> term . MULTIPLY factor
    (14) term -> term . DIVIDE factor

    PLUS            reduce using rule 10 (expression -> ID MINUS EQUAL term .)
    MINUS           reduce using rule 10 (expression -> ID MINUS EQUAL term .)
    $end            reduce using rule 10 (expression -> ID MINUS EQUAL term .)
    PARANCLOSE      reduce using rule 10 (expression -> ID MINUS EQUAL term .)
    MULTIPLY        shift and go to state 24
    DIVIDE          shift and go to state 25


state 75

    (6) expression -> PRINT PARANOPEN STR_CONST PARANCLOSE .

    PLUS            reduce using rule 6 (expression -> PRINT PARANOPEN STR_CONST PARANCLOSE .)
    MINUS           reduce using rule 6 (expression -> PRINT PARANOPEN STR_CONST PARANCLOSE .)
    $end            reduce using rule 6 (expression -> PRINT PARANOPEN STR_CONST PARANCLOSE .)
    PARANCLOSE      reduce using rule 6 (expression -> PRINT PARANOPEN STR_CONST PARANCLOSE .)


state 76

    (7) expression -> PRINT PARANOPEN ID PARANCLOSE .

    PLUS            reduce using rule 7 (expression -> PRINT PARANOPEN ID PARANCLOSE .)
    MINUS           reduce using rule 7 (expression -> PRINT PARANOPEN ID PARANCLOSE .)
    $end            reduce using rule 7 (expression -> PRINT PARANOPEN ID PARANCLOSE .)
    PARANCLOSE      reduce using rule 7 (expression -> PRINT PARANOPEN ID PARANCLOSE .)


state 77

    (8) expression -> PRINT PARANOPEN term PARANCLOSE .

    PLUS            reduce using rule 8 (expression -> PRINT PARANOPEN term PARANCLOSE .)
    MINUS           reduce using rule 8 (expression -> PRINT PARANOPEN term PARANCLOSE .)
    $end            reduce using rule 8 (expression -> PRINT PARANOPEN term PARANCLOSE .)
    PARANCLOSE      reduce using rule 8 (expression -> PRINT PARANOPEN term PARANCLOSE .)


state 78

    (71) expression -> LEVEL2 ID EQUAL INT .

    PLUS            reduce using rule 71 (expression -> LEVEL2 ID EQUAL INT .)
    MINUS           reduce using rule 71 (expression -> LEVEL2 ID EQUAL INT .)
    $end            reduce using rule 71 (expression -> LEVEL2 ID EQUAL INT .)
    PARANCLOSE      reduce using rule 71 (expression -> LEVEL2 ID EQUAL INT .)


state 79

    (73) expression -> LEVEL2 PRINT PARANOPEN STR_CONST . PARANCLOSE

    PARANCLOSE      shift and go to state 101


state 80

    (74) expression -> LEVEL2 PRINT PARANOPEN ID . PARANCLOSE

    PARANCLOSE      shift and go to state 102


state 81

    (75) expression -> LEVEL2 PRINT PARANOPEN term . PARANCLOSE
    (13) term -> term . MULTIPLY factor
    (14) term -> term . DIVIDE factor

    PARANCLOSE      shift and go to state 103
    MULTIPLY        shift and go to state 24
    DIVIDE          shift and go to state 25


state 82

    (72) expression -> LEVEL1 ID EQUAL INT .

    PLUS            reduce using rule 72 (expression -> LEVEL1 ID EQUAL INT .)
    MINUS           reduce using rule 72 (expression -> LEVEL1 ID EQUAL INT .)
    $end            reduce using rule 72 (expression -> LEVEL1 ID EQUAL INT .)
    PARANCLOSE      reduce using rule 72 (expression -> LEVEL1 ID EQUAL INT .)


state 83

    (76) expression -> LEVEL1 PRINT PARANOPEN STR_CONST . PARANCLOSE

    PARANCLOSE      shift and go to state 104


state 84

    (77) expression -> LEVEL1 PRINT PARANOPEN ID . PARANCLOSE

    PARANCLOSE      shift and go to state 105


state 85

    (78) expression -> LEVEL1 PRINT PARANOPEN term . PARANCLOSE
    (13) term -> term . MULTIPLY factor
    (14) term -> term . DIVIDE factor

    PARANCLOSE      shift and go to state 106
    MULTIPLY        shift and go to state 24
    DIVIDE          shift and go to state 25


state 86

    (61) forloop2 -> LEVEL1 FOR ID IN . RANGE PARANOPEN term PARANCLOSE COLON
    (62) forloop2 -> LEVEL1 FOR ID IN . RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (63) forloop2 -> LEVEL1 FOR ID IN . STR_CONST COLON
    (64) forloop2 -> LEVEL1 FOR ID IN . ID COLON
    (65) forloop2 -> LEVEL1 FOR ID IN . PARANOPEN STR_CONST PARANCLOSE COLON

    RANGE           shift and go to state 108
    STR_CONST       shift and go to state 110
    ID              shift and go to state 107
    PARANOPEN       shift and go to state 109


state 87

    (23) whileloop2 -> LEVEL1 WHILE PARANOPEN ID . EQUAL factor PARANCLOSE COLON
    (24) whileloop2 -> LEVEL1 WHILE PARANOPEN ID . EQUAL STR_CONST PARANCLOSE COLON
    (25) whileloop2 -> LEVEL1 WHILE PARANOPEN ID . EQUAL ID PARANCLOSE COLON
    (26) whileloop2 -> LEVEL1 WHILE PARANOPEN ID . GREATER factor PARANCLOSE COLON
    (27) whileloop2 -> LEVEL1 WHILE PARANOPEN ID . GREATER STR_CONST PARANCLOSE COLON
    (28) whileloop2 -> LEVEL1 WHILE PARANOPEN ID . GREATER ID PARANCLOSE COLON
    (29) whileloop2 -> LEVEL1 WHILE PARANOPEN ID . GREATEREQ factor PARANCLOSE COLON
    (30) whileloop2 -> LEVEL1 WHILE PARANOPEN ID . GREATEREQ STR_CONST PARANCLOSE COLON
    (31) whileloop2 -> LEVEL1 WHILE PARANOPEN ID . GREATEREQ ID PARANCLOSE COLON
    (32) whileloop2 -> LEVEL1 WHILE PARANOPEN ID . LESSER factor PARANCLOSE COLON
    (33) whileloop2 -> LEVEL1 WHILE PARANOPEN ID . LESSER STR_CONST PARANCLOSE COLON
    (34) whileloop2 -> LEVEL1 WHILE PARANOPEN ID . LESSER ID PARANCLOSE COLON
    (35) whileloop2 -> LEVEL1 WHILE PARANOPEN ID . LESSEREQ factor PARANCLOSE COLON
    (36) whileloop2 -> LEVEL1 WHILE PARANOPEN ID . LESSEREQ STR_CONST PARANCLOSE COLON
    (1) expression -> ID . EQUAL expression
    (2) expression -> ID . EQUAL STR_CONST
    (3) expression -> ID . EQUAL ID
    (4) expression -> ID . PLUS EQUAL INT
    (10) expression -> ID . MINUS EQUAL term

    EQUAL           shift and go to state 111
    GREATER         shift and go to state 112
    GREATEREQ       shift and go to state 113
    LESSER          shift and go to state 114
    LESSEREQ        shift and go to state 115
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23


state 88

    (41) whileloop2 -> LEVEL1 WHILE ID COLON .

    PLUS            reduce using rule 41 (whileloop2 -> LEVEL1 WHILE ID COLON .)
    MINUS           reduce using rule 41 (whileloop2 -> LEVEL1 WHILE ID COLON .)
    $end            reduce using rule 41 (whileloop2 -> LEVEL1 WHILE ID COLON .)
    PARANCLOSE      reduce using rule 41 (whileloop2 -> LEVEL1 WHILE ID COLON .)


state 89

    (40) whileloop2 -> LEVEL1 WHILE factor COLON .

    PLUS            reduce using rule 40 (whileloop2 -> LEVEL1 WHILE factor COLON .)
    MINUS           reduce using rule 40 (whileloop2 -> LEVEL1 WHILE factor COLON .)
    $end            reduce using rule 40 (whileloop2 -> LEVEL1 WHILE factor COLON .)
    PARANCLOSE      reduce using rule 40 (whileloop2 -> LEVEL1 WHILE factor COLON .)


state 90

    (39) whileloop2 -> LEVEL1 WHILE STR_CONST COLON .

    PLUS            reduce using rule 39 (whileloop2 -> LEVEL1 WHILE STR_CONST COLON .)
    MINUS           reduce using rule 39 (whileloop2 -> LEVEL1 WHILE STR_CONST COLON .)
    $end            reduce using rule 39 (whileloop2 -> LEVEL1 WHILE STR_CONST COLON .)
    PARANCLOSE      reduce using rule 39 (whileloop2 -> LEVEL1 WHILE STR_CONST COLON .)


state 91

    (38) whileloop2 -> LEVEL1 WHILE BOOL COLON .

    PLUS            reduce using rule 38 (whileloop2 -> LEVEL1 WHILE BOOL COLON .)
    MINUS           reduce using rule 38 (whileloop2 -> LEVEL1 WHILE BOOL COLON .)
    $end            reduce using rule 38 (whileloop2 -> LEVEL1 WHILE BOOL COLON .)
    PARANCLOSE      reduce using rule 38 (whileloop2 -> LEVEL1 WHILE BOOL COLON .)


state 92

    (42) whileloop -> WHILE PARANOPEN ID EQUAL . factor PARANCLOSE COLON
    (43) whileloop -> WHILE PARANOPEN ID EQUAL . STR_CONST PARANCLOSE COLON
    (44) whileloop -> WHILE PARANOPEN ID EQUAL . ID PARANCLOSE COLON
    (1) expression -> ID EQUAL . expression
    (2) expression -> ID EQUAL . STR_CONST
    (3) expression -> ID EQUAL . ID
    (16) factor -> . INT
    (17) factor -> . FLOAT
    (18) factor -> . PARANOPEN expression PARANCLOSE
    (1) expression -> . ID EQUAL expression
    (2) expression -> . ID EQUAL STR_CONST
    (3) expression -> . ID EQUAL ID
    (4) expression -> . ID PLUS EQUAL INT
    (5) expression -> . expression PLUS term
    (6) expression -> . PRINT PARANOPEN STR_CONST PARANCLOSE
    (7) expression -> . PRINT PARANOPEN ID PARANCLOSE
    (8) expression -> . PRINT PARANOPEN term PARANCLOSE
    (9) expression -> . expression MINUS term
    (10) expression -> . ID MINUS EQUAL term
    (11) expression -> . MINUS term
    (12) expression -> . term
    (19) expression -> . whileloop
    (20) expression -> . forloop
    (21) expression -> . forloop2
    (22) expression -> . whileloop2
    (71) expression -> . LEVEL2 ID EQUAL INT
    (72) expression -> . LEVEL1 ID EQUAL INT
    (73) expression -> . LEVEL2 PRINT PARANOPEN STR_CONST PARANCLOSE
    (74) expression -> . LEVEL2 PRINT PARANOPEN ID PARANCLOSE
    (75) expression -> . LEVEL2 PRINT PARANOPEN term PARANCLOSE
    (76) expression -> . LEVEL1 PRINT PARANOPEN STR_CONST PARANCLOSE
    (77) expression -> . LEVEL1 PRINT PARANOPEN ID PARANCLOSE
    (78) expression -> . LEVEL1 PRINT PARANOPEN term PARANCLOSE
    (79) expression -> .
    (80) expression -> . HASH expression
    (81) expression -> . HASH ID
    (82) expression -> . HASH STR_CONST
    (13) term -> . term MULTIPLY factor
    (14) term -> . term DIVIDE factor
    (15) term -> . factor
    (42) whileloop -> . WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (43) whileloop -> . WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (44) whileloop -> . WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (45) whileloop -> . WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (46) whileloop -> . WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (47) whileloop -> . WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (48) whileloop -> . WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (49) whileloop -> . WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (50) whileloop -> . WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (51) whileloop -> . WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (52) whileloop -> . WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (53) whileloop -> . WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (54) whileloop -> . WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (55) whileloop -> . WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (56) whileloop -> . WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (57) whileloop -> . WHILE BOOL COLON
    (58) whileloop -> . WHILE STR_CONST COLON
    (59) whileloop -> . WHILE factor COLON
    (60) whileloop -> . WHILE ID COLON
    (66) forloop -> . FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (67) forloop -> . FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (68) forloop -> . FOR ID IN STR_CONST COLON
    (69) forloop -> . FOR ID IN ID COLON
    (70) forloop -> . FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (61) forloop2 -> . LEVEL1 FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (62) forloop2 -> . LEVEL1 FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (63) forloop2 -> . LEVEL1 FOR ID IN STR_CONST COLON
    (64) forloop2 -> . LEVEL1 FOR ID IN ID COLON
    (65) forloop2 -> . LEVEL1 FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (23) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (24) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (25) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (26) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (27) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (28) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (29) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (30) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (31) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (32) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (33) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (34) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (35) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (36) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (37) whileloop2 -> . WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (38) whileloop2 -> . LEVEL1 WHILE BOOL COLON
    (39) whileloop2 -> . LEVEL1 WHILE STR_CONST COLON
    (40) whileloop2 -> . LEVEL1 WHILE factor COLON
    (41) whileloop2 -> . LEVEL1 WHILE ID COLON

  ! shift/reduce conflict for MINUS resolved as shift
    STR_CONST       shift and go to state 118
    ID              shift and go to state 116
    INT             shift and go to state 3
    FLOAT           shift and go to state 18
    PARANOPEN       shift and go to state 6
    PRINT           shift and go to state 5
    MINUS           shift and go to state 7
    LEVEL2          shift and go to state 12
    LEVEL1          shift and go to state 13
    PLUS            reduce using rule 79 (expression -> .)
    PARANCLOSE      reduce using rule 79 (expression -> .)
    HASH            shift and go to state 14
    WHILE           shift and go to state 16
    FOR             shift and go to state 17

  ! MINUS           [ reduce using rule 79 (expression -> .) ]

    factor                         shift and go to state 117
    expression                     shift and go to state 47
    term                           shift and go to state 4
    whileloop                      shift and go to state 8
    forloop                        shift and go to state 9
    forloop2                       shift and go to state 10
    whileloop2                     shift and go to state 11

state 93

    (45) whileloop -> WHILE PARANOPEN ID GREATER . factor PARANCLOSE COLON
    (46) whileloop -> WHILE PARANOPEN ID GREATER . STR_CONST PARANCLOSE COLON
    (47) whileloop -> WHILE PARANOPEN ID GREATER . ID PARANCLOSE COLON
    (16) factor -> . INT
    (17) factor -> . FLOAT
    (18) factor -> . PARANOPEN expression PARANCLOSE

    STR_CONST       shift and go to state 121
    ID              shift and go to state 119
    INT             shift and go to state 3
    FLOAT           shift and go to state 18
    PARANOPEN       shift and go to state 6

    factor                         shift and go to state 120

state 94

    (48) whileloop -> WHILE PARANOPEN ID GREATEREQ . factor PARANCLOSE COLON
    (49) whileloop -> WHILE PARANOPEN ID GREATEREQ . STR_CONST PARANCLOSE COLON
    (50) whileloop -> WHILE PARANOPEN ID GREATEREQ . ID PARANCLOSE COLON
    (16) factor -> . INT
    (17) factor -> . FLOAT
    (18) factor -> . PARANOPEN expression PARANCLOSE

    STR_CONST       shift and go to state 124
    ID              shift and go to state 122
    INT             shift and go to state 3
    FLOAT           shift and go to state 18
    PARANOPEN       shift and go to state 6

    factor                         shift and go to state 123

state 95

    (51) whileloop -> WHILE PARANOPEN ID LESSER . factor PARANCLOSE COLON
    (52) whileloop -> WHILE PARANOPEN ID LESSER . STR_CONST PARANCLOSE COLON
    (53) whileloop -> WHILE PARANOPEN ID LESSER . ID PARANCLOSE COLON
    (16) factor -> . INT
    (17) factor -> . FLOAT
    (18) factor -> . PARANOPEN expression PARANCLOSE

    STR_CONST       shift and go to state 127
    ID              shift and go to state 125
    INT             shift and go to state 3
    FLOAT           shift and go to state 18
    PARANOPEN       shift and go to state 6

    factor                         shift and go to state 126

state 96

    (54) whileloop -> WHILE PARANOPEN ID LESSEREQ . factor PARANCLOSE COLON
    (55) whileloop -> WHILE PARANOPEN ID LESSEREQ . STR_CONST PARANCLOSE COLON
    (56) whileloop -> WHILE PARANOPEN ID LESSEREQ . ID PARANCLOSE COLON
    (37) whileloop2 -> WHILE PARANOPEN ID LESSEREQ . ID PARANCLOSE COLON
    (16) factor -> . INT
    (17) factor -> . FLOAT
    (18) factor -> . PARANOPEN expression PARANCLOSE

    STR_CONST       shift and go to state 130
    ID              shift and go to state 128
    INT             shift and go to state 3
    FLOAT           shift and go to state 18
    PARANOPEN       shift and go to state 6

    factor                         shift and go to state 129

state 97

    (69) forloop -> FOR ID IN ID . COLON

    COLON           shift and go to state 131


state 98

    (66) forloop -> FOR ID IN RANGE . PARANOPEN term PARANCLOSE COLON
    (67) forloop -> FOR ID IN RANGE . PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON

    PARANOPEN       shift and go to state 132


state 99

    (70) forloop -> FOR ID IN PARANOPEN . STR_CONST PARANCLOSE COLON

    STR_CONST       shift and go to state 133


state 100

    (68) forloop -> FOR ID IN STR_CONST . COLON

    COLON           shift and go to state 134


state 101

    (73) expression -> LEVEL2 PRINT PARANOPEN STR_CONST PARANCLOSE .

    PLUS            reduce using rule 73 (expression -> LEVEL2 PRINT PARANOPEN STR_CONST PARANCLOSE .)
    MINUS           reduce using rule 73 (expression -> LEVEL2 PRINT PARANOPEN STR_CONST PARANCLOSE .)
    $end            reduce using rule 73 (expression -> LEVEL2 PRINT PARANOPEN STR_CONST PARANCLOSE .)
    PARANCLOSE      reduce using rule 73 (expression -> LEVEL2 PRINT PARANOPEN STR_CONST PARANCLOSE .)


state 102

    (74) expression -> LEVEL2 PRINT PARANOPEN ID PARANCLOSE .

    PLUS            reduce using rule 74 (expression -> LEVEL2 PRINT PARANOPEN ID PARANCLOSE .)
    MINUS           reduce using rule 74 (expression -> LEVEL2 PRINT PARANOPEN ID PARANCLOSE .)
    $end            reduce using rule 74 (expression -> LEVEL2 PRINT PARANOPEN ID PARANCLOSE .)
    PARANCLOSE      reduce using rule 74 (expression -> LEVEL2 PRINT PARANOPEN ID PARANCLOSE .)


state 103

    (75) expression -> LEVEL2 PRINT PARANOPEN term PARANCLOSE .

    PLUS            reduce using rule 75 (expression -> LEVEL2 PRINT PARANOPEN term PARANCLOSE .)
    MINUS           reduce using rule 75 (expression -> LEVEL2 PRINT PARANOPEN term PARANCLOSE .)
    $end            reduce using rule 75 (expression -> LEVEL2 PRINT PARANOPEN term PARANCLOSE .)
    PARANCLOSE      reduce using rule 75 (expression -> LEVEL2 PRINT PARANOPEN term PARANCLOSE .)


state 104

    (76) expression -> LEVEL1 PRINT PARANOPEN STR_CONST PARANCLOSE .

    PLUS            reduce using rule 76 (expression -> LEVEL1 PRINT PARANOPEN STR_CONST PARANCLOSE .)
    MINUS           reduce using rule 76 (expression -> LEVEL1 PRINT PARANOPEN STR_CONST PARANCLOSE .)
    $end            reduce using rule 76 (expression -> LEVEL1 PRINT PARANOPEN STR_CONST PARANCLOSE .)
    PARANCLOSE      reduce using rule 76 (expression -> LEVEL1 PRINT PARANOPEN STR_CONST PARANCLOSE .)


state 105

    (77) expression -> LEVEL1 PRINT PARANOPEN ID PARANCLOSE .

    PLUS            reduce using rule 77 (expression -> LEVEL1 PRINT PARANOPEN ID PARANCLOSE .)
    MINUS           reduce using rule 77 (expression -> LEVEL1 PRINT PARANOPEN ID PARANCLOSE .)
    $end            reduce using rule 77 (expression -> LEVEL1 PRINT PARANOPEN ID PARANCLOSE .)
    PARANCLOSE      reduce using rule 77 (expression -> LEVEL1 PRINT PARANOPEN ID PARANCLOSE .)


state 106

    (78) expression -> LEVEL1 PRINT PARANOPEN term PARANCLOSE .

    PLUS            reduce using rule 78 (expression -> LEVEL1 PRINT PARANOPEN term PARANCLOSE .)
    MINUS           reduce using rule 78 (expression -> LEVEL1 PRINT PARANOPEN term PARANCLOSE .)
    $end            reduce using rule 78 (expression -> LEVEL1 PRINT PARANOPEN term PARANCLOSE .)
    PARANCLOSE      reduce using rule 78 (expression -> LEVEL1 PRINT PARANOPEN term PARANCLOSE .)


state 107

    (64) forloop2 -> LEVEL1 FOR ID IN ID . COLON

    COLON           shift and go to state 135


state 108

    (61) forloop2 -> LEVEL1 FOR ID IN RANGE . PARANOPEN term PARANCLOSE COLON
    (62) forloop2 -> LEVEL1 FOR ID IN RANGE . PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON

    PARANOPEN       shift and go to state 136


state 109

    (65) forloop2 -> LEVEL1 FOR ID IN PARANOPEN . STR_CONST PARANCLOSE COLON

    STR_CONST       shift and go to state 137


state 110

    (63) forloop2 -> LEVEL1 FOR ID IN STR_CONST . COLON

    COLON           shift and go to state 138


state 111

    (23) whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL . factor PARANCLOSE COLON
    (24) whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL . STR_CONST PARANCLOSE COLON
    (25) whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL . ID PARANCLOSE COLON
    (1) expression -> ID EQUAL . expression
    (2) expression -> ID EQUAL . STR_CONST
    (3) expression -> ID EQUAL . ID
    (16) factor -> . INT
    (17) factor -> . FLOAT
    (18) factor -> . PARANOPEN expression PARANCLOSE
    (1) expression -> . ID EQUAL expression
    (2) expression -> . ID EQUAL STR_CONST
    (3) expression -> . ID EQUAL ID
    (4) expression -> . ID PLUS EQUAL INT
    (5) expression -> . expression PLUS term
    (6) expression -> . PRINT PARANOPEN STR_CONST PARANCLOSE
    (7) expression -> . PRINT PARANOPEN ID PARANCLOSE
    (8) expression -> . PRINT PARANOPEN term PARANCLOSE
    (9) expression -> . expression MINUS term
    (10) expression -> . ID MINUS EQUAL term
    (11) expression -> . MINUS term
    (12) expression -> . term
    (19) expression -> . whileloop
    (20) expression -> . forloop
    (21) expression -> . forloop2
    (22) expression -> . whileloop2
    (71) expression -> . LEVEL2 ID EQUAL INT
    (72) expression -> . LEVEL1 ID EQUAL INT
    (73) expression -> . LEVEL2 PRINT PARANOPEN STR_CONST PARANCLOSE
    (74) expression -> . LEVEL2 PRINT PARANOPEN ID PARANCLOSE
    (75) expression -> . LEVEL2 PRINT PARANOPEN term PARANCLOSE
    (76) expression -> . LEVEL1 PRINT PARANOPEN STR_CONST PARANCLOSE
    (77) expression -> . LEVEL1 PRINT PARANOPEN ID PARANCLOSE
    (78) expression -> . LEVEL1 PRINT PARANOPEN term PARANCLOSE
    (79) expression -> .
    (80) expression -> . HASH expression
    (81) expression -> . HASH ID
    (82) expression -> . HASH STR_CONST
    (13) term -> . term MULTIPLY factor
    (14) term -> . term DIVIDE factor
    (15) term -> . factor
    (42) whileloop -> . WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (43) whileloop -> . WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (44) whileloop -> . WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (45) whileloop -> . WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (46) whileloop -> . WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (47) whileloop -> . WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (48) whileloop -> . WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (49) whileloop -> . WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (50) whileloop -> . WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (51) whileloop -> . WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (52) whileloop -> . WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (53) whileloop -> . WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (54) whileloop -> . WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (55) whileloop -> . WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (56) whileloop -> . WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (57) whileloop -> . WHILE BOOL COLON
    (58) whileloop -> . WHILE STR_CONST COLON
    (59) whileloop -> . WHILE factor COLON
    (60) whileloop -> . WHILE ID COLON
    (66) forloop -> . FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (67) forloop -> . FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (68) forloop -> . FOR ID IN STR_CONST COLON
    (69) forloop -> . FOR ID IN ID COLON
    (70) forloop -> . FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (61) forloop2 -> . LEVEL1 FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON
    (62) forloop2 -> . LEVEL1 FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (63) forloop2 -> . LEVEL1 FOR ID IN STR_CONST COLON
    (64) forloop2 -> . LEVEL1 FOR ID IN ID COLON
    (65) forloop2 -> . LEVEL1 FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON
    (23) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON
    (24) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON
    (25) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON
    (26) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON
    (27) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON
    (28) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON
    (29) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON
    (30) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON
    (31) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON
    (32) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON
    (33) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON
    (34) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON
    (35) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON
    (36) whileloop2 -> . LEVEL1 WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON
    (37) whileloop2 -> . WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON
    (38) whileloop2 -> . LEVEL1 WHILE BOOL COLON
    (39) whileloop2 -> . LEVEL1 WHILE STR_CONST COLON
    (40) whileloop2 -> . LEVEL1 WHILE factor COLON
    (41) whileloop2 -> . LEVEL1 WHILE ID COLON

  ! shift/reduce conflict for MINUS resolved as shift
    STR_CONST       shift and go to state 141
    ID              shift and go to state 139
    INT             shift and go to state 3
    FLOAT           shift and go to state 18
    PARANOPEN       shift and go to state 6
    PRINT           shift and go to state 5
    MINUS           shift and go to state 7
    LEVEL2          shift and go to state 12
    LEVEL1          shift and go to state 13
    PLUS            reduce using rule 79 (expression -> .)
    PARANCLOSE      reduce using rule 79 (expression -> .)
    HASH            shift and go to state 14
    WHILE           shift and go to state 16
    FOR             shift and go to state 17

  ! MINUS           [ reduce using rule 79 (expression -> .) ]

    factor                         shift and go to state 140
    expression                     shift and go to state 47
    term                           shift and go to state 4
    whileloop                      shift and go to state 8
    forloop                        shift and go to state 9
    forloop2                       shift and go to state 10
    whileloop2                     shift and go to state 11

state 112

    (26) whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER . factor PARANCLOSE COLON
    (27) whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER . STR_CONST PARANCLOSE COLON
    (28) whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER . ID PARANCLOSE COLON
    (16) factor -> . INT
    (17) factor -> . FLOAT
    (18) factor -> . PARANOPEN expression PARANCLOSE

    STR_CONST       shift and go to state 144
    ID              shift and go to state 142
    INT             shift and go to state 3
    FLOAT           shift and go to state 18
    PARANOPEN       shift and go to state 6

    factor                         shift and go to state 143

state 113

    (29) whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ . factor PARANCLOSE COLON
    (30) whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ . STR_CONST PARANCLOSE COLON
    (31) whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ . ID PARANCLOSE COLON
    (16) factor -> . INT
    (17) factor -> . FLOAT
    (18) factor -> . PARANOPEN expression PARANCLOSE

    STR_CONST       shift and go to state 147
    ID              shift and go to state 145
    INT             shift and go to state 3
    FLOAT           shift and go to state 18
    PARANOPEN       shift and go to state 6

    factor                         shift and go to state 146

state 114

    (32) whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER . factor PARANCLOSE COLON
    (33) whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER . STR_CONST PARANCLOSE COLON
    (34) whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER . ID PARANCLOSE COLON
    (16) factor -> . INT
    (17) factor -> . FLOAT
    (18) factor -> . PARANOPEN expression PARANCLOSE

    STR_CONST       shift and go to state 150
    ID              shift and go to state 148
    INT             shift and go to state 3
    FLOAT           shift and go to state 18
    PARANOPEN       shift and go to state 6

    factor                         shift and go to state 149

state 115

    (35) whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSEREQ . factor PARANCLOSE COLON
    (36) whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSEREQ . STR_CONST PARANCLOSE COLON
    (16) factor -> . INT
    (17) factor -> . FLOAT
    (18) factor -> . PARANOPEN expression PARANCLOSE

    STR_CONST       shift and go to state 152
    INT             shift and go to state 3
    FLOAT           shift and go to state 18
    PARANOPEN       shift and go to state 6

    factor                         shift and go to state 151

state 116

    (44) whileloop -> WHILE PARANOPEN ID EQUAL ID . PARANCLOSE COLON
    (3) expression -> ID EQUAL ID .
    (1) expression -> ID . EQUAL expression
    (2) expression -> ID . EQUAL STR_CONST
    (3) expression -> ID . EQUAL ID
    (4) expression -> ID . PLUS EQUAL INT
    (10) expression -> ID . MINUS EQUAL term

  ! shift/reduce conflict for PARANCLOSE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    PARANCLOSE      shift and go to state 153
    EQUAL           shift and go to state 21
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23

  ! PARANCLOSE      [ reduce using rule 3 (expression -> ID EQUAL ID .) ]
  ! PLUS            [ reduce using rule 3 (expression -> ID EQUAL ID .) ]
  ! MINUS           [ reduce using rule 3 (expression -> ID EQUAL ID .) ]


state 117

    (42) whileloop -> WHILE PARANOPEN ID EQUAL factor . PARANCLOSE COLON
    (15) term -> factor .

  ! shift/reduce conflict for PARANCLOSE resolved as shift
    PARANCLOSE      shift and go to state 154
    MULTIPLY        reduce using rule 15 (term -> factor .)
    DIVIDE          reduce using rule 15 (term -> factor .)
    PLUS            reduce using rule 15 (term -> factor .)
    MINUS           reduce using rule 15 (term -> factor .)

  ! PARANCLOSE      [ reduce using rule 15 (term -> factor .) ]


state 118

    (43) whileloop -> WHILE PARANOPEN ID EQUAL STR_CONST . PARANCLOSE COLON
    (2) expression -> ID EQUAL STR_CONST .

  ! shift/reduce conflict for PARANCLOSE resolved as shift
    PARANCLOSE      shift and go to state 155
    PLUS            reduce using rule 2 (expression -> ID EQUAL STR_CONST .)
    MINUS           reduce using rule 2 (expression -> ID EQUAL STR_CONST .)

  ! PARANCLOSE      [ reduce using rule 2 (expression -> ID EQUAL STR_CONST .) ]


state 119

    (47) whileloop -> WHILE PARANOPEN ID GREATER ID . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 156


state 120

    (45) whileloop -> WHILE PARANOPEN ID GREATER factor . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 157


state 121

    (46) whileloop -> WHILE PARANOPEN ID GREATER STR_CONST . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 158


state 122

    (50) whileloop -> WHILE PARANOPEN ID GREATEREQ ID . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 159


state 123

    (48) whileloop -> WHILE PARANOPEN ID GREATEREQ factor . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 160


state 124

    (49) whileloop -> WHILE PARANOPEN ID GREATEREQ STR_CONST . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 161


state 125

    (53) whileloop -> WHILE PARANOPEN ID LESSER ID . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 162


state 126

    (51) whileloop -> WHILE PARANOPEN ID LESSER factor . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 163


state 127

    (52) whileloop -> WHILE PARANOPEN ID LESSER STR_CONST . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 164


state 128

    (56) whileloop -> WHILE PARANOPEN ID LESSEREQ ID . PARANCLOSE COLON
    (37) whileloop2 -> WHILE PARANOPEN ID LESSEREQ ID . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 165


state 129

    (54) whileloop -> WHILE PARANOPEN ID LESSEREQ factor . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 166


state 130

    (55) whileloop -> WHILE PARANOPEN ID LESSEREQ STR_CONST . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 167


state 131

    (69) forloop -> FOR ID IN ID COLON .

    PLUS            reduce using rule 69 (forloop -> FOR ID IN ID COLON .)
    MINUS           reduce using rule 69 (forloop -> FOR ID IN ID COLON .)
    $end            reduce using rule 69 (forloop -> FOR ID IN ID COLON .)
    PARANCLOSE      reduce using rule 69 (forloop -> FOR ID IN ID COLON .)


state 132

    (66) forloop -> FOR ID IN RANGE PARANOPEN . term PARANCLOSE COLON
    (67) forloop -> FOR ID IN RANGE PARANOPEN . LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (13) term -> . term MULTIPLY factor
    (14) term -> . term DIVIDE factor
    (15) term -> . factor
    (16) factor -> . INT
    (17) factor -> . FLOAT
    (18) factor -> . PARANOPEN expression PARANCLOSE

    LEN             shift and go to state 169
    INT             shift and go to state 3
    FLOAT           shift and go to state 18
    PARANOPEN       shift and go to state 6

    term                           shift and go to state 168
    factor                         shift and go to state 15

state 133

    (70) forloop -> FOR ID IN PARANOPEN STR_CONST . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 170


state 134

    (68) forloop -> FOR ID IN STR_CONST COLON .

    PLUS            reduce using rule 68 (forloop -> FOR ID IN STR_CONST COLON .)
    MINUS           reduce using rule 68 (forloop -> FOR ID IN STR_CONST COLON .)
    $end            reduce using rule 68 (forloop -> FOR ID IN STR_CONST COLON .)
    PARANCLOSE      reduce using rule 68 (forloop -> FOR ID IN STR_CONST COLON .)


state 135

    (64) forloop2 -> LEVEL1 FOR ID IN ID COLON .

    PLUS            reduce using rule 64 (forloop2 -> LEVEL1 FOR ID IN ID COLON .)
    MINUS           reduce using rule 64 (forloop2 -> LEVEL1 FOR ID IN ID COLON .)
    $end            reduce using rule 64 (forloop2 -> LEVEL1 FOR ID IN ID COLON .)
    PARANCLOSE      reduce using rule 64 (forloop2 -> LEVEL1 FOR ID IN ID COLON .)


state 136

    (61) forloop2 -> LEVEL1 FOR ID IN RANGE PARANOPEN . term PARANCLOSE COLON
    (62) forloop2 -> LEVEL1 FOR ID IN RANGE PARANOPEN . LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON
    (13) term -> . term MULTIPLY factor
    (14) term -> . term DIVIDE factor
    (15) term -> . factor
    (16) factor -> . INT
    (17) factor -> . FLOAT
    (18) factor -> . PARANOPEN expression PARANCLOSE

    LEN             shift and go to state 172
    INT             shift and go to state 3
    FLOAT           shift and go to state 18
    PARANOPEN       shift and go to state 6

    term                           shift and go to state 171
    factor                         shift and go to state 15

state 137

    (65) forloop2 -> LEVEL1 FOR ID IN PARANOPEN STR_CONST . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 173


state 138

    (63) forloop2 -> LEVEL1 FOR ID IN STR_CONST COLON .

    PLUS            reduce using rule 63 (forloop2 -> LEVEL1 FOR ID IN STR_CONST COLON .)
    MINUS           reduce using rule 63 (forloop2 -> LEVEL1 FOR ID IN STR_CONST COLON .)
    $end            reduce using rule 63 (forloop2 -> LEVEL1 FOR ID IN STR_CONST COLON .)
    PARANCLOSE      reduce using rule 63 (forloop2 -> LEVEL1 FOR ID IN STR_CONST COLON .)


state 139

    (25) whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL ID . PARANCLOSE COLON
    (3) expression -> ID EQUAL ID .
    (1) expression -> ID . EQUAL expression
    (2) expression -> ID . EQUAL STR_CONST
    (3) expression -> ID . EQUAL ID
    (4) expression -> ID . PLUS EQUAL INT
    (10) expression -> ID . MINUS EQUAL term

  ! shift/reduce conflict for PARANCLOSE resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    PARANCLOSE      shift and go to state 174
    EQUAL           shift and go to state 21
    PLUS            shift and go to state 22
    MINUS           shift and go to state 23

  ! PARANCLOSE      [ reduce using rule 3 (expression -> ID EQUAL ID .) ]
  ! PLUS            [ reduce using rule 3 (expression -> ID EQUAL ID .) ]
  ! MINUS           [ reduce using rule 3 (expression -> ID EQUAL ID .) ]


state 140

    (23) whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL factor . PARANCLOSE COLON
    (15) term -> factor .

  ! shift/reduce conflict for PARANCLOSE resolved as shift
    PARANCLOSE      shift and go to state 175
    MULTIPLY        reduce using rule 15 (term -> factor .)
    DIVIDE          reduce using rule 15 (term -> factor .)
    PLUS            reduce using rule 15 (term -> factor .)
    MINUS           reduce using rule 15 (term -> factor .)

  ! PARANCLOSE      [ reduce using rule 15 (term -> factor .) ]


state 141

    (24) whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL STR_CONST . PARANCLOSE COLON
    (2) expression -> ID EQUAL STR_CONST .

  ! shift/reduce conflict for PARANCLOSE resolved as shift
    PARANCLOSE      shift and go to state 176
    PLUS            reduce using rule 2 (expression -> ID EQUAL STR_CONST .)
    MINUS           reduce using rule 2 (expression -> ID EQUAL STR_CONST .)

  ! PARANCLOSE      [ reduce using rule 2 (expression -> ID EQUAL STR_CONST .) ]


state 142

    (28) whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER ID . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 177


state 143

    (26) whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER factor . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 178


state 144

    (27) whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER STR_CONST . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 179


state 145

    (31) whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ ID . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 180


state 146

    (29) whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ factor . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 181


state 147

    (30) whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ STR_CONST . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 182


state 148

    (34) whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER ID . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 183


state 149

    (32) whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER factor . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 184


state 150

    (33) whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER STR_CONST . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 185


state 151

    (35) whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSEREQ factor . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 186


state 152

    (36) whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSEREQ STR_CONST . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 187


state 153

    (44) whileloop -> WHILE PARANOPEN ID EQUAL ID PARANCLOSE . COLON

    COLON           shift and go to state 188


state 154

    (42) whileloop -> WHILE PARANOPEN ID EQUAL factor PARANCLOSE . COLON

    COLON           shift and go to state 189


state 155

    (43) whileloop -> WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE . COLON

    COLON           shift and go to state 190


state 156

    (47) whileloop -> WHILE PARANOPEN ID GREATER ID PARANCLOSE . COLON

    COLON           shift and go to state 191


state 157

    (45) whileloop -> WHILE PARANOPEN ID GREATER factor PARANCLOSE . COLON

    COLON           shift and go to state 192


state 158

    (46) whileloop -> WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE . COLON

    COLON           shift and go to state 193


state 159

    (50) whileloop -> WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE . COLON

    COLON           shift and go to state 194


state 160

    (48) whileloop -> WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE . COLON

    COLON           shift and go to state 195


state 161

    (49) whileloop -> WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE . COLON

    COLON           shift and go to state 196


state 162

    (53) whileloop -> WHILE PARANOPEN ID LESSER ID PARANCLOSE . COLON

    COLON           shift and go to state 197


state 163

    (51) whileloop -> WHILE PARANOPEN ID LESSER factor PARANCLOSE . COLON

    COLON           shift and go to state 198


state 164

    (52) whileloop -> WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE . COLON

    COLON           shift and go to state 199


state 165

    (56) whileloop -> WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE . COLON
    (37) whileloop2 -> WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE . COLON

    COLON           shift and go to state 200


state 166

    (54) whileloop -> WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE . COLON

    COLON           shift and go to state 201


state 167

    (55) whileloop -> WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE . COLON

    COLON           shift and go to state 202


state 168

    (66) forloop -> FOR ID IN RANGE PARANOPEN term . PARANCLOSE COLON
    (13) term -> term . MULTIPLY factor
    (14) term -> term . DIVIDE factor

    PARANCLOSE      shift and go to state 203
    MULTIPLY        shift and go to state 24
    DIVIDE          shift and go to state 25


state 169

    (67) forloop -> FOR ID IN RANGE PARANOPEN LEN . PARANOPEN ID PARANCLOSE PARANCLOSE COLON

    PARANOPEN       shift and go to state 204


state 170

    (70) forloop -> FOR ID IN PARANOPEN STR_CONST PARANCLOSE . COLON

    COLON           shift and go to state 205


state 171

    (61) forloop2 -> LEVEL1 FOR ID IN RANGE PARANOPEN term . PARANCLOSE COLON
    (13) term -> term . MULTIPLY factor
    (14) term -> term . DIVIDE factor

    PARANCLOSE      shift and go to state 206
    MULTIPLY        shift and go to state 24
    DIVIDE          shift and go to state 25


state 172

    (62) forloop2 -> LEVEL1 FOR ID IN RANGE PARANOPEN LEN . PARANOPEN ID PARANCLOSE PARANCLOSE COLON

    PARANOPEN       shift and go to state 207


state 173

    (65) forloop2 -> LEVEL1 FOR ID IN PARANOPEN STR_CONST PARANCLOSE . COLON

    COLON           shift and go to state 208


state 174

    (25) whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL ID PARANCLOSE . COLON

    COLON           shift and go to state 209


state 175

    (23) whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL factor PARANCLOSE . COLON

    COLON           shift and go to state 210


state 176

    (24) whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE . COLON

    COLON           shift and go to state 211


state 177

    (28) whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER ID PARANCLOSE . COLON

    COLON           shift and go to state 212


state 178

    (26) whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER factor PARANCLOSE . COLON

    COLON           shift and go to state 213


state 179

    (27) whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE . COLON

    COLON           shift and go to state 214


state 180

    (31) whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE . COLON

    COLON           shift and go to state 215


state 181

    (29) whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE . COLON

    COLON           shift and go to state 216


state 182

    (30) whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE . COLON

    COLON           shift and go to state 217


state 183

    (34) whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER ID PARANCLOSE . COLON

    COLON           shift and go to state 218


state 184

    (32) whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER factor PARANCLOSE . COLON

    COLON           shift and go to state 219


state 185

    (33) whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE . COLON

    COLON           shift and go to state 220


state 186

    (35) whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE . COLON

    COLON           shift and go to state 221


state 187

    (36) whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE . COLON

    COLON           shift and go to state 222


state 188

    (44) whileloop -> WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON .

    PLUS            reduce using rule 44 (whileloop -> WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON .)
    MINUS           reduce using rule 44 (whileloop -> WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON .)
    $end            reduce using rule 44 (whileloop -> WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 44 (whileloop -> WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON .)


state 189

    (42) whileloop -> WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON .

    PLUS            reduce using rule 42 (whileloop -> WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON .)
    MINUS           reduce using rule 42 (whileloop -> WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON .)
    $end            reduce using rule 42 (whileloop -> WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 42 (whileloop -> WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON .)


state 190

    (43) whileloop -> WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON .

    PLUS            reduce using rule 43 (whileloop -> WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON .)
    MINUS           reduce using rule 43 (whileloop -> WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON .)
    $end            reduce using rule 43 (whileloop -> WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 43 (whileloop -> WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON .)


state 191

    (47) whileloop -> WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON .

    PLUS            reduce using rule 47 (whileloop -> WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON .)
    MINUS           reduce using rule 47 (whileloop -> WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON .)
    $end            reduce using rule 47 (whileloop -> WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 47 (whileloop -> WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON .)


state 192

    (45) whileloop -> WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON .

    PLUS            reduce using rule 45 (whileloop -> WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON .)
    MINUS           reduce using rule 45 (whileloop -> WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON .)
    $end            reduce using rule 45 (whileloop -> WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 45 (whileloop -> WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON .)


state 193

    (46) whileloop -> WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON .

    PLUS            reduce using rule 46 (whileloop -> WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON .)
    MINUS           reduce using rule 46 (whileloop -> WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON .)
    $end            reduce using rule 46 (whileloop -> WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 46 (whileloop -> WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON .)


state 194

    (50) whileloop -> WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON .

    PLUS            reduce using rule 50 (whileloop -> WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON .)
    MINUS           reduce using rule 50 (whileloop -> WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON .)
    $end            reduce using rule 50 (whileloop -> WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 50 (whileloop -> WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON .)


state 195

    (48) whileloop -> WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON .

    PLUS            reduce using rule 48 (whileloop -> WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON .)
    MINUS           reduce using rule 48 (whileloop -> WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON .)
    $end            reduce using rule 48 (whileloop -> WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 48 (whileloop -> WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON .)


state 196

    (49) whileloop -> WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON .

    PLUS            reduce using rule 49 (whileloop -> WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON .)
    MINUS           reduce using rule 49 (whileloop -> WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON .)
    $end            reduce using rule 49 (whileloop -> WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 49 (whileloop -> WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON .)


state 197

    (53) whileloop -> WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON .

    PLUS            reduce using rule 53 (whileloop -> WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON .)
    MINUS           reduce using rule 53 (whileloop -> WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON .)
    $end            reduce using rule 53 (whileloop -> WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 53 (whileloop -> WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON .)


state 198

    (51) whileloop -> WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON .

    PLUS            reduce using rule 51 (whileloop -> WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON .)
    MINUS           reduce using rule 51 (whileloop -> WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON .)
    $end            reduce using rule 51 (whileloop -> WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 51 (whileloop -> WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON .)


state 199

    (52) whileloop -> WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON .

    PLUS            reduce using rule 52 (whileloop -> WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON .)
    MINUS           reduce using rule 52 (whileloop -> WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON .)
    $end            reduce using rule 52 (whileloop -> WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 52 (whileloop -> WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON .)


state 200

    (56) whileloop -> WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON .
    (37) whileloop2 -> WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON .

  ! reduce/reduce conflict for PLUS resolved using rule 37 (whileloop2 -> WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON .)
  ! reduce/reduce conflict for MINUS resolved using rule 37 (whileloop2 -> WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON .)
  ! reduce/reduce conflict for $end resolved using rule 37 (whileloop2 -> WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON .)
  ! reduce/reduce conflict for PARANCLOSE resolved using rule 37 (whileloop2 -> WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON .)
    PLUS            reduce using rule 37 (whileloop2 -> WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON .)
    MINUS           reduce using rule 37 (whileloop2 -> WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON .)
    $end            reduce using rule 37 (whileloop2 -> WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 37 (whileloop2 -> WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON .)

  ! PLUS            [ reduce using rule 56 (whileloop -> WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON .) ]
  ! MINUS           [ reduce using rule 56 (whileloop -> WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON .) ]
  ! $end            [ reduce using rule 56 (whileloop -> WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON .) ]
  ! PARANCLOSE      [ reduce using rule 56 (whileloop -> WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON .) ]


state 201

    (54) whileloop -> WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON .

    PLUS            reduce using rule 54 (whileloop -> WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON .)
    MINUS           reduce using rule 54 (whileloop -> WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON .)
    $end            reduce using rule 54 (whileloop -> WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 54 (whileloop -> WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON .)


state 202

    (55) whileloop -> WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON .

    PLUS            reduce using rule 55 (whileloop -> WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON .)
    MINUS           reduce using rule 55 (whileloop -> WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON .)
    $end            reduce using rule 55 (whileloop -> WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 55 (whileloop -> WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON .)


state 203

    (66) forloop -> FOR ID IN RANGE PARANOPEN term PARANCLOSE . COLON

    COLON           shift and go to state 223


state 204

    (67) forloop -> FOR ID IN RANGE PARANOPEN LEN PARANOPEN . ID PARANCLOSE PARANCLOSE COLON

    ID              shift and go to state 224


state 205

    (70) forloop -> FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON .

    PLUS            reduce using rule 70 (forloop -> FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON .)
    MINUS           reduce using rule 70 (forloop -> FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON .)
    $end            reduce using rule 70 (forloop -> FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 70 (forloop -> FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON .)


state 206

    (61) forloop2 -> LEVEL1 FOR ID IN RANGE PARANOPEN term PARANCLOSE . COLON

    COLON           shift and go to state 225


state 207

    (62) forloop2 -> LEVEL1 FOR ID IN RANGE PARANOPEN LEN PARANOPEN . ID PARANCLOSE PARANCLOSE COLON

    ID              shift and go to state 226


state 208

    (65) forloop2 -> LEVEL1 FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON .

    PLUS            reduce using rule 65 (forloop2 -> LEVEL1 FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON .)
    MINUS           reduce using rule 65 (forloop2 -> LEVEL1 FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON .)
    $end            reduce using rule 65 (forloop2 -> LEVEL1 FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 65 (forloop2 -> LEVEL1 FOR ID IN PARANOPEN STR_CONST PARANCLOSE COLON .)


state 209

    (25) whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON .

    PLUS            reduce using rule 25 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON .)
    MINUS           reduce using rule 25 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON .)
    $end            reduce using rule 25 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 25 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL ID PARANCLOSE COLON .)


state 210

    (23) whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON .

    PLUS            reduce using rule 23 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON .)
    MINUS           reduce using rule 23 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON .)
    $end            reduce using rule 23 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 23 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL factor PARANCLOSE COLON .)


state 211

    (24) whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON .

    PLUS            reduce using rule 24 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON .)
    MINUS           reduce using rule 24 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON .)
    $end            reduce using rule 24 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 24 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID EQUAL STR_CONST PARANCLOSE COLON .)


state 212

    (28) whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON .

    PLUS            reduce using rule 28 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON .)
    MINUS           reduce using rule 28 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON .)
    $end            reduce using rule 28 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 28 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER ID PARANCLOSE COLON .)


state 213

    (26) whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON .

    PLUS            reduce using rule 26 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON .)
    MINUS           reduce using rule 26 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON .)
    $end            reduce using rule 26 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 26 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER factor PARANCLOSE COLON .)


state 214

    (27) whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON .

    PLUS            reduce using rule 27 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON .)
    MINUS           reduce using rule 27 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON .)
    $end            reduce using rule 27 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 27 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATER STR_CONST PARANCLOSE COLON .)


state 215

    (31) whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON .

    PLUS            reduce using rule 31 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON .)
    MINUS           reduce using rule 31 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON .)
    $end            reduce using rule 31 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 31 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ ID PARANCLOSE COLON .)


state 216

    (29) whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON .

    PLUS            reduce using rule 29 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON .)
    MINUS           reduce using rule 29 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON .)
    $end            reduce using rule 29 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 29 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ factor PARANCLOSE COLON .)


state 217

    (30) whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON .

    PLUS            reduce using rule 30 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON .)
    MINUS           reduce using rule 30 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON .)
    $end            reduce using rule 30 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 30 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID GREATEREQ STR_CONST PARANCLOSE COLON .)


state 218

    (34) whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON .

    PLUS            reduce using rule 34 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON .)
    MINUS           reduce using rule 34 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON .)
    $end            reduce using rule 34 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 34 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER ID PARANCLOSE COLON .)


state 219

    (32) whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON .

    PLUS            reduce using rule 32 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON .)
    MINUS           reduce using rule 32 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON .)
    $end            reduce using rule 32 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 32 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER factor PARANCLOSE COLON .)


state 220

    (33) whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON .

    PLUS            reduce using rule 33 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON .)
    MINUS           reduce using rule 33 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON .)
    $end            reduce using rule 33 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 33 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSER STR_CONST PARANCLOSE COLON .)


state 221

    (35) whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON .

    PLUS            reduce using rule 35 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON .)
    MINUS           reduce using rule 35 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON .)
    $end            reduce using rule 35 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 35 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSEREQ factor PARANCLOSE COLON .)


state 222

    (36) whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON .

    PLUS            reduce using rule 36 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON .)
    MINUS           reduce using rule 36 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON .)
    $end            reduce using rule 36 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 36 (whileloop2 -> LEVEL1 WHILE PARANOPEN ID LESSEREQ STR_CONST PARANCLOSE COLON .)


state 223

    (66) forloop -> FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON .

    PLUS            reduce using rule 66 (forloop -> FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON .)
    MINUS           reduce using rule 66 (forloop -> FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON .)
    $end            reduce using rule 66 (forloop -> FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 66 (forloop -> FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON .)


state 224

    (67) forloop -> FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID . PARANCLOSE PARANCLOSE COLON

    PARANCLOSE      shift and go to state 227


state 225

    (61) forloop2 -> LEVEL1 FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON .

    PLUS            reduce using rule 61 (forloop2 -> LEVEL1 FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON .)
    MINUS           reduce using rule 61 (forloop2 -> LEVEL1 FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON .)
    $end            reduce using rule 61 (forloop2 -> LEVEL1 FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 61 (forloop2 -> LEVEL1 FOR ID IN RANGE PARANOPEN term PARANCLOSE COLON .)


state 226

    (62) forloop2 -> LEVEL1 FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID . PARANCLOSE PARANCLOSE COLON

    PARANCLOSE      shift and go to state 228


state 227

    (67) forloop -> FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 229


state 228

    (62) forloop2 -> LEVEL1 FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE . PARANCLOSE COLON

    PARANCLOSE      shift and go to state 230


state 229

    (67) forloop -> FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE . COLON

    COLON           shift and go to state 231


state 230

    (62) forloop2 -> LEVEL1 FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE . COLON

    COLON           shift and go to state 232


state 231

    (67) forloop -> FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON .

    PLUS            reduce using rule 67 (forloop -> FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON .)
    MINUS           reduce using rule 67 (forloop -> FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON .)
    $end            reduce using rule 67 (forloop -> FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 67 (forloop -> FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON .)


state 232

    (62) forloop2 -> LEVEL1 FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON .

    PLUS            reduce using rule 62 (forloop2 -> LEVEL1 FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON .)
    MINUS           reduce using rule 62 (forloop2 -> LEVEL1 FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON .)
    $end            reduce using rule 62 (forloop2 -> LEVEL1 FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON .)
    PARANCLOSE      reduce using rule 62 (forloop2 -> LEVEL1 FOR ID IN RANGE PARANOPEN LEN PARANOPEN ID PARANCLOSE PARANCLOSE COLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MINUS in state 0 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 6 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 14 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 21 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 35 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 35 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 36 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 36 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 38 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 46 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 46 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 47 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 47 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 62 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 92 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 111 resolved as shift
WARNING: shift/reduce conflict for PARANCLOSE in state 116 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 116 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 116 resolved as shift
WARNING: shift/reduce conflict for PARANCLOSE in state 117 resolved as shift
WARNING: shift/reduce conflict for PARANCLOSE in state 118 resolved as shift
WARNING: shift/reduce conflict for PARANCLOSE in state 139 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 139 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 139 resolved as shift
WARNING: shift/reduce conflict for PARANCLOSE in state 140 resolved as shift
WARNING: shift/reduce conflict for PARANCLOSE in state 141 resolved as shift
WARNING: reduce/reduce conflict in state 200 resolved using rule (whileloop2 -> WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON)
WARNING: rejected rule (whileloop -> WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON) in state 200
WARNING: Rule (whileloop -> WHILE PARANOPEN ID LESSEREQ ID PARANCLOSE COLON) is never reduced
